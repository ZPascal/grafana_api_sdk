{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Grafana API SDK","text":"<p>The repository includes an SDK for the Grafana API. It's possible to interact with all publicly available Grafana HTTP API endpoints.</p> <p>The core features that are implemented inside this SDK:</p> <ul> <li>All public Grafana API (HTTP) endpoints are supported</li> <li>Full API support for Grafana legacy alerting, current alerting, alerting channels, and alert provisioning</li> <li>Possibility to specify custom and self-signed certificates</li> <li>HTTP/2 support</li> </ul>"},{"location":"#supported-features","title":"Supported Features","text":"<p>The following list describes the currently supported features of the Grafana API functionality.</p> <ul> <li> Admin HTTP API</li> <li> Legacy Alerting HTTP API</li> <li> Alerting HTTP API</li> <li> Alerting Notification Channels HTTP API </li> <li> Annotations HTTP API</li> <li> Authentication HTTP API</li> <li> Dashboard</li> <li> Dashboard Permissions</li> <li> Dashboard Versions</li> <li> Public Dashboard</li> <li> Data source HTTP API</li> <li> Datasource query and resource caching</li> <li> Datasource Permissions HTTP API</li> <li> Folder HTTP API</li> <li> Folder Permissions HTTP API</li> <li> Search HTTP API</li> <li> External Group Sync HTTP API</li> <li> Access control HTTP API</li> <li> HTTP Preferences API</li> <li> HTTP Snapshot API</li> <li> Library Element HTTP API</li> <li> Query History API</li> <li> Licensing HTTP API</li> <li> Organization HTTP API</li> <li> Other HTTP API</li> <li> Playlist HTTP API</li> <li> Reporting API</li> <li> Short URL HTTP API</li> <li> SSO Settings</li> <li> Team HTTP API</li> <li> Team Sync</li> <li> User HTTP API</li> <li> Service Account HTTP API</li> <li> RBAC HTTP API</li> <li> Correlations API</li> <li> Alerting Provisioning HTTP API</li> </ul>"},{"location":"#installation","title":"Installation","text":"<p>Please be aware to not install the <code>grafana-api</code> and <code>grafana-api-sdk</code> packages in parallel and the same environment. This result in name clashes, and it's not possible to use the Grafana API SDK.</p> <p><code>pip install grafana-api-sdk</code></p>"},{"location":"#example","title":"Example","text":"<pre><code>import json\n\nfrom grafana_api.model import APIModel\nfrom grafana_api.dashboard import Dashboard\n\nmodel: APIModel = APIModel(host=\"test\", token=\"test\")\n\ndashboard: Dashboard = Dashboard(model)\n\nwith open(\"/tmp/test/test.json\") as file:\n    json_dashboard = json.load(file)\n\ndashboard.create_or_update_dashboard(message=\"Create a new test dashboard\", dashboard_json=json_dashboard, dashboard_path=\"test\")\n</code></pre>"},{"location":"#tls-mtls-for-http11","title":"TLS/ mTLS for HTTP/1.1","text":"<p>It is possible to pass a custom ssl_context to the underlying library to perform the requests to the HTTP API. For this step and to support custom TLS/ mTLS, there is an option to inject the Python ssl_context. More information can be found here and a dummy TLS/ mTLS implementation below.</p>"},{"location":"#tls","title":"TLS","text":"<pre><code>import ssl\n\nfrom grafana_api.model import APIModel\n\nssl_ctx = ssl.create_default_context(\n    ssl.Purpose.SERVER_AUTH,\n    cafile=\"/test/path/ca.crt\"\n)\nssl_ctx.verify_mode = ssl.CERT_REQUIRED\n\nmodel: APIModel = APIModel(host=\"test\", token=\"test\", ssl_context=ssl_ctx)\n</code></pre>"},{"location":"#mtls","title":"mTLS","text":"<pre><code>import ssl\n\nfrom grafana_api.model import APIModel\n\nssl_ctx = ssl.create_default_context(\n    ssl.Purpose.SERVER_AUTH,\n    cafile=\"/test/path/ca.crt\",\n)\nssl_ctx.verify_mode = ssl.CERT_REQUIRED\nssl_ctx.load_cert_chain(certfile=\"/test/path/client.crt\", keyfile=\"/test/path/client.key\")\n\nmodel: APIModel = APIModel(host=\"test\", token=\"test\", ssl_context=ssl_ctx)\n</code></pre>"},{"location":"#tls-mtls-for-http2","title":"TLS/ mTLS for HTTP/2","text":"<p>It is possible to pass a custom HTTP/2 conform ssl_context to the underlying library to perform the requests to the HTTP API. For this step and to support custom TLS/ mTLS, there is an option to create the ssl_context by the execution of <code>httpx.create_ssl_context()</code> function. More information can be found here and a dummy TLS/ mTLS implementation below.</p>"},{"location":"#tls_1","title":"TLS","text":"<pre><code>import httpx\n\nfrom grafana_api.model import APIModel\n\nssl_ctx = httpx.create_ssl_context(\n    verify=\"/test/path/ca.crt\",\n    http2=True,\n)\n\nmodel: APIModel = APIModel(host=\"test\", token=\"test\", ssl_context=ssl_ctx)\n</code></pre>"},{"location":"#mtls_1","title":"mTLS","text":"<pre><code>import httpx\n\nfrom grafana_api.model import APIModel\n\nssl_ctx = httpx.create_ssl_context(\n    cert=(\"/test/path/client.crt\", \"/test/path/client.key\"),\n    verify=\"/test/path/ca.crt\",\n    http2=True,\n)\n\nmodel: APIModel = APIModel(host=\"test\", token=\"test\", ssl_context=ssl_ctx)\n</code></pre>"},{"location":"#templating","title":"Templating","text":"<p>If you want to template your JSON document based on a predefined folder structure you can check out one of my other project and integrate the functionality inside your code.</p>"},{"location":"grafana_api/admin/","title":"Table of Contents","text":"<ul> <li>admin</li> <li>Admin<ul> <li>get_settings</li> <li>update_settings</li> <li>get_stats</li> <li>get_preview_report</li> <li>create_global_user</li> <li>update_user_password</li> <li>update_user_permissions</li> <li>delete_global_user</li> <li>pause_all_alerts</li> <li>unpause_all_alerts</li> <li>get_user_auth_token</li> <li>revoke_user_auth_token</li> <li>logout_user</li> <li>reload_dashboards_provisioning_configuration</li> <li>reload_datasources_provisioning_configuration</li> <li>reload_plugins_provisioning_configuration</li> <li>reload_notifications_provisioning_configuration</li> <li>reload_access_controls_provisioning_configuration</li> <li>reload_ldap_configuration</li> <li>rotate_data_encryption_keys</li> </ul> </li> </ul>"},{"location":"grafana_api/admin/#admin","title":"admin","text":""},{"location":"grafana_api/admin/#admin-objects","title":"Admin Objects","text":"<pre><code>class Admin()\n</code></pre> <p>The class includes all necessary methods to access the Grafana admin API endpoints. Be aware that all functionalities inside the class only working with basic authentication (username and password) and that the authenticated user is a Grafana Admin.</p> <p>HINT: Note Grafana Enterprise API need required permissions if fine-grained access control is enabled</p> <p>Arguments:</p> <ul> <li><code>grafana_api_model</code> APIModel - Inject a Grafana API model object that includes all necessary values and information</li> </ul> <p>Attributes:</p> <ul> <li><code>grafana_api_model</code> APIModel - This is where we store the grafana_api_model</li> </ul> <p></p>"},{"location":"grafana_api/admin/#get_settings","title":"get_settings","text":"<pre><code>def get_settings() -&gt; dict\n</code></pre> <p>The method includes a functionality to get the settings</p> <p>Raises:</p> <ul> <li><code>Exception</code> - Unspecified error by executing the API call</li> </ul> <p>Returns:</p> <ul> <li><code>api_call</code> dict - Returns the corresponding settings</li> </ul> <p></p>"},{"location":"grafana_api/admin/#update_settings","title":"update_settings","text":"<pre><code>def update_settings(updates: dict = None, removals: dict = None)\n</code></pre> <p>The method includes a functionality to update the settings. Be aware that the functionality is a Grafana v8.0+ feature and you can find detailed information about the dict values here: https://grafana.com/docs/grafana/latest/developers/http_api/admin/<code>update</code>-settings</p> <p>Arguments:</p> <ul> <li><code>updates</code> dict - Specify the updates object</li> <li><code>removals</code> dict - Specify the removals object</li> </ul> <p>Raises:</p> <ul> <li><code>Exception</code> - Unspecified error by executing the API call</li> </ul> <p>Returns:</p> <p>None</p> <p></p>"},{"location":"grafana_api/admin/#get_stats","title":"get_stats","text":"<pre><code>def get_stats() -&gt; dict\n</code></pre> <p>The method includes a functionality to get the admin statistics</p> <p>Raises:</p> <ul> <li><code>Exception</code> - Unspecified error by executing the API call</li> </ul> <p>Returns:</p> <ul> <li><code>api_call</code> dict - Returns the corresponding statistics</li> </ul> <p></p>"},{"location":"grafana_api/admin/#get_preview_report","title":"get_preview_report","text":"<pre><code>def get_preview_report() -&gt; dict\n</code></pre> <p>The method includes a functionality to get a preview report</p> <p>Raises:</p> <ul> <li><code>Exception</code> - Unspecified error by executing the API call</li> </ul> <p>Returns:</p> <ul> <li><code>api_call</code> dict - Returns the preview report</li> </ul> <p></p>"},{"location":"grafana_api/admin/#create_global_user","title":"create_global_user","text":"<pre><code>def create_global_user(user: GlobalUser) -&gt; int\n</code></pre> <p>The method includes a functionality to create a global user</p> <p>Arguments:</p> <ul> <li><code>user</code> GlobalUser - Specify the global user object</li> </ul> <p>Raises:</p> <ul> <li><code>ValueError</code> - Missed specifying a necessary value</li> <li><code>Exception</code> - Unspecified error by executing the API call</li> </ul> <p>Returns:</p> <ul> <li><code>api_call</code> int - Returns the corresponding user id</li> </ul> <p></p>"},{"location":"grafana_api/admin/#update_user_password","title":"update_user_password","text":"<pre><code>def update_user_password(id: int, password: str)\n</code></pre> <p>The method includes a functionality to update the global user password</p> <p>Arguments:</p> <ul> <li><code>id</code> int - Specify the user id</li> <li><code>password</code> str - Specify the user new password</li> </ul> <p>Raises:</p> <ul> <li><code>ValueError</code> - Missed specifying a necessary value</li> <li><code>Exception</code> - Unspecified error by executing the API call</li> </ul> <p>Returns:</p> <p>None</p> <p></p>"},{"location":"grafana_api/admin/#update_user_permissions","title":"update_user_permissions","text":"<pre><code>def update_user_permissions(id: int, is_grafana_admin: bool = None)\n</code></pre> <p>The method includes a functionality to update the global user permissions</p> <p>Arguments:</p> <ul> <li><code>id</code> int - Specify the user id</li> <li><code>is_grafana_admin</code> bool - Specify if the user is admin or not</li> </ul> <p>Raises:</p> <ul> <li><code>ValueError</code> - Missed specifying a necessary value</li> <li><code>Exception</code> - Unspecified error by executing the API call</li> </ul> <p>Returns:</p> <p>None</p> <p></p>"},{"location":"grafana_api/admin/#delete_global_user","title":"delete_global_user","text":"<pre><code>def delete_global_user(id: int)\n</code></pre> <p>The method includes a functionality to delete a global user</p> <p>Arguments:</p> <ul> <li><code>id</code> int - Specify the user id</li> </ul> <p>Raises:</p> <ul> <li><code>ValueError</code> - Missed specifying a necessary value</li> <li><code>Exception</code> - Unspecified error by executing the API call</li> </ul> <p>Returns:</p> <p>None</p> <p></p>"},{"location":"grafana_api/admin/#pause_all_alerts","title":"pause_all_alerts","text":"<pre><code>def pause_all_alerts()\n</code></pre> <p>The method includes a functionality to pause all alerts</p> <p>Raises:</p> <ul> <li><code>ValueError</code> - Missed specifying a necessary value</li> <li><code>Exception</code> - Unspecified error by executing the API call</li> </ul> <p>Returns:</p> <p>None</p> <p></p>"},{"location":"grafana_api/admin/#unpause_all_alerts","title":"unpause_all_alerts","text":"<pre><code>def unpause_all_alerts()\n</code></pre> <p>The method includes a functionality to unpause all alerts</p> <p>Raises:</p> <ul> <li><code>ValueError</code> - Missed specifying a necessary value</li> <li><code>Exception</code> - Unspecified error by executing the API call</li> </ul> <p>Returns:</p> <p>None</p> <p></p>"},{"location":"grafana_api/admin/#get_user_auth_token","title":"get_user_auth_token","text":"<pre><code>def get_user_auth_token(id: int) -&gt; list\n</code></pre> <p>The method includes a functionality to get the corresponding user auth token</p> <p>Arguments:</p> <ul> <li><code>id</code> int - Specify the user id</li> </ul> <p>Raises:</p> <ul> <li><code>ValueError</code> - Missed specifying a necessary value</li> <li><code>Exception</code> - Unspecified error by executing the API call</li> </ul> <p>Returns:</p> <ul> <li><code>api_call</code> list - Returns the corresponding user auth tokens</li> </ul> <p></p>"},{"location":"grafana_api/admin/#revoke_user_auth_token","title":"revoke_user_auth_token","text":"<pre><code>def revoke_user_auth_token(id: int, auth_token_id: int)\n</code></pre> <p>The method includes a functionality to get the corresponding user auth token</p> <p>Arguments:</p> <ul> <li><code>id</code> int - Specify the user id</li> <li><code>auth_token_id</code> int - Specify the auth token id</li> </ul> <p>Raises:</p> <ul> <li><code>ValueError</code> - Missed specifying a necessary value</li> <li><code>Exception</code> - Unspecified error by executing the API call</li> </ul> <p>Returns:</p> <p>None</p> <p></p>"},{"location":"grafana_api/admin/#logout_user","title":"logout_user","text":"<pre><code>def logout_user(id: int)\n</code></pre> <p>The method includes a functionality to log out the corresponding user</p> <p>Arguments:</p> <ul> <li><code>id</code> int - Specify the user id</li> </ul> <p>Raises:</p> <ul> <li><code>ValueError</code> - Missed specifying a necessary value</li> <li><code>Exception</code> - Unspecified error by executing the API call</li> </ul> <p>Returns:</p> <p>None</p> <p></p>"},{"location":"grafana_api/admin/#reload_dashboards_provisioning_configuration","title":"reload_dashboards_provisioning_configuration","text":"<pre><code>def reload_dashboards_provisioning_configuration()\n</code></pre> <p>The method includes a functionality to reload the dashboards provisioning configuration</p> <p>Raises:</p> <ul> <li><code>Exception</code> - Unspecified error by executing the API call</li> </ul> <p>Returns:</p> <p>None</p> <p></p>"},{"location":"grafana_api/admin/#reload_datasources_provisioning_configuration","title":"reload_datasources_provisioning_configuration","text":"<pre><code>def reload_datasources_provisioning_configuration()\n</code></pre> <p>The method includes a functionality to reload the datasources provisioning configuration</p> <p>Raises:</p> <ul> <li><code>Exception</code> - Unspecified error by executing the API call</li> </ul> <p>Returns:</p> <p>None</p> <p></p>"},{"location":"grafana_api/admin/#reload_plugins_provisioning_configuration","title":"reload_plugins_provisioning_configuration","text":"<pre><code>def reload_plugins_provisioning_configuration()\n</code></pre> <p>The method includes a functionality to reload the plugins provisioning configuration</p> <p>Raises:</p> <ul> <li><code>Exception</code> - Unspecified error by executing the API call</li> </ul> <p>Returns:</p> <p>None</p> <p></p>"},{"location":"grafana_api/admin/#reload_notifications_provisioning_configuration","title":"reload_notifications_provisioning_configuration","text":"<pre><code>def reload_notifications_provisioning_configuration()\n</code></pre> <p>The method includes a functionality to reload the notifications provisioning configuration</p> <p>Raises:</p> <ul> <li><code>Exception</code> - Unspecified error by executing the API call</li> </ul> <p>Returns:</p> <p>None</p> <p></p>"},{"location":"grafana_api/admin/#reload_access_controls_provisioning_configuration","title":"reload_access_controls_provisioning_configuration","text":"<pre><code>def reload_access_controls_provisioning_configuration()\n</code></pre> <p>The method includes a functionality to reload the access-controls provisioning configuration</p> <p>Raises:</p> <ul> <li><code>Exception</code> - Unspecified error by executing the API call</li> </ul> <p>Returns:</p> <p>None</p> <p></p>"},{"location":"grafana_api/admin/#reload_ldap_configuration","title":"reload_ldap_configuration","text":"<pre><code>def reload_ldap_configuration()\n</code></pre> <p>The method includes a functionality to reload the ldap configuration</p> <p>Raises:</p> <ul> <li><code>Exception</code> - Unspecified error by executing the API call</li> </ul> <p>Returns:</p> <p>None</p> <p></p>"},{"location":"grafana_api/admin/#rotate_data_encryption_keys","title":"rotate_data_encryption_keys","text":"<pre><code>def rotate_data_encryption_keys()\n</code></pre> <p>The method includes a functionality to rotate the data encryption keys</p> <p>Raises:</p> <ul> <li><code>Exception</code> - Unspecified error by executing the API call</li> </ul> <p>Returns:</p> <p>None</p>"},{"location":"grafana_api/alerting-notifications/","title":"Table of Contents","text":"<ul> <li>alerting_notifications</li> <li>AlertingNotifications<ul> <li>get_all_notification_channels</li> <li>get_all_notification_channels_lookup</li> <li>get_notification_channel_by_uid</li> <li>get_notification_channel_by_id</li> <li>create_notification_channel</li> <li>update_notification_channel_by_uid</li> <li>update_notification_channel_by_id</li> <li>delete_notification_channel_by_uid</li> <li>delete_notification_channel_by_id</li> <li>test_notification_channel</li> </ul> </li> </ul>"},{"location":"grafana_api/alerting-notifications/#alerting_notifications","title":"alerting_notifications","text":""},{"location":"grafana_api/alerting-notifications/#alertingnotifications-objects","title":"AlertingNotifications Objects","text":"<pre><code>class AlertingNotifications()\n</code></pre> <p>The class includes all necessary methods to access the Grafana alerting notifications API endpoints</p> <p>Arguments:</p> <ul> <li><code>grafana_api_model</code> APIModel - Inject a Grafana API model object that includes all necessary values and information</li> </ul> <p>Attributes:</p> <ul> <li><code>grafana_api_model</code> APIModel - This is where we store the grafana_api_model</li> </ul> <p></p>"},{"location":"grafana_api/alerting-notifications/#get_all_notification_channels","title":"get_all_notification_channels","text":"<pre><code>def get_all_notification_channels() -&gt; list\n</code></pre> <p>The method includes a functionality to get all alerting notification channels</p> <p>Raises:</p> <ul> <li><code>Exception</code> - Unspecified error by executing the API call</li> </ul> <p>Returns:</p> <ul> <li><code>api_call</code> list - Returns all notification channels</li> </ul> <p></p>"},{"location":"grafana_api/alerting-notifications/#get_all_notification_channels_lookup","title":"get_all_notification_channels_lookup","text":"<pre><code>def get_all_notification_channels_lookup() -&gt; list\n</code></pre> <p>The method includes a functionality to lookup and get reduced information of all alerting notification channels</p> <p>Raises:</p> <ul> <li><code>Exception</code> - Unspecified error by executing the API call</li> </ul> <p>Returns:</p> <ul> <li><code>api_call</code> list - Returns all notification channels as reduced information</li> </ul> <p></p>"},{"location":"grafana_api/alerting-notifications/#get_notification_channel_by_uid","title":"get_notification_channel_by_uid","text":"<pre><code>def get_notification_channel_by_uid(uid: str) -&gt; dict\n</code></pre> <p>The method includes a functionality to get an alerting notification channel specified by the uid</p> <p>Arguments:</p> <ul> <li><code>uid</code> str - Specify the uid of the notification channel</li> </ul> <p>Raises:</p> <ul> <li><code>ValueError</code> - Missed specifying a necessary value</li> <li><code>Exception</code> - Unspecified error by executing the API call</li> </ul> <p>Returns:</p> <ul> <li><code>api_call</code> dict - Returns the specified notification channel</li> </ul> <p></p>"},{"location":"grafana_api/alerting-notifications/#get_notification_channel_by_id","title":"get_notification_channel_by_id","text":"<pre><code>def get_notification_channel_by_id(id: int) -&gt; dict\n</code></pre> <p>The method includes a functionality to get an alerting notification channel specified by the id</p> <p>Arguments:</p> <ul> <li><code>id</code> int - Specify the id of the notification channel</li> </ul> <p>Raises:</p> <ul> <li><code>ValueError</code> - Missed specifying a necessary value</li> <li><code>Exception</code> - Unspecified error by executing the API call</li> </ul> <p>Returns:</p> <ul> <li><code>api_call</code> dict - Returns the specified notification channel</li> </ul> <p></p>"},{"location":"grafana_api/alerting-notifications/#create_notification_channel","title":"create_notification_channel","text":"<pre><code>def create_notification_channel(notification_channel: dict) -&gt; dict\n</code></pre> <p>The method includes a functionality to create an alerting notification channel specified by the notification channel dict</p> <p>Arguments:</p> <ul> <li><code>notification_channel</code> dict - Specify the channel of the notification</li> </ul> <p>Raises:</p> <ul> <li><code>ValueError</code> - Missed specifying a necessary value</li> <li><code>Exception</code> - Unspecified error by executing the API call</li> </ul> <p>Returns:</p> <ul> <li><code>api_call</code> dict - Returns the newly created notification channel</li> </ul> <p></p>"},{"location":"grafana_api/alerting-notifications/#update_notification_channel_by_uid","title":"update_notification_channel_by_uid","text":"<pre><code>def update_notification_channel_by_uid(uid: str,\n                                       notification_channel: dict) -&gt; dict\n</code></pre> <p>The method includes a functionality to update an alerting notification channel specified by the notification channel dict and the uid</p> <p>Arguments:</p> <ul> <li><code>uid</code> str - Specify the uid of the notification channel</li> <li><code>notification_channel</code> dict - Specify the channel of the notification</li> </ul> <p>Raises:</p> <ul> <li><code>ValueError</code> - Missed specifying a necessary value</li> <li><code>Exception</code> - Unspecified error by executing the API call</li> </ul> <p>Returns:</p> <ul> <li><code>api_call</code> dict - Returns the updated notification channel</li> </ul> <p></p>"},{"location":"grafana_api/alerting-notifications/#update_notification_channel_by_id","title":"update_notification_channel_by_id","text":"<pre><code>def update_notification_channel_by_id(id: int,\n                                      notification_channel: dict) -&gt; dict\n</code></pre> <p>The method includes a functionality to update an alerting notification channel specified by the notification channel dict and the id</p> <p>Arguments:</p> <ul> <li><code>id</code> int - Specify the id of the notification channel</li> <li><code>notification_channel</code> dict - Specify the channel of the notification</li> </ul> <p>Raises:</p> <ul> <li><code>ValueError</code> - Missed specifying a necessary value</li> <li><code>Exception</code> - Unspecified error by executing the API call</li> </ul> <p>Returns:</p> <ul> <li><code>api_call</code> dict - Returns the updated notification channel</li> </ul> <p></p>"},{"location":"grafana_api/alerting-notifications/#delete_notification_channel_by_uid","title":"delete_notification_channel_by_uid","text":"<pre><code>def delete_notification_channel_by_uid(uid: str)\n</code></pre> <p>The method includes a functionality to delete an alerting notification channel specified by the uid</p> <p>Arguments:</p> <ul> <li><code>uid</code> uid - Specify the uid of the notification channel</li> </ul> <p>Raises:</p> <ul> <li><code>ValueError</code> - Missed specifying a necessary value</li> <li><code>Exception</code> - Unspecified error by executing the API call</li> </ul> <p>Returns:</p> <p>None</p> <p></p>"},{"location":"grafana_api/alerting-notifications/#delete_notification_channel_by_id","title":"delete_notification_channel_by_id","text":"<pre><code>def delete_notification_channel_by_id(id: int)\n</code></pre> <p>The method includes a functionality to delete an alerting notification channel specified by the id</p> <p>Arguments:</p> <ul> <li><code>id</code> int - Specify the id of the notification channel</li> </ul> <p>Raises:</p> <ul> <li><code>ValueError</code> - Missed specifying a necessary value</li> <li><code>Exception</code> - Unspecified error by executing the API call</li> </ul> <p>Returns:</p> <p>None</p> <p></p>"},{"location":"grafana_api/alerting-notifications/#test_notification_channel","title":"test_notification_channel","text":"<pre><code>def test_notification_channel(notification_channel: dict)\n</code></pre> <p>The method includes a functionality to test an alerting notification channel specified by the notification_channel</p> <p>Arguments:</p> <ul> <li><code>notification_channel</code> dict - Specify the channel of the notification</li> </ul> <p>Raises:</p> <ul> <li><code>ValueError</code> - Missed specifying a necessary value</li> <li><code>Exception</code> - Unspecified error by executing the API call</li> </ul> <p>Returns:</p> <p>None</p>"},{"location":"grafana_api/alerting-provisioning/","title":"Table of Contents","text":"<ul> <li>alerting_provisioning</li> <li>AlertingProvisioning<ul> <li>get_alert_rule</li> <li>add_alert_rule</li> <li>update_alert_rule</li> <li>update_the_interval_of_a_alert_rule_group</li> <li>delete_alert_rule</li> <li>get_all_contact_points</li> <li>add_contact_point</li> <li>update_contact_point</li> <li>delete_contact_point</li> <li>get_notification_policies</li> <li>add_notification_policies</li> <li>get_all_mute_timings</li> <li>get_mute_timing</li> <li>add_mute_timing</li> <li>update_mute_timing</li> <li>delete_mute_timing</li> <li>get_all_message_templates</li> <li>get_message_template</li> <li>create_or_update_message_template</li> <li>delete_message_template</li> </ul> </li> </ul>"},{"location":"grafana_api/alerting-provisioning/#alerting_provisioning","title":"alerting_provisioning","text":""},{"location":"grafana_api/alerting-provisioning/#alertingprovisioning-objects","title":"AlertingProvisioning Objects","text":"<pre><code>class AlertingProvisioning()\n</code></pre> <p>The class includes all necessary methods to access the Grafana alerting provisioning API endpoints</p> <p>Arguments:</p> <ul> <li><code>grafana_api_model</code> APIModel - Inject a Grafana API model object that includes all necessary values and information</li> </ul> <p>Attributes:</p> <ul> <li><code>grafana_api_model</code> APIModel - This is where we store the grafana_api_model</li> </ul> <p></p>"},{"location":"grafana_api/alerting-provisioning/#get_alert_rule","title":"get_alert_rule","text":"<pre><code>def get_alert_rule(uid: str) -&gt; dict\n</code></pre> <p>The method includes a functionality to get the alert rule specified by the uid</p> <p>Arguments:</p> <ul> <li><code>uid</code> str - Specify the alert rule uid</li> </ul> <p>Raises:</p> <ul> <li><code>ValueError</code> - Missed specifying a necessary value</li> <li><code>Exception</code> - Unspecified error by executing the API call</li> </ul> <p>Returns:</p> <ul> <li><code>api_call</code> dict - Returns the alert rule</li> </ul> <p></p>"},{"location":"grafana_api/alerting-provisioning/#add_alert_rule","title":"add_alert_rule","text":"<pre><code>def add_alert_rule(alert_rule: AlertRule, disable_provenance: bool = False)\n</code></pre> <p>The method includes a functionality to create a new alert rule</p> <p>Arguments:</p> <ul> <li><code>alert_rule</code> AlertRule - Specify the alert rule</li> <li><code>disable_provenance</code> bool - Specify if the provenance header should be set or not (default False)</li> </ul> <p>Raises:</p> <ul> <li><code>ValueError</code> - Missed specifying a necessary value</li> <li><code>Exception</code> - Unspecified error by executing the API call</li> </ul> <p>Returns:</p> <p>None</p> <p></p>"},{"location":"grafana_api/alerting-provisioning/#update_alert_rule","title":"update_alert_rule","text":"<pre><code>def update_alert_rule(uid: str,\n                      alert_rule: AlertRule,\n                      disable_provenance: bool = False)\n</code></pre> <p>The method includes a functionality to update an existing alert rule</p> <p>Arguments:</p> <ul> <li><code>uid</code> str - Specify the alert rule uid</li> <li><code>alert_rule</code> AlertRule - Specify the alert rule</li> <li><code>disable_provenance</code> bool - Specify if the provenance header should be set or not (default False)</li> </ul> <p>Raises:</p> <ul> <li><code>ValueError</code> - Missed specifying a necessary value</li> <li><code>Exception</code> - Unspecified error by executing the API call</li> </ul> <p>Returns:</p> <p>None</p> <p></p>"},{"location":"grafana_api/alerting-provisioning/#update_the_interval_of_a_alert_rule_group","title":"update_the_interval_of_a_alert_rule_group","text":"<pre><code>def update_the_interval_of_a_alert_rule_group(\n        folder_uid: str,\n        group: str,\n        alert_rule_group_interval: int,\n        disable_provenance: bool = False)\n</code></pre> <p>The method includes a functionality to update the interval of a alert rule group</p> <p>Arguments:</p> <ul> <li><code>folder_uid</code> str - Specify the folder uid</li> <li><code>group</code> str - Specify the group</li> <li><code>alert_rule_group_interval</code> int - Specify the alert rule group interval</li> <li><code>disable_provenance</code> bool - Specify if the provenance header should be set or not (default False)</li> </ul> <p>Raises:</p> <ul> <li><code>ValueError</code> - Missed specifying a necessary value</li> <li><code>Exception</code> - Unspecified error by executing the API call</li> </ul> <p>Returns:</p> <p>None</p> <p></p>"},{"location":"grafana_api/alerting-provisioning/#delete_alert_rule","title":"delete_alert_rule","text":"<pre><code>def delete_alert_rule(uid: str, disable_provenance: bool = False)\n</code></pre> <p>The method includes a functionality to delete an alert rule</p> <p>Arguments:</p> <ul> <li><code>uid</code> str - Specify the alert rule uid</li> <li><code>disable_provenance</code> bool - Specify if the provenance header should be set or not (default False)</li> </ul> <p>Raises:</p> <ul> <li><code>ValueError</code> - Missed specifying a necessary value</li> <li><code>Exception</code> - Unspecified error by executing the API call</li> </ul> <p>Returns:</p> <p>None</p> <p></p>"},{"location":"grafana_api/alerting-provisioning/#get_all_contact_points","title":"get_all_contact_points","text":"<pre><code>def get_all_contact_points() -&gt; list\n</code></pre> <p>The method includes a functionality to get all contact points</p> <p>Raises:</p> <ul> <li><code>Exception</code> - Unspecified error by executing the API call</li> </ul> <p>Returns:</p> <ul> <li><code>api_call</code> list - Returns all contact points</li> </ul> <p></p>"},{"location":"grafana_api/alerting-provisioning/#add_contact_point","title":"add_contact_point","text":"<pre><code>def add_contact_point(embedded_contact_point: EmbeddedContactPoint,\n                      disable_provenance: bool = False)\n</code></pre> <p>The method includes a functionality to create a contact point</p> <p>Arguments:</p> <ul> <li><code>embedded_contact_point</code> EmbeddedContactPoint - Specify the embedded contact point</li> <li><code>disable_provenance</code> bool - Specify if the provenance header should be set or not (default False)</li> </ul> <p>Raises:</p> <ul> <li><code>ValueError</code> - Missed specifying a necessary value</li> <li><code>Exception</code> - Unspecified error by executing the API call</li> </ul> <p>Returns:</p> <p>None</p> <p></p>"},{"location":"grafana_api/alerting-provisioning/#update_contact_point","title":"update_contact_point","text":"<pre><code>def update_contact_point(uid: str,\n                         embedded_contact_point: EmbeddedContactPoint,\n                         disable_provenance: bool = False)\n</code></pre> <p>The method includes a functionality to update a contact point</p> <p>Arguments:</p> <ul> <li><code>uid</code> str - Specify the uid of the contact point</li> <li><code>embedded_contact_point</code> EmbeddedContactPoint - Specify the embedded contact point</li> <li><code>disable_provenance</code> bool - Specify if the provenance header should be set or not (default False)</li> </ul> <p>Raises:</p> <ul> <li><code>ValueError</code> - Missed specifying a necessary value</li> <li><code>Exception</code> - Unspecified error by executing the API call</li> </ul> <p>Returns:</p> <p>None</p> <p></p>"},{"location":"grafana_api/alerting-provisioning/#delete_contact_point","title":"delete_contact_point","text":"<pre><code>def delete_contact_point(uid: str)\n</code></pre> <p>The method includes a functionality to delete a contact point</p> <p>Arguments:</p> <ul> <li><code>uid</code> str - Specify the uid of the contact point</li> </ul> <p>Raises:</p> <ul> <li><code>ValueError</code> - Missed specifying a necessary value</li> <li><code>Exception</code> - Unspecified error by executing the API call</li> </ul> <p>Returns:</p> <p>None</p> <p></p>"},{"location":"grafana_api/alerting-provisioning/#get_notification_policies","title":"get_notification_policies","text":"<pre><code>def get_notification_policies() -&gt; dict\n</code></pre> <p>The method includes a functionality to get the notification policy tree</p> <p>Raises:</p> <ul> <li><code>Exception</code> - Unspecified error by executing the API call</li> </ul> <p>Returns:</p> <ul> <li><code>api_call</code> dict - Returns the notification policy tree</li> </ul> <p></p>"},{"location":"grafana_api/alerting-provisioning/#add_notification_policies","title":"add_notification_policies","text":"<pre><code>def add_notification_policies(route: Route, disable_provenance: bool = False)\n</code></pre> <p>The method includes a functionality to set the notification policy tree</p> <p>Arguments:</p> <ul> <li><code>route</code> Route - Specify the alert rule routes</li> <li><code>disable_provenance</code> bool - Specify if the provenance header should be set or not (default False)</li> </ul> <p>Raises:</p> <ul> <li><code>ValueError</code> - Missed specifying a necessary value</li> <li><code>Exception</code> - Unspecified error by executing the API call</li> </ul> <p>Returns:</p> <p>None</p> <p></p>"},{"location":"grafana_api/alerting-provisioning/#get_all_mute_timings","title":"get_all_mute_timings","text":"<pre><code>def get_all_mute_timings() -&gt; list\n</code></pre> <p>The method includes a functionality to get all mute timings</p> <p>Raises:</p> <ul> <li><code>Exception</code> - Unspecified error by executing the API call</li> </ul> <p>Returns:</p> <ul> <li><code>api_call</code> list - Returns all mute timings</li> </ul> <p></p>"},{"location":"grafana_api/alerting-provisioning/#get_mute_timing","title":"get_mute_timing","text":"<pre><code>def get_mute_timing(name: str) -&gt; dict\n</code></pre> <p>The method includes a functionality to get a mute timings specified by the name</p> <p>Arguments:</p> <ul> <li><code>name</code> str - Specify the mute timing name</li> </ul> <p>Raises:</p> <ul> <li><code>ValueError</code> - Missed specifying a necessary value</li> <li><code>Exception</code> - Unspecified error by executing the API call</li> </ul> <p>Returns:</p> <ul> <li><code>api_call</code> dict - Returns the mute timing</li> </ul> <p></p>"},{"location":"grafana_api/alerting-provisioning/#add_mute_timing","title":"add_mute_timing","text":"<pre><code>def add_mute_timing(mute_time_interval: MuteTimeInterval,\n                    disable_provenance: bool = False)\n</code></pre> <p>The method includes a functionality to create a mute timing</p> <p>Arguments:</p> <ul> <li><code>mute_time_interval</code> MuteTimeInterval - Specify the mute time interval</li> <li><code>disable_provenance</code> bool - Specify if the provenance header should be set or not (default False)</li> </ul> <p>Raises:</p> <ul> <li><code>ValueError</code> - Missed specifying a necessary value</li> <li><code>Exception</code> - Unspecified error by executing the API call</li> </ul> <p>Returns:</p> <p>None</p> <p></p>"},{"location":"grafana_api/alerting-provisioning/#update_mute_timing","title":"update_mute_timing","text":"<pre><code>def update_mute_timing(name: str,\n                       mute_time_interval: MuteTimeInterval,\n                       disable_provenance: bool = False)\n</code></pre> <p>The method includes a functionality to update an existing mute timing</p> <p>Arguments:</p> <ul> <li><code>name</code> str - Specify the mute timing name</li> <li><code>mute_time_interval</code> MuteTimeInterval - Specify the mute time interval</li> <li><code>disable_provenance</code> bool - Specify if the provenance header should be set or not (default False)</li> </ul> <p>Raises:</p> <ul> <li><code>ValueError</code> - Missed specifying a necessary value</li> <li><code>Exception</code> - Unspecified error by executing the API call</li> </ul> <p>Returns:</p> <p>None</p> <p></p>"},{"location":"grafana_api/alerting-provisioning/#delete_mute_timing","title":"delete_mute_timing","text":"<pre><code>def delete_mute_timing(name: str)\n</code></pre> <p>The method includes a functionality to delete a mute timings specified by the name</p> <p>Arguments:</p> <ul> <li><code>name</code> str - Specify the mute timing name</li> </ul> <p>Raises:</p> <ul> <li><code>ValueError</code> - Missed specifying a necessary value</li> <li><code>Exception</code> - Unspecified error by executing the API call</li> </ul> <p>Returns:</p> <p>None</p> <p></p>"},{"location":"grafana_api/alerting-provisioning/#get_all_message_templates","title":"get_all_message_templates","text":"<pre><code>def get_all_message_templates() -&gt; list\n</code></pre> <p>The method includes a functionality to get all message templates</p> <p>Raises:</p> <ul> <li><code>Exception</code> - Unspecified error by executing the API call</li> </ul> <p>Returns:</p> <ul> <li><code>api_call</code> list - Returns all message templates</li> </ul> <p></p>"},{"location":"grafana_api/alerting-provisioning/#get_message_template","title":"get_message_template","text":"<pre><code>def get_message_template(name: str) -&gt; dict\n</code></pre> <p>The method includes a functionality to get a message template specified by the name</p> <p>Arguments:</p> <ul> <li><code>name</code> str - Specify the message template name</li> </ul> <p>Raises:</p> <ul> <li><code>ValueError</code> - Missed specifying a necessary value</li> <li><code>Exception</code> - Unspecified error by executing the API call</li> </ul> <p>Returns:</p> <ul> <li><code>api_call</code> dict - Returns the message template</li> </ul> <p></p>"},{"location":"grafana_api/alerting-provisioning/#create_or_update_message_template","title":"create_or_update_message_template","text":"<pre><code>def create_or_update_message_template(name: str,\n                                      message_template: str,\n                                      disable_provenance: bool = False)\n</code></pre> <p>The method includes a functionality to create or update a message template</p> <p>Arguments:</p> <ul> <li><code>name</code> str - Specify the message template name</li> <li><code>message_template</code> str - Specify the message template</li> <li><code>disable_provenance</code> bool - Specify if the provenance header should be set or not (default False)</li> </ul> <p>Raises:</p> <ul> <li><code>ValueError</code> - Missed specifying a necessary value</li> <li><code>Exception</code> - Unspecified error by executing the API call</li> </ul> <p>Returns:</p> <p>None</p> <p></p>"},{"location":"grafana_api/alerting-provisioning/#delete_message_template","title":"delete_message_template","text":"<pre><code>def delete_message_template(name: str)\n</code></pre> <p>The method includes a functionality to delete a message template</p> <p>Arguments:</p> <ul> <li><code>name</code> str - Specify the message template name</li> </ul> <p>Raises:</p> <ul> <li><code>ValueError</code> - Missed specifying a necessary value</li> <li><code>Exception</code> - Unspecified error by executing the API call</li> </ul> <p>Returns:</p> <p>None</p>"},{"location":"grafana_api/alerting/","title":"Table of Contents","text":"<ul> <li>alerting</li> <li>Alerting<ul> <li>get_alertmanager_alerts</li> <li>create_or_update_alertmanager_alerts</li> <li>get_alertmanager_group_alerts</li> <li>delete_alertmanager_silence_by_id</li> <li>get_alertmanager_silence_by_id</li> <li>get_alertmanager_silences</li> <li>create_or_update_alertmanager_silence</li> <li>get_alertmanager_status</li> <li>delete_alertmanager_config</li> <li>get_alertmanager_config</li> <li>create_or_update_alertmanager_config</li> <li>test_alertmanager_receivers</li> <li>get_prometheus_alerts</li> <li>get_prometheus_rules</li> <li>get_ruler_rules</li> <li>delete_ruler_namespace</li> <li>get_ruler_groups_by_namespace</li> <li>create_or_update_ruler_group_by_namespace</li> <li>delete_ruler_group</li> <li>get_ruler_group</li> <li>test_rule</li> <li>test_datasource_uid_rule</li> <li>test_backtest_rule</li> <li>delete_ngalert_organization_configuration</li> <li>get_ngalert_organization_configuration</li> <li>create_or_update_ngalert_organization_configuration</li> <li>get_ngalert_alertmanagers_by_organization</li> </ul> </li> </ul>"},{"location":"grafana_api/alerting/#alerting","title":"alerting","text":""},{"location":"grafana_api/alerting/#alerting-objects","title":"Alerting Objects","text":"<pre><code>class Alerting()\n</code></pre> <p>The class includes all necessary methods to access the Grafana alerting API endpoints</p> <p>Arguments:</p> <ul> <li><code>grafana_api_model</code> APIModel - Inject a Grafana API model object that includes all necessary values and information</li> </ul> <p>Attributes:</p> <ul> <li><code>grafana_api_model</code> APIModel - This is where we store the grafana_api_model</li> </ul> <p></p>"},{"location":"grafana_api/alerting/#get_alertmanager_alerts","title":"get_alertmanager_alerts","text":"<pre><code>def get_alertmanager_alerts(datasource_uid: str = \"grafana\") -&gt; list\n</code></pre> <p>The method includes a functionality to get the Alertmanager alerts specified by the datasource_uid</p> <p>Arguments:</p> <ul> <li><code>datasource_uid</code> str - Specify the datasource uid or recipient of the alerts (default grafana)</li> </ul> <p>Raises:</p> <ul> <li><code>ValueError</code> - Missed specifying a necessary value</li> <li><code>Exception</code> - Unspecified error by executing the API call</li> </ul> <p>Returns:</p> <ul> <li><code>api_call</code> list - Returns the list of Alertmanager alerts</li> </ul> <p></p>"},{"location":"grafana_api/alerting/#create_or_update_alertmanager_alerts","title":"create_or_update_alertmanager_alerts","text":"<pre><code>def create_or_update_alertmanager_alerts(alerts: list,\n                                         datasource_uid: str = \"grafana\")\n</code></pre> <p>The method includes a functionality to create or update the Alertmanager alerts specified by the datasource_uid and the alerts list</p> <p>Arguments:</p> <ul> <li><code>alerts</code> list - Specify a list of the alert objects</li> <li><code>datasource_uid</code> str - Specify the datasource uid or recipient of the alerts (default grafana)</li> </ul> <p>Raises:</p> <ul> <li><code>ValueError</code> - Missed specifying a necessary value</li> <li><code>Exception</code> - Unspecified error by executing the API call</li> </ul> <p>Returns:</p> <p>None</p> <p></p>"},{"location":"grafana_api/alerting/#get_alertmanager_group_alerts","title":"get_alertmanager_group_alerts","text":"<pre><code>def get_alertmanager_group_alerts(datasource_uid: str = \"grafana\") -&gt; list\n</code></pre> <p>The method includes a functionality to get the Alertmanager group alerts specified by the datasource_uid</p> <p>Arguments:</p> <ul> <li><code>datasource_uid</code> str - Specify the datasource uid or recipient of the alerts (default grafana)</li> </ul> <p>Raises:</p> <ul> <li><code>ValueError</code> - Missed specifying a necessary value</li> <li><code>Exception</code> - Unspecified error by executing the API call</li> </ul> <p>Returns:</p> <ul> <li><code>api_call</code> list - Returns the list of Alertmanager group alerts</li> </ul> <p></p>"},{"location":"grafana_api/alerting/#delete_alertmanager_silence_by_id","title":"delete_alertmanager_silence_by_id","text":"<pre><code>def delete_alertmanager_silence_by_id(silence_id: str,\n                                      datasource_uid: str = \"grafana\")\n</code></pre> <p>The method includes a functionality to delete the Alertmanager silence specified by the silence id and the datasource_uid</p> <p>Arguments:</p> <ul> <li><code>silence_id</code> str - Specify the silence id of the alerts</li> <li><code>datasource_uid</code> str - Specify the datasource uid or recipient of the alerts (default grafana)</li> </ul> <p>Raises:</p> <ul> <li><code>ValueError</code> - Missed specifying a necessary value</li> <li><code>Exception</code> - Unspecified error by executing the API call</li> </ul> <p>Returns:</p> <p>None</p> <p></p>"},{"location":"grafana_api/alerting/#get_alertmanager_silence_by_id","title":"get_alertmanager_silence_by_id","text":"<pre><code>def get_alertmanager_silence_by_id(silence_id: str,\n                                   datasource_uid: str = \"grafana\") -&gt; dict\n</code></pre> <p>The method includes a functionality to get the Alertmanager silence specified by the silence id and the datasource_uid</p> <p>Arguments:</p> <ul> <li><code>silence_id</code> str - Specify the silence id of the alerts</li> <li><code>datasource_uid</code> str - Specify the datasource uid or recipient of the alerts (default grafana)</li> </ul> <p>Raises:</p> <ul> <li><code>ValueError</code> - Missed specifying a necessary value</li> <li><code>Exception</code> - Unspecified error by executing the API call</li> </ul> <p>Returns:</p> <ul> <li><code>api_call</code> dict - Returns the dict of Alertmanager silence alert</li> </ul> <p></p>"},{"location":"grafana_api/alerting/#get_alertmanager_silences","title":"get_alertmanager_silences","text":"<pre><code>def get_alertmanager_silences(datasource_uid: str = \"grafana\") -&gt; list\n</code></pre> <p>The method includes a functionality to get all Alertmanager silences specified by the datasource_uid</p> <p>Arguments:</p> <ul> <li><code>datasource_uid</code> str - Specify the datasource uid or recipient of the alerts (default grafana)</li> </ul> <p>Raises:</p> <ul> <li><code>ValueError</code> - Missed specifying a necessary value</li> <li><code>Exception</code> - Unspecified error by executing the API call</li> </ul> <p>Returns:</p> <ul> <li><code>api_call</code> list - Returns the list of Alertmanager silence alerts</li> </ul> <p></p>"},{"location":"grafana_api/alerting/#create_or_update_alertmanager_silence","title":"create_or_update_alertmanager_silence","text":"<pre><code>def create_or_update_alertmanager_silence(silence: Silence,\n                                          datasource_uid: str = \"grafana\"\n                                          ) -&gt; dict\n</code></pre> <p>The method includes a functionality to create or update the Alertmanager silence specified by the silence object and the datasource_uid</p> <p>Arguments:</p> <p>silence -&gt; Specify the silence object - <code>datasource_uid</code> str - Specify the datasource uid or recipient of the alerts (default grafana)</p> <p>Raises:</p> <ul> <li><code>ValueError</code> - Missed specifying a necessary value</li> <li><code>Exception</code> - Unspecified error by executing the API call</li> </ul> <p>Returns:</p> <ul> <li><code>api_call</code> dict - Returns the dict of newly created silence alert</li> </ul> <p></p>"},{"location":"grafana_api/alerting/#get_alertmanager_status","title":"get_alertmanager_status","text":"<pre><code>def get_alertmanager_status(datasource_uid: str = \"grafana\") -&gt; dict\n</code></pre> <p>The method includes a functionality to get the Alertmanager status specified by the datasource_uid</p> <p>Arguments:</p> <ul> <li><code>datasource_uid</code> str - Specify the datasource uid or recipient of the alerts (default grafana)</li> </ul> <p>Raises:</p> <ul> <li><code>ValueError</code> - Missed specifying a necessary value</li> <li><code>Exception</code> - Unspecified error by executing the API call</li> </ul> <p>Returns:</p> <ul> <li><code>api_call</code> dict - Returns the dict of the Alertmanager status</li> </ul> <p></p>"},{"location":"grafana_api/alerting/#delete_alertmanager_config","title":"delete_alertmanager_config","text":"<pre><code>def delete_alertmanager_config(datasource_uid: str = \"grafana\")\n</code></pre> <p>The method includes a functionality to delete the Alertmanager config specified by the datasource_uid</p> <p>Arguments:</p> <ul> <li><code>datasource_uid</code> str - Specify the datasource uid or recipient of the alerts (default grafana)</li> </ul> <p>Raises:</p> <ul> <li><code>ValueError</code> - Missed specifying a necessary value</li> <li><code>Exception</code> - Unspecified error by executing the API call</li> </ul> <p>Returns:</p> <p>None</p> <p></p>"},{"location":"grafana_api/alerting/#get_alertmanager_config","title":"get_alertmanager_config","text":"<pre><code>def get_alertmanager_config(datasource_uid: str = \"grafana\") -&gt; dict\n</code></pre> <p>The method includes a functionality to get the Alertmanager config specified by the datasource_uid</p> <p>Arguments:</p> <ul> <li><code>datasource_uid</code> str - Specify the datasource uid or recipient of the alerts (default grafana)</li> </ul> <p>Raises:</p> <ul> <li><code>ValueError</code> - Missed specifying a necessary value</li> <li><code>Exception</code> - Unspecified error by executing the API call</li> </ul> <p>Returns:</p> <ul> <li><code>api_call</code> dict - Returns the dict of the Alertmanager config</li> </ul> <p></p>"},{"location":"grafana_api/alerting/#create_or_update_alertmanager_config","title":"create_or_update_alertmanager_config","text":"<pre><code>def create_or_update_alertmanager_config(\n        alertmanager_config: AlertmanagerConfig,\n        datasource_uid: str = \"grafana\",\n        template_files: dict = None)\n</code></pre> <p>The method includes a functionality to create or update the Alertmanager config specified by the Alertmanager config object, datasource_uid and template_files</p> <p>Arguments:</p> <ul> <li><code>alertmanager_config</code> AlertmanagerConfig - Specify the Alertmanager config object</li> <li><code>datasource_uid</code> str - Specify the datasource uid or recipient of the alerts (default grafana)</li> <li><code>template_files(dict)</code> - Specify the optional template files (default None)</li> </ul> <p>Raises:</p> <ul> <li><code>ValueError</code> - Missed specifying a necessary value</li> <li><code>Exception</code> - Unspecified error by executing the API call</li> </ul> <p>Returns:</p> <p>None</p> <p></p>"},{"location":"grafana_api/alerting/#test_alertmanager_receivers","title":"test_alertmanager_receivers","text":"<pre><code>def test_alertmanager_receivers(alert: dict,\n                                receivers: list,\n                                datasource_uid: str = \"grafana\")\n</code></pre> <p>The method includes a functionality to test the Alertmanager receivers specified by the alert dict, receivers object and the datasource_uid</p> <p>Arguments:</p> <ul> <li><code>alert</code> dict - Specify the alert dict</li> <li><code>receivers</code> list - Specify the list of AlertmanagerReceivers objects</li> <li><code>datasource_uid</code> str - Specify the datasource uid or recipient of the alerts (default grafana)</li> </ul> <p>Raises:</p> <ul> <li><code>ValueError</code> - Missed specifying a necessary value</li> <li><code>Exception</code> - Unspecified error by executing the API call</li> </ul> <p>Returns:</p> <p>None</p> <p></p>"},{"location":"grafana_api/alerting/#get_prometheus_alerts","title":"get_prometheus_alerts","text":"<pre><code>def get_prometheus_alerts(datasource_uid: str = \"grafana\") -&gt; dict\n</code></pre> <p>The method includes a functionality to get all prometheus alerts specified by the datasource_uid</p> <p>Arguments:</p> <ul> <li><code>datasource_uid</code> str - Specify the datasource uid or recipient of the alerts (default grafana)</li> </ul> <p>Raises:</p> <ul> <li><code>ValueError</code> - Missed specifying a necessary value</li> <li><code>Exception</code> - Unspecified error by executing the API call</li> </ul> <p>Returns:</p> <ul> <li><code>api_call</code> dict - Returns the dict of the prometheus alerts</li> </ul> <p></p>"},{"location":"grafana_api/alerting/#get_prometheus_rules","title":"get_prometheus_rules","text":"<pre><code>def get_prometheus_rules(datasource_uid: str = \"grafana\") -&gt; dict\n</code></pre> <p>The method includes a functionality to get all prometheus rules specified by the datasource_uid</p> <p>Arguments:</p> <ul> <li><code>datasource_uid</code> str - Specify the datasource uid or recipient of the alerts (default grafana)</li> </ul> <p>Raises:</p> <ul> <li><code>ValueError</code> - Missed specifying a necessary value</li> <li><code>Exception</code> - Unspecified error by executing the API call</li> </ul> <p>Returns:</p> <ul> <li><code>api_call</code> dict - Returns the dict of the prometheus rules</li> </ul> <p></p>"},{"location":"grafana_api/alerting/#get_ruler_rules","title":"get_ruler_rules","text":"<pre><code>def get_ruler_rules(datasource_uid: str = \"grafana\") -&gt; dict\n</code></pre> <p>The method includes a functionality to get all ruler rules specified by the datasource_uid</p> <p>Arguments:</p> <ul> <li><code>datasource_uid</code> str - Specify the datasource uid or recipient of the alerts (default grafana)</li> </ul> <p>Raises:</p> <ul> <li><code>ValueError</code> - Missed specifying a necessary value</li> <li><code>Exception</code> - Unspecified error by executing the API call</li> </ul> <p>Returns:</p> <ul> <li><code>api_call</code> dict - Returns the dict of the ruler rules</li> </ul> <p></p>"},{"location":"grafana_api/alerting/#delete_ruler_namespace","title":"delete_ruler_namespace","text":"<pre><code>def delete_ruler_namespace(namespace: str, datasource_uid: str = \"grafana\")\n</code></pre> <p>The method includes a functionality to delete a ruler namespace specified by the namespace name and the datasource_uid</p> <p>Arguments:</p> <ul> <li><code>namespace</code> str - Specify the namespace name</li> <li><code>datasource_uid</code> str - Specify the datasource uid or recipient of the alerts (default grafana)</li> </ul> <p>Raises:</p> <ul> <li><code>ValueError</code> - Missed specifying a necessary value</li> <li><code>Exception</code> - Unspecified error by executing the API call</li> </ul> <p>Returns:</p> <p>None</p> <p></p>"},{"location":"grafana_api/alerting/#get_ruler_groups_by_namespace","title":"get_ruler_groups_by_namespace","text":"<pre><code>def get_ruler_groups_by_namespace(namespace: str,\n                                  datasource_uid: str = \"grafana\") -&gt; dict\n</code></pre> <p>The method includes a functionality to get all ruler groups specified by the namespace name and the datasource_uid</p> <p>Arguments:</p> <ul> <li><code>namespace</code> str - Specify the namespace name</li> <li><code>datasource_uid</code> str - Specify the datasource uid or recipient of the alerts (default grafana)</li> </ul> <p>Raises:</p> <ul> <li><code>ValueError</code> - Missed specifying a necessary value</li> <li><code>Exception</code> - Unspecified error by executing the API call</li> </ul> <p>Returns:</p> <ul> <li><code>api_call</code> dict - Returns the dict of the ruler groups</li> </ul> <p></p>"},{"location":"grafana_api/alerting/#create_or_update_ruler_group_by_namespace","title":"create_or_update_ruler_group_by_namespace","text":"<pre><code>def create_or_update_ruler_group_by_namespace(namespace: str,\n                                              group_name: str,\n                                              rules: list,\n                                              datasource_uid: str = \"grafana\",\n                                              interval: int = 0)\n</code></pre> <p>The method includes a functionality to create or update a ruler group specified by the namespace name, a ruler group name, a ruler rule object list, the datasource_uid and an interval</p> <p>Arguments:</p> <ul> <li><code>namespace</code> str - Specify the namespace name</li> <li><code>group_name</code> str - Specify the ruler group name</li> <li><code>rules</code> list - Specify the ruler rule object list</li> <li><code>datasource_uid</code> str - Specify the datasource uid or recipient of the alerts (default grafana)</li> <li><code>interval</code> int - Specify the interval of the ruler (default 0)</li> </ul> <p>Raises:</p> <ul> <li><code>ValueError</code> - Missed specifying a necessary value</li> <li><code>Exception</code> - Unspecified error by executing the API call</li> </ul> <p>Returns:</p> <p>None</p> <p></p>"},{"location":"grafana_api/alerting/#delete_ruler_group","title":"delete_ruler_group","text":"<pre><code>def delete_ruler_group(namespace: str,\n                       group_name: str,\n                       datasource_uid: str = \"grafana\")\n</code></pre> <p>The method includes a functionality to delete a ruler group specified by the namespace name, a ruler group name and the datasource_uid</p> <p>Arguments:</p> <ul> <li><code>namespace</code> str - Specify the namespace name</li> <li><code>group_name</code> str - Specify the ruler group name</li> <li><code>datasource_uid</code> str - Specify the datasource uid or recipient of the alerts (default grafana)</li> </ul> <p>Raises:</p> <ul> <li><code>ValueError</code> - Missed specifying a necessary value</li> <li><code>Exception</code> - Unspecified error by executing the API call</li> </ul> <p>Returns:</p> <p>None</p> <p></p>"},{"location":"grafana_api/alerting/#get_ruler_group","title":"get_ruler_group","text":"<pre><code>def get_ruler_group(namespace: str,\n                    group_name: str,\n                    datasource_uid: str = \"grafana\") -&gt; dict\n</code></pre> <p>The method includes a functionality to get a ruler group specified by the namespace name, a ruler group name and the datasource_uid</p> <p>Arguments:</p> <ul> <li><code>namespace</code> str - Specify the namespace name</li> <li><code>group_name</code> str - Specify the ruler group name</li> <li><code>datasource_uid</code> str - Specify the datasource uid or recipient of the alerts (default grafana)</li> </ul> <p>Raises:</p> <ul> <li><code>ValueError</code> - Missed specifying a necessary value</li> <li><code>Exception</code> - Unspecified error by executing the API call</li> </ul> <p>Returns:</p> <ul> <li><code>api_call</code> dict - Returns the dict of all ruler groups</li> </ul> <p></p>"},{"location":"grafana_api/alerting/#test_rule","title":"test_rule","text":"<pre><code>def test_rule(data_queries: list) -&gt; dict\n</code></pre> <p>The method includes a functionality to test a rule specified by a list of datasource rule query objects</p> <p>Arguments:</p> <ul> <li><code>data_queries</code> list - Specify a list of datasource rule query objects</li> </ul> <p>Raises:</p> <ul> <li><code>ValueError</code> - Missed specifying a necessary value</li> <li><code>Exception</code> - Unspecified error by executing the API call</li> </ul> <p>Returns:</p> <ul> <li><code>api_call</code> str - Returns the result of the specified query</li> </ul> <p></p>"},{"location":"grafana_api/alerting/#test_datasource_uid_rule","title":"test_datasource_uid_rule","text":"<pre><code>def test_datasource_uid_rule(expr: str,\n                             condition: str,\n                             data_queries: list,\n                             datasource_uid: str = \"grafana\") -&gt; dict\n</code></pre> <p>The method includes a functionality to test a datasource uid rule specified by the expr, the condition, a list of data queries and the datasource_uid</p> <p>Arguments:</p> <ul> <li><code>expr</code> str - Specify a list of datasource rule query objects</li> <li><code>condition</code> str - Specify the condition</li> <li><code>data_queries</code> list - Specify a list of datasource rule query objects</li> <li><code>datasource_uid</code> str - Specify the datasource uid or recipient of the alerts (default grafana)</li> </ul> <p>Raises:</p> <ul> <li><code>ValueError</code> - Missed specifying a necessary value</li> <li><code>Exception</code> - Unspecified error by executing the API call</li> </ul> <p>Returns:</p> <ul> <li><code>api_call</code> dict - Returns the result of the specified datasource_uid rule</li> </ul> <p></p>"},{"location":"grafana_api/alerting/#test_backtest_rule","title":"test_backtest_rule","text":"<pre><code>def test_backtest_rule(condition: str, data_queries: list) -&gt; dict\n</code></pre> <p>The method includes a functionality to test a rule specified by the condition and a list of data queries</p> <p>Arguments:</p> <ul> <li><code>condition</code> str - Specify the condition</li> <li><code>data_queries</code> list - Specify a list of datasource rule query objects</li> </ul> <p>Raises:</p> <ul> <li><code>ValueError</code> - Missed specifying a necessary value</li> <li><code>Exception</code> - Unspecified error by executing the API call</li> </ul> <p>Returns:</p> <ul> <li><code>api_call</code> dict - Returns the result of the specified rule</li> </ul> <p></p>"},{"location":"grafana_api/alerting/#delete_ngalert_organization_configuration","title":"delete_ngalert_organization_configuration","text":"<pre><code>def delete_ngalert_organization_configuration()\n</code></pre> <p>The method includes a functionality to delete the NGAlert organization admin configuration</p> <p>Raises:</p> <ul> <li><code>Exception</code> - Unspecified error by executing the API call</li> </ul> <p>Returns:</p> <p>None</p> <p></p>"},{"location":"grafana_api/alerting/#get_ngalert_organization_configuration","title":"get_ngalert_organization_configuration","text":"<pre><code>def get_ngalert_organization_configuration() -&gt; dict\n</code></pre> <p>The method includes a functionality to get the NGAlert organization admin configuration</p> <p>Raises:</p> <ul> <li><code>Exception</code> - Unspecified error by executing the API call</li> </ul> <p>Returns:</p> <ul> <li><code>api_call</code> dict - Returns the NGAlert organization configuration</li> </ul> <p></p>"},{"location":"grafana_api/alerting/#create_or_update_ngalert_organization_configuration","title":"create_or_update_ngalert_organization_configuration","text":"<pre><code>def create_or_update_ngalert_organization_configuration(\n        alert_managers: list, alertmanagers_choice: str = \"all\")\n</code></pre> <p>The method includes a functionality to create or update the NGAlert organization admin configuration</p> <p>Arguments:</p> <ul> <li><code>alert_managers</code> list - Specify the list of alert manager names</li> <li><code>alertmanagers_choice</code> str - Specify the Alertmanagers choice (default all)</li> </ul> <p>Raises:</p> <ul> <li><code>ValueError</code> - Missed specifying a necessary value</li> <li><code>Exception</code> - Unspecified error by executing the API call</li> </ul> <p>Returns:</p> <p>None</p> <p></p>"},{"location":"grafana_api/alerting/#get_ngalert_alertmanagers_by_organization","title":"get_ngalert_alertmanagers_by_organization","text":"<pre><code>def get_ngalert_alertmanagers_by_organization() -&gt; dict\n</code></pre> <p>The method includes a functionality to get the discovered and dropped Alertmanagers of the user's organization and based on the specified configuration</p> <p>Raises:</p> <ul> <li><code>Exception</code> - Unspecified error by executing the API call</li> </ul> <p>Returns:</p> <ul> <li><code>api_call</code> dict - Returns the NGAlert Alertmanagers</li> </ul>"},{"location":"grafana_api/annotations/","title":"Table of Contents","text":"<ul> <li>annotations</li> <li>Annotations<ul> <li>find_annotations</li> <li>create_annotation</li> <li>create_graphite_annotation</li> <li>update_annotation</li> <li>delete_annotation</li> <li>find_annotation_tags</li> </ul> </li> </ul>"},{"location":"grafana_api/annotations/#annotations","title":"annotations","text":""},{"location":"grafana_api/annotations/#annotations-objects","title":"Annotations Objects","text":"<pre><code>class Annotations()\n</code></pre> <p>The class includes all necessary methods to access the Grafana annotations API endpoints. Annotations can be organization annotations that can be shown on any dashboard by configuring an annotation data source filtered by tags. They can also be tied to a panel on a dashboard and are then only shown on that panel</p> <p>HINT: Note Grafana Enterprise API need required permissions if fine-grained access control is enabled</p> <p>Arguments:</p> <ul> <li><code>grafana_api_model</code> APIModel - Inject a Grafana API model object that includes all necessary values and information</li> </ul> <p>Attributes:</p> <ul> <li><code>grafana_api_model</code> APIModel - This is where we store the grafana_api_model</li> </ul> <p></p>"},{"location":"grafana_api/annotations/#find_annotations","title":"find_annotations","text":"<pre><code>def find_annotations(annotation: FindAnnotationObject = None) -&gt; list\n</code></pre> <p>The method includes a functionality to find the corresponding annotations</p> <p>Arguments:</p> <ul> <li><code>annotation</code> FindAnnotationObject - Specify the find annotation object</li> </ul> <p>Raises:</p> <ul> <li><code>Exception</code> - Unspecified error by executing the API call</li> </ul> <p>Returns:</p> <ul> <li><code>api_call</code> list - Returns the result of the find annotations call</li> </ul> <p></p>"},{"location":"grafana_api/annotations/#create_annotation","title":"create_annotation","text":"<pre><code>def create_annotation(annotation: AnnotationObject) -&gt; int\n</code></pre> <p>The method includes a functionality to create the corresponding annotation</p> <p>Args:     annotation (AnnotationObject): Specify the annotation object</p> <p>Required Permissions:     Action: annotations:create     Scope: annotations:type:</p> <p>Raises:     ValueError: Missed specifying a necessary value     Exception: Unspecified error by executing the API call</p> <p>Returns:     api_call (int): Returns the annotation id</p> <p></p>"},{"location":"grafana_api/annotations/#create_graphite_annotation","title":"create_graphite_annotation","text":"<pre><code>def create_graphite_annotation(annotation: AnnotationGraphiteObject) -&gt; int\n</code></pre> <p>The method includes a functionality to create the corresponding graphite annotation</p> <p>Args:     annotation (AnnotationGraphiteObject): Specify the annotation object</p> <p>Required Permissions:     Action: annotations:create     Scope: annotations:type:organization</p> <p>Raises:     ValueError: Missed specifying a necessary value     Exception: Unspecified error by executing the API call</p> <p>Returns:     api_call (int): Returns the annotation id</p> <p></p>"},{"location":"grafana_api/annotations/#update_annotation","title":"update_annotation","text":"<pre><code>def update_annotation(id: int, annotation: AnnotationObject)\n</code></pre> <p>The method includes a functionality to update the corresponding annotation specified by the annotation id</p> <p>Args:     id (int): Specify the annotation object id     annotation (AnnotationObject): Specify the annotation object</p> <p>Required Permissions:     Action: annotations:write     Scope: annotations:type:</p> <p>Raises:     ValueError: Missed specifying a necessary value     Exception: Unspecified error by executing the API call</p> <p>Returns:     None</p> <p></p>"},{"location":"grafana_api/annotations/#delete_annotation","title":"delete_annotation","text":"<pre><code>def delete_annotation(id: int)\n</code></pre> <p>The method includes a functionality to delete the corresponding annotation specified by the annotation id</p> <p>Args:     id (int): Specify the annotation object id</p> <p>Required Permissions:     Action: annotations:write     Scope: annotations:type:</p> <p>Raises:     ValueError: Missed specifying a necessary value     Exception: Unspecified error by executing the API call</p> <p>Returns:     None</p> <p></p>"},{"location":"grafana_api/annotations/#find_annotation_tags","title":"find_annotation_tags","text":"<pre><code>def find_annotation_tags(tag: str = None, limit: int = 100)\n</code></pre> <p>The method includes a functionality to find the annotation tags</p> <p>Arguments:</p> <ul> <li><code>tag</code> str - Specify the optional annotation tag</li> <li><code>limit</code> int - Specify the optional annotation limit (default 100)</li> </ul> <p>Required Permissions: - <code>Action</code> - annotations:read - <code>Scope</code> - N/A</p> <p>Raises:</p> <ul> <li><code>Exception</code> - Unspecified error by executing the API call</li> </ul> <p>Returns:</p> <ul> <li><code>api_call</code> dict - Returns the result of the find annotation tags call</li> </ul>"},{"location":"grafana_api/api/","title":"Table of Contents","text":"<ul> <li>api</li> <li>Api<ul> <li>call_the_api</li> <li>prepare_api_string</li> <li>create_the_http_api_client</li> </ul> </li> </ul>"},{"location":"grafana_api/api/#api","title":"api","text":""},{"location":"grafana_api/api/#api-objects","title":"Api Objects","text":"<pre><code>class Api()\n</code></pre> <p>The class includes all necessary methods to make API calls to the Grafana API endpoints</p> <p>Arguments:</p> <ul> <li><code>grafana_api_model</code> APIModel - Inject a Grafana API model object that includes all necessary values and information</li> </ul> <p>Attributes:</p> <ul> <li><code>grafana_api_model</code> APIModel - This is where we store the grafana_api_model</li> </ul> <p></p>"},{"location":"grafana_api/api/#call_the_api","title":"call_the_api","text":"<pre><code>def call_the_api(api_call: str,\n                 method: RequestsMethods = RequestsMethods.GET,\n                 json_complete: str = None,\n                 org_id_header: int = None,\n                 disable_provenance_header: bool = False,\n                 response_status_code: bool = False) -&gt; any\n</code></pre> <p>The method execute a defined API call against the Grafana endpoints</p> <p>Arguments:</p> <ul> <li><code>api_call</code> str - Specify the API call endpoint</li> <li><code>method</code> RequestsMethods - Specify the used method (default GET)</li> <li><code>json_complete</code> str - Specify the inserted JSON as string</li> <li><code>org_id_header</code> int - Specify the optional organization id as header for the corresponding API call</li> <li><code>disable_provenance_header</code> bool - Specify the optional disable provenance as header for the corresponding API call (default False)</li> <li><code>response_status_code</code> bool - Specify if the response should include the original status code (default False)</li> </ul> <p>Raises:</p> <ul> <li><code>Exception</code> - Unspecified error by executing the API call</li> </ul> <p>Returns:</p> <ul> <li><code>api_call</code> any - Returns the value of the api call</li> </ul> <p></p>"},{"location":"grafana_api/api/#prepare_api_string","title":"prepare_api_string","text":"<pre><code>@staticmethod\ndef prepare_api_string(query_string: str) -&gt; str\n</code></pre> <p>The method includes a functionality to prepare the api string for the queries</p> <p>Arguments:</p> <ul> <li><code>query_string</code> str - Specify the corresponding query string</li> </ul> <p>Returns:</p> <ul> <li><code>query_string</code> str - Returns the adjusted query string</li> </ul> <p></p>"},{"location":"grafana_api/api/#create_the_http_api_client","title":"create_the_http_api_client","text":"<pre><code>def create_the_http_api_client(\n        headers: dict = None) -&gt; Union[httpx.Client, httpx.AsyncClient]\n</code></pre> <p>The method includes a functionality to create the corresponding HTTP client</p> <p>Arguments:</p> <ul> <li><code>headers</code> dict - Specify the optional inserted headers (Default None)</li> </ul> <p>Returns:</p> <ul> <li><code>client</code> Union[httpx.Client, httpx.AsyncClient] - Returns the corresponding client</li> </ul>"},{"location":"grafana_api/authentication/","title":"Table of Contents","text":"<ul> <li>authentication</li> <li>Authentication<ul> <li>get_api_tokens</li> <li>create_api_token</li> <li>delete_api_token</li> </ul> </li> </ul>"},{"location":"grafana_api/authentication/#authentication","title":"authentication","text":""},{"location":"grafana_api/authentication/#authentication-objects","title":"Authentication Objects","text":"<pre><code>class Authentication()\n</code></pre> <p>The class includes all necessary methods to access the Grafana authentication API endpoints.</p> <p>Arguments:</p> <ul> <li><code>grafana_api_model</code> APIModel - Inject a Grafana API model object that includes all necessary values and information</li> </ul> <p>Attributes:</p> <ul> <li><code>grafana_api_model</code> APIModel - This is where we store the grafana_api_model</li> </ul> <p></p>"},{"location":"grafana_api/authentication/#get_api_tokens","title":"get_api_tokens","text":"<pre><code>def get_api_tokens(org_id_header: int = None) -&gt; list\n</code></pre> <p>The method includes a functionality to get the corresponding api tokens of the organisation</p> <p>Arguments:</p> <ul> <li><code>org_id_header</code> int - Specify the org id as header to execute call for that specific organisation</li> </ul> <p>Raises:</p> <ul> <li><code>Exception</code> - Unspecified error by executing the API call</li> </ul> <p>Returns:</p> <ul> <li><code>api_call</code> list - Returns the result of the API token call</li> </ul> <p></p>"},{"location":"grafana_api/authentication/#create_api_token","title":"create_api_token","text":"<pre><code>def create_api_token(name: str,\n                     role: str,\n                     seconds_to_live: int = 0,\n                     org_id_header: int = None) -&gt; dict\n</code></pre> <p>The method includes a functionality to create a corresponding api tokens of the organisation specified by the name and role</p> <p>Arguments:</p> <ul> <li><code>name</code> str - Specify the token name</li> <li><code>role</code> str - Specify the access level/Grafana Role for the token. Can be one of the following values: Viewer, Editor or Admin</li> <li><code>seconds_to_live</code> int - Specify the seconds of the token expiration in seconds. If it is a positive number an expiration date for the key is set. If it is null, zero or is omitted completely (unless api_key_max_seconds_to_live configuration option is set) the key will never expire (default 0)</li> <li><code>org_id_header</code> int - Specify the org id as header to execute call for that specific organisation</li> </ul> <p>Raises:</p> <ul> <li><code>ValueError</code> - Missed specifying a necessary value</li> <li><code>Exception</code> - Unspecified error by executing the API call</li> </ul> <p>Returns:</p> <ul> <li><code>api_call</code> dict - Returns the API token object</li> </ul> <p></p>"},{"location":"grafana_api/authentication/#delete_api_token","title":"delete_api_token","text":"<pre><code>def delete_api_token(token_id: int, org_id_header: int = None)\n</code></pre> <p>The method includes a functionality to delete a corresponding api token specified by the token id</p> <p>Arguments:</p> <ul> <li><code>token_id</code> int - Specify the token id</li> <li><code>org_id_header</code> int - Specify the org id as header to execute call for that specific organisation</li> </ul> <p>Raises:</p> <ul> <li><code>ValueError</code> - Missed specifying a necessary value</li> <li><code>Exception</code> - Unspecified error by executing the API call</li> </ul> <p>Returns:</p> <p>None</p>"},{"location":"grafana_api/correlations/","title":"Table of Contents","text":"<ul> <li>correlations</li> <li>Correlations<ul> <li>get_correlation</li> <li>get_all_correlations_by_datasource_uid</li> <li>get_all_correlations</li> <li>create_correlations</li> <li>delete_correlations</li> <li>update_correlations</li> </ul> </li> </ul>"},{"location":"grafana_api/correlations/#correlations","title":"correlations","text":""},{"location":"grafana_api/correlations/#correlations-objects","title":"Correlations Objects","text":"<pre><code>class Correlations()\n</code></pre> <p>The class includes all necessary methods to access the Grafana correlations API endpoints</p> <p>Arguments:</p> <ul> <li><code>grafana_api_model</code> APIModel - Inject a Grafana API model object that includes all necessary values and information</li> </ul> <p>Attributes:</p> <ul> <li><code>grafana_api_model</code> APIModel - This is where we store the grafana_api_model</li> </ul> <p></p>"},{"location":"grafana_api/correlations/#get_correlation","title":"get_correlation","text":"<pre><code>def get_correlation(datasource_uid: str, correlation_uid: str) -&gt; dict\n</code></pre> <p>The method includes a functionality to get a specific correlation from a data source - the data source identified by source uid and the correlation uid</p> <p>Arguments:</p> <ul> <li><code>datasource_uid</code> str - Specify the correlation data source uid</li> <li><code>correlation_uid</code> str - Specify the correlation uid</li> </ul> <p>Raises:</p> <ul> <li><code>ValueError</code> - Missed specifying a necessary value</li> <li><code>Exception</code> - Unspecified error by executing the API call</li> </ul> <p>Returns:</p> <ul> <li><code>api_call</code> dict - Returns the corresponding correlation</li> </ul> <p></p>"},{"location":"grafana_api/correlations/#get_all_correlations_by_datasource_uid","title":"get_all_correlations_by_datasource_uid","text":"<pre><code>def get_all_correlations_by_datasource_uid(datasource_uid: str) -&gt; list\n</code></pre> <p>The method includes a functionality to get all correlations from a data source - the data source identified by source uid</p> <p>Arguments:</p> <ul> <li><code>datasource_uid</code> str - Specify the correlation data source uid</li> </ul> <p>Raises:</p> <ul> <li><code>ValueError</code> - Missed specifying a necessary value</li> <li><code>Exception</code> - Unspecified error by executing the API call</li> </ul> <p>Returns:</p> <ul> <li><code>api_call</code> list - Returns the corresponding correlations</li> </ul> <p></p>"},{"location":"grafana_api/correlations/#get_all_correlations","title":"get_all_correlations","text":"<pre><code>def get_all_correlations() -&gt; Union[list, dict]\n</code></pre> <p>The method includes a functionality to get all correlations</p> <p>Raises:</p> <ul> <li><code>Exception</code> - Unspecified error by executing the API call</li> </ul> <p>Returns:</p> <ul> <li><code>api_call</code> Union[list, dict] - Returns the corresponding correlations</li> </ul> <p></p>"},{"location":"grafana_api/correlations/#create_correlations","title":"create_correlations","text":"<pre><code>def create_correlations(correlation_object: CorrelationObject) -&gt; dict\n</code></pre> <p>The method includes a functionality to create a correlation between two data sources - the source data source identified by source uid in the path, and the target data source which is specified in the body</p> <p>Arguments:</p> <ul> <li><code>correlation_object</code> CorrelationObject - Specify the correlation object</li> </ul> <p>Raises:</p> <ul> <li><code>ValueError</code> - Missed specifying a necessary value</li> <li><code>Exception</code> - Unspecified error by executing the API call</li> </ul> <p>Returns:</p> <ul> <li><code>api_call</code> dict - Returns the newly created correlation</li> </ul> <p></p>"},{"location":"grafana_api/correlations/#delete_correlations","title":"delete_correlations","text":"<pre><code>def delete_correlations(source_datasource_uid: str, correlation_uid: str)\n</code></pre> <p>The method includes a functionality to deletes a correlation</p> <p>Arguments:</p> <ul> <li><code>source_datasource_uid</code> str - Specify the source data source uid</li> <li><code>correlation_uid</code> str - Specify the correlation uid</li> </ul> <p>Raises:</p> <ul> <li><code>ValueError</code> - Missed specifying a necessary value</li> <li><code>Exception</code> - Unspecified error by executing the API call</li> </ul> <p>Returns:</p> <p>None</p> <p></p>"},{"location":"grafana_api/correlations/#update_correlations","title":"update_correlations","text":"<pre><code>def update_correlations(source_datasource_uid: str, correlation_uid: str,\n                        label: str, description: str) -&gt; dict\n</code></pre> <p>The method includes a functionality to update a correlation</p> <p>Arguments:</p> <ul> <li><code>source_datasource_uid</code> str - Specify the source data source uid</li> <li><code>correlation_uid</code> str - Specify the correlation uid</li> <li><code>label</code> str - Specify a label for the correlation</li> <li><code>description</code> str - Specify a description for the correlation</li> </ul> <p>Raises:</p> <ul> <li><code>ValueError</code> - Missed specifying a necessary value</li> <li><code>Exception</code> - Unspecified error by executing the API call</li> </ul> <p>Returns:</p> <ul> <li><code>api_call</code> dict - Returns the updated correlation</li> </ul>"},{"location":"grafana_api/dashboard/","title":"Table of Contents","text":"<ul> <li>dashboard</li> <li>Dashboard<ul> <li>create_or_update_dashboard</li> <li>delete_dashboard_by_name_and_path</li> <li>get_dashboard_by_uid</li> <li>get_dashboard_home</li> <li>get_dashboard_tags</li> <li>get_dashboard_uid_and_id_by_name_and_folder</li> <li>get_dashboard_permissions</li> <li>get_dashboard_permissions_by_uid</li> <li>update_dashboard_permissions</li> <li>update_dashboard_permissions_by_uid</li> <li>get_dashboard_versions</li> <li>get_dashboard_versions_by_uid</li> <li>get_dashboard_version</li> <li>get_dashboard_version_by_uid</li> <li>restore_dashboard_version</li> <li>restore_dashboard_version_by_uid</li> <li>calculate_dashboard_diff</li> <li>get_public_dashboards</li> <li>get_public_dashboard_by_uid</li> <li>create_public_dashboard</li> <li>update_public_dashboard</li> <li>delete_public_dashboard</li> </ul> </li> </ul>"},{"location":"grafana_api/dashboard/#dashboard","title":"dashboard","text":""},{"location":"grafana_api/dashboard/#dashboard-objects","title":"Dashboard Objects","text":"<pre><code>class Dashboard()\n</code></pre> <p>The class includes all necessary methods to access the Grafana dashboard API endpoints</p> <p>Arguments:</p> <ul> <li><code>grafana_api_model</code> APIModel - Inject a Grafana API model object that includes all necessary values and information</li> </ul> <p>Attributes:</p> <ul> <li><code>grafana_api_model</code> APIModel - This is where we store the grafana_api_model</li> </ul> <p></p>"},{"location":"grafana_api/dashboard/#create_or_update_dashboard","title":"create_or_update_dashboard","text":"<pre><code>def create_or_update_dashboard(dashboard_path: str,\n                               dashboard_json: dict,\n                               message: str,\n                               overwrite: bool = False)\n</code></pre> <p>The method includes a functionality to create the specified dashboard</p> <p>Arguments:</p> <ul> <li><code>dashboard_path</code> str - Specify the dashboard path in which the dashboard is to be placed</li> <li><code>dashboard_json</code> dict - Specify the inserted dashboard as dict</li> <li><code>message</code> str - Specify the message that should be injected as commit message inside the dashboard</li> <li><code>overwrite</code> bool - Should the already existing dashboard be overwritten (default False)</li> </ul> <p>Raises:</p> <ul> <li><code>ValueError</code> - Missed specifying a necessary value</li> <li><code>Exception</code> - Unspecified error by executing the API call</li> </ul> <p>Returns:</p> <p>None</p> <p></p>"},{"location":"grafana_api/dashboard/#delete_dashboard_by_name_and_path","title":"delete_dashboard_by_name_and_path","text":"<pre><code>def delete_dashboard_by_name_and_path(dashboard_name: str,\n                                      dashboard_path: str)\n</code></pre> <p>The method includes a functionality to delete the specified dashboard inside the model</p> <p>Arguments:</p> <ul> <li><code>dashboard_name</code> str - Specify the dashboard name of the deleted dashboard</li> <li><code>dashboard_path</code> str - Specify the dashboard path in which the dashboard is to be placed</li> </ul> <p>Raises:</p> <ul> <li><code>ValueError</code> - Missed specifying a necessary value</li> <li><code>Exception</code> - Unspecified error by executing the API call</li> </ul> <p>Returns:</p> <p>None</p> <p></p>"},{"location":"grafana_api/dashboard/#get_dashboard_by_uid","title":"get_dashboard_by_uid","text":"<pre><code>def get_dashboard_by_uid(uid: str) -&gt; dict\n</code></pre> <p>The method includes a functionality to get the dashboard from the specified uid</p> <p>Arguments:</p> <ul> <li><code>uid</code> str - Specify the uid of the dashboard</li> </ul> <p>Raises:</p> <ul> <li><code>ValueError</code> - Missed specifying a necessary value</li> <li><code>Exception</code> - Unspecified error by executing the API call</li> </ul> <p>Returns:</p> <ul> <li><code>api_call</code> dict - Returns the dashboard</li> </ul> <p></p>"},{"location":"grafana_api/dashboard/#get_dashboard_home","title":"get_dashboard_home","text":"<pre><code>def get_dashboard_home() -&gt; dict\n</code></pre> <p>The method includes a functionality to get the home dashboard</p> <p>Raises:</p> <ul> <li><code>Exception</code> - Unspecified error by executing the API call</li> </ul> <p>Returns:</p> <ul> <li><code>api_call</code> dict - Returns the home dashboard</li> </ul> <p></p>"},{"location":"grafana_api/dashboard/#get_dashboard_tags","title":"get_dashboard_tags","text":"<pre><code>def get_dashboard_tags() -&gt; list\n</code></pre> <p>The method includes a functionality to get the all tags of all dashboards</p> <p>Raises:</p> <ul> <li><code>Exception</code> - Unspecified error by executing the API call</li> </ul> <p>Returns:</p> <ul> <li><code>api_call</code> list - Returns all dashboard tags</li> </ul> <p></p>"},{"location":"grafana_api/dashboard/#get_dashboard_uid_and_id_by_name_and_folder","title":"get_dashboard_uid_and_id_by_name_and_folder","text":"<pre><code>def get_dashboard_uid_and_id_by_name_and_folder(dashboard_name: str,\n                                                dashboard_path: str) -&gt; dict\n</code></pre> <p>The method includes a functionality to extract the dashboard uid specified inside the model</p> <p>Arguments:</p> <ul> <li><code>dashboard_name</code> str - Specify the dashboard name of the dashboard</li> <li><code>dashboard_path</code> str - Specify the dashboard path of the dashboard</li> </ul> <p>Raises:</p> <ul> <li><code>ValueError</code> - Missed specifying a necessary value</li> <li><code>Exception</code> - Unspecified error by executing the API call</li> </ul> <p>Returns:</p> <ul> <li><code>api_call</code> dict - Returns the dashboard uid and the id</li> </ul> <p></p>"},{"location":"grafana_api/dashboard/#get_dashboard_permissions","title":"get_dashboard_permissions","text":"<pre><code>def get_dashboard_permissions(id: int) -&gt; list\n</code></pre> <p>The method includes a functionality to extract the dashboard permissions based on the specified id</p> <p>Arguments:</p> <ul> <li><code>id</code> int - Specify the id of the dashboard</li> </ul> <p>Raises:</p> <ul> <li><code>ValueError</code> - Missed specifying a necessary value</li> <li><code>Exception</code> - Unspecified error by executing the API call</li> </ul> <p>Returns:</p> <ul> <li><code>api_call</code> list - Returns the dashboard permissions of a dashboard as list</li> </ul> <p></p>"},{"location":"grafana_api/dashboard/#get_dashboard_permissions_by_uid","title":"get_dashboard_permissions_by_uid","text":"<pre><code>def get_dashboard_permissions_by_uid(uid: str) -&gt; list\n</code></pre> <p>The method includes a functionality to extract the dashboard permissions based on the specified uid</p> <p>Arguments:</p> <ul> <li><code>uid</code> str - Specify the uid of the dashboard</li> </ul> <p>Raises:</p> <ul> <li><code>ValueError</code> - Missed specifying a necessary value</li> <li><code>Exception</code> - Unspecified error by executing the API call</li> </ul> <p>Returns:</p> <ul> <li><code>api_call</code> list - Returns the dashboard permissions of a dashboard as list</li> </ul> <p></p>"},{"location":"grafana_api/dashboard/#update_dashboard_permissions","title":"update_dashboard_permissions","text":"<pre><code>def update_dashboard_permissions(id: int, permission_json: dict)\n</code></pre> <p>The method includes a functionality to update the dashboard permissions based on the specified id and the permission json document</p> <p>Arguments:</p> <ul> <li><code>id</code> int - Specify the id of the dashboard</li> <li><code>permission_json</code> dict - Specify the inserted permissions as dict</li> </ul> <p>Raises:</p> <ul> <li><code>ValueError</code> - Missed specifying a necessary value</li> <li><code>Exception</code> - Unspecified error by executing the API call</li> </ul> <p>Returns:</p> <p>None</p> <p></p>"},{"location":"grafana_api/dashboard/#update_dashboard_permissions_by_uid","title":"update_dashboard_permissions_by_uid","text":"<pre><code>def update_dashboard_permissions_by_uid(uid: str, permission_json: dict)\n</code></pre> <p>The method includes a functionality to update the dashboard permissions based on the specified uid and the permission json document</p> <p>Arguments:</p> <ul> <li><code>uid</code> str - Specify the uid of the dashboard</li> <li><code>permission_json</code> dict - Specify the inserted permissions as dict</li> </ul> <p>Raises:</p> <ul> <li><code>ValueError</code> - Missed specifying a necessary value</li> <li><code>Exception</code> - Unspecified error by executing the API call</li> </ul> <p>Returns:</p> <p>None</p> <p></p>"},{"location":"grafana_api/dashboard/#get_dashboard_versions","title":"get_dashboard_versions","text":"<pre><code>def get_dashboard_versions(id: int) -&gt; list\n</code></pre> <p>The method includes a functionality to extract the versions of a dashboard based on the specified id</p> <p>Arguments:</p> <ul> <li><code>id</code> int - Specify the id of the dashboard</li> </ul> <p>Raises:</p> <ul> <li><code>ValueError</code> - Missed specifying a necessary value</li> <li><code>Exception</code> - Unspecified error by executing the API call</li> </ul> <p>Returns:</p> <ul> <li><code>api_call</code> list - Returns all dashboard versions of a dashboard as list</li> </ul> <p></p>"},{"location":"grafana_api/dashboard/#get_dashboard_versions_by_uid","title":"get_dashboard_versions_by_uid","text":"<pre><code>def get_dashboard_versions_by_uid(uid: str) -&gt; list\n</code></pre> <p>The method includes a functionality to extract the versions of a dashboard based on the specified uid</p> <p>Arguments:</p> <ul> <li><code>uid</code> str - Specify the id of the dashboard</li> </ul> <p>Raises:</p> <ul> <li><code>ValueError</code> - Missed specifying a necessary value</li> <li><code>Exception</code> - Unspecified error by executing the API call</li> </ul> <p>Returns:</p> <ul> <li><code>api_call</code> list - Returns all dashboard versions of a dashboard as list</li> </ul> <p></p>"},{"location":"grafana_api/dashboard/#get_dashboard_version","title":"get_dashboard_version","text":"<pre><code>def get_dashboard_version(id: int, version_id: int) -&gt; dict\n</code></pre> <p>The method includes a functionality to extract a specified version of a dashboard based on the specified dashboard id and a version_id of the dashboard</p> <p>Arguments:</p> <ul> <li><code>id</code> int - Specify the id of the dashboard</li> <li><code>version_id</code> int - Specify the version_id of a dashboard</li> </ul> <p>Raises:</p> <ul> <li><code>ValueError</code> - Missed specifying a necessary value</li> <li><code>Exception</code> - Unspecified error by executing the API call</li> </ul> <p>Returns:</p> <ul> <li><code>api_call</code> list - Returns a dashboard version of a dashboard as dict</li> </ul> <p></p>"},{"location":"grafana_api/dashboard/#get_dashboard_version_by_uid","title":"get_dashboard_version_by_uid","text":"<pre><code>def get_dashboard_version_by_uid(uid: str, version_id: int) -&gt; dict\n</code></pre> <p>The method includes a functionality to extract a specified version of a dashboard based on the specified dashboard uid and a version_id of the dashboard</p> <p>Arguments:</p> <ul> <li><code>uid</code> str - Specify the uid of the dashboard</li> <li><code>version_id</code> int - Specify the version_id of a dashboard</li> </ul> <p>Raises:</p> <ul> <li><code>ValueError</code> - Missed specifying a necessary value</li> <li><code>Exception</code> - Unspecified error by executing the API call</li> </ul> <p>Returns:</p> <ul> <li><code>api_call</code> list - Returns a dashboard version of a dashboard as dict</li> </ul> <p></p>"},{"location":"grafana_api/dashboard/#restore_dashboard_version","title":"restore_dashboard_version","text":"<pre><code>def restore_dashboard_version(id: int, version: dict)\n</code></pre> <p>The method includes a functionality to restore a specified version of a dashboard based on the specified dashboard id and a version as dict of the dashboard</p> <p>Arguments:</p> <ul> <li><code>id</code> int - Specify the id of the dashboard</li> <li><code>version</code> dict - Specify the version_id of a dashboard</li> </ul> <p>Raises:</p> <ul> <li><code>ValueError</code> - Missed specifying a necessary value</li> <li><code>Exception</code> - Unspecified error by executing the API call</li> </ul> <p>Returns:</p> <p>None</p> <p></p>"},{"location":"grafana_api/dashboard/#restore_dashboard_version_by_uid","title":"restore_dashboard_version_by_uid","text":"<pre><code>def restore_dashboard_version_by_uid(uid: str, version: dict)\n</code></pre> <p>The method includes a functionality to restore a specified version of a dashboard based on the specified dashboard uid and a version as dict of the dashboard</p> <p>Arguments:</p> <ul> <li><code>uid</code> str - Specify the uid of the dashboard</li> <li><code>version</code> dict - Specify the version_id of a dashboard</li> </ul> <p>Raises:</p> <ul> <li><code>ValueError</code> - Missed specifying a necessary value</li> <li><code>Exception</code> - Unspecified error by executing the API call</li> </ul> <p>Returns:</p> <p>None</p> <p></p>"},{"location":"grafana_api/dashboard/#calculate_dashboard_diff","title":"calculate_dashboard_diff","text":"<pre><code>def calculate_dashboard_diff(dashboard_id_and_version_base: dict,\n                             dashboard_id_and_version_new: dict,\n                             diff_type: str = \"json\") -&gt; str\n</code></pre> <p>The method includes a functionality to calculate the diff of specified versions of a dashboard based on the specified dashboard uid and the selected version of the base dashboard and the new dashboard and the diff type (basic or json)</p> <p>Arguments:</p> <ul> <li><code>dashboard_id_and_version_base</code> dict - Specify the version and id of the base dashboard</li> <li><code>dashboard_id_and_version_new</code> dict - Specify the version and id of the new dashboard</li> <li><code>diff_type</code> str - Specify the diff type (basic or json) (default json)</li> </ul> <p>Raises:</p> <ul> <li><code>ValueError</code> - Missed specifying a necessary value</li> <li><code>Exception</code> - Unspecified error by executing the API call</li> </ul> <p>Returns:</p> <ul> <li><code>api_call</code> str - Returns the difference of the two specified dashboards</li> </ul> <p></p>"},{"location":"grafana_api/dashboard/#get_public_dashboards","title":"get_public_dashboards","text":"<pre><code>def get_public_dashboards(per_page: int = None, page: int = None) -&gt; dict\n</code></pre> <p>The method includes a functionality to get all public available dashboards</p> <p>Required Permissions: Action: dashboards:read Scope: dashboards:uid: <p>Arguments:</p> <ul> <li><code>per_page</code> int - Specify the value per page size</li> <li><code>page</code> int - Specify the page</li> </ul> <p>Raises:</p> <ul> <li><code>Exception</code> - Unspecified error by executing the API call</li> </ul> <p>Returns:</p> <ul> <li><code>api_call</code> dict - Returns all public available dashboards</li> </ul> <p></p>"},{"location":"grafana_api/dashboard/#get_public_dashboard_by_uid","title":"get_public_dashboard_by_uid","text":"<pre><code>def get_public_dashboard_by_uid(dashboard_uid: str) -&gt; dict\n</code></pre> <p>The method includes a functionality to get a public available dashboard specified by dashboard_uid</p> <p>Required Permissions: Action: dashboards:read Scope: dashboards:uid: <p>Arguments:</p> <ul> <li><code>dashboard_uid</code> str - Specify the dashboard_uid</li> </ul> <p>Raises:</p> <ul> <li><code>ValueError</code> - Missed specifying a necessary value</li> <li><code>Exception</code> - Unspecified error by executing the API call</li> </ul> <p>Returns:</p> <ul> <li><code>api_call</code> dict - Returns the corresponding public available dashboard</li> </ul> <p></p>"},{"location":"grafana_api/dashboard/#create_public_dashboard","title":"create_public_dashboard","text":"<pre><code>def create_public_dashboard(\n    dashboard_uid: str, public_dashboard: PublicDashboard = PublicDashboard()\n) -&gt; dict\n</code></pre> <p>The method includes a functionality to create a public available dashboard</p> <p>Required Permissions: Action: dashboards.public:write Scope: dashboards:uid: <p>Arguments:</p> <ul> <li><code>dashboard_uid</code> str - Specify the dashboard_uid</li> <li><code>public_dashboard</code> PublicDashboard - Specify the optional public dashboard object</li> </ul> <p>Raises:</p> <ul> <li><code>ValueError</code> - Missed specifying a necessary value</li> <li><code>Exception</code> - Unspecified error by executing the API call</li> </ul> <p>Returns:</p> <ul> <li><code>api_call</code> dict - Returns the corresponding public available dashboard</li> </ul> <p></p>"},{"location":"grafana_api/dashboard/#update_public_dashboard","title":"update_public_dashboard","text":"<pre><code>def update_public_dashboard(dashboard_uid: str,\n                            public_dashboard_uid: str,\n                            time_selection_enabled: bool = None,\n                            is_enabled: bool = None,\n                            annotations_enabled: bool = None,\n                            share: str = None) -&gt; dict\n</code></pre> <p>The method includes a functionality to update a public available dashboard</p> <p>Required Permissions: Action: dashboards.public:write Scope: dashboards:uid: <p>Arguments:</p> <ul> <li><code>dashboard_uid</code> str - Specify the dashboard_uid</li> <li><code>public_dashboard_uid</code> str - Specify the public_dashboard_uid</li> <li><code>time_selection_enabled</code> bool - Specify the optional enablement of the time picker inside the public dashboard (default None)</li> <li><code>is_enabled</code> bool - Specify the optional enablement of the public dashboard (default None)</li> <li><code>annotations_enabled</code> bool - Specify the optional enablement of the annotations inside the public dashboard (default None)</li> <li><code>share</code> str - Specify the optional share mode of the public dashboard (default None)</li> </ul> <p>Raises:</p> <ul> <li><code>ValueError</code> - Missed specifying a necessary value</li> <li><code>Exception</code> - Unspecified error by executing the API call</li> </ul> <p>Returns:</p> <ul> <li><code>api_call</code> dict - Returns the corresponding public available dashboard</li> </ul> <p></p>"},{"location":"grafana_api/dashboard/#delete_public_dashboard","title":"delete_public_dashboard","text":"<pre><code>def delete_public_dashboard(dashboard_uid: str, public_dashboard_uid: str)\n</code></pre> <p>The method includes a functionality to delete a public available dashboard</p> <p>Required Permissions: Action: dashboards.public:write Scope: dashboards:uid: <p>Arguments:</p> <ul> <li><code>dashboard_uid</code> str - Specify the dashboard_uid</li> <li><code>public_dashboard_uid</code> str - Specify the public_dashboard_uid</li> </ul> <p>Raises:</p> <ul> <li><code>ValueError</code> - Missed specifying a necessary value</li> <li><code>Exception</code> - Unspecified error by executing the API call</li> </ul> <p>Returns:</p> <p>None</p>"},{"location":"grafana_api/datasource/","title":"Table of Contents","text":"<ul> <li>datasource</li> <li>Datasource<ul> <li>get_all_datasources</li> <li>get_datasource_by_id</li> <li>get_datasource_by_uid</li> <li>get_datasource_by_name</li> <li>get_datasource_id_by_name</li> <li>create_datasource</li> <li>update_datasource</li> <li>delete_datasource_by_id</li> <li>delete_datasource_by_uid</li> <li>delete_datasource_by_name</li> <li>query_datasource_by_id</li> </ul> </li> <li>DatasourcePermissions<ul> <li>get_datasource_permissions_by_uid</li> <li>update_datasource_user_access_by_uid</li> <li>update_datasource_team_access_by_uid</li> <li>update_datasource_basic_role_access_by_uid</li> </ul> </li> <li>DatasourceLegacyPermissions<ul> <li>enable_datasource_permissions</li> <li>disable_datasource_permissions</li> <li>get_datasource_permissions</li> <li>add_datasource_permissions</li> <li>delete_datasource_permissions</li> </ul> </li> <li>DatasourceQueryResourceCaching<ul> <li>get_datasource_cache</li> <li>enable_datasource_cache</li> <li>disable_datasource_cache</li> <li>clean_datasource_cache</li> <li>update_datasource_cache</li> </ul> </li> <li>DatasourceLabelBasedAccessControl<ul> <li>get_lbac_rules_for_datasource</li> <li>update_lbac_rules_for_datasource</li> </ul> </li> </ul>"},{"location":"grafana_api/datasource/#datasource","title":"datasource","text":""},{"location":"grafana_api/datasource/#datasource-objects","title":"Datasource Objects","text":"<pre><code>class Datasource()\n</code></pre> <p>The class includes all necessary methods to access the Grafana datasource API endpoints. It's required that the API token got the corresponding datasource access rights. Please check the used methods docstring for the necessary access rights</p> <p>HINT: Note Grafana Enterprise API need required permissions if fine-grained access control is enabled</p> <p>Arguments:</p> <ul> <li><code>grafana_api_model</code> APIModel - Inject a Grafana API model object that includes all necessary values and information</li> </ul> <p>Attributes:</p> <ul> <li><code>grafana_api_model</code> APIModel - This is where we store the grafana_api_model</li> </ul> <p></p>"},{"location":"grafana_api/datasource/#get_all_datasources","title":"get_all_datasources","text":"<pre><code>def get_all_datasources() -&gt; list\n</code></pre> <p>The method includes a functionality to get all datasources</p> <p>Required Permissions: Action: datasources:read Scope: datasources:*</p> <p>Raises:</p> <ul> <li><code>Exception</code> - Unspecified error by executing the API call</li> </ul> <p>Returns:</p> <ul> <li><code>api_call</code> list - Returns the list of all datasources</li> </ul> <p></p>"},{"location":"grafana_api/datasource/#get_datasource_by_id","title":"get_datasource_by_id","text":"<pre><code>def get_datasource_by_id(datasource_id: int) -&gt; dict\n</code></pre> <p>The method includes a functionality to get the datasource specified by the datasource id</p> <p>Arguments:</p> <ul> <li><code>datasource_id</code> int - Specify the id of the datasource</li> </ul> <p>Required Permissions: - <code>Action</code> - datasources:read - <code>Scope</code> - [datasources:, datasources:id:, datasources:id:] <p>Raises:</p> <ul> <li><code>ValueError</code> - Missed specifying a necessary value</li> <li><code>Exception</code> - Unspecified error by executing the API call</li> </ul> <p>Returns:</p> <ul> <li><code>api_call</code> dict - Returns a datasource</li> </ul> <p></p>"},{"location":"grafana_api/datasource/#get_datasource_by_uid","title":"get_datasource_by_uid","text":"<pre><code>def get_datasource_by_uid(uid: str) -&gt; dict\n</code></pre> <p>The method includes a functionality to get the datasource specified by the datasource uid</p> <p>Arguments:</p> <ul> <li><code>uid</code> str - Specify the uid of the datasource</li> </ul> <p>Required Permissions: - <code>Action</code> - datasources:read - <code>Scope</code> - [datasources:, datasources:uid:, datasources:uid:] <p>Raises:</p> <ul> <li><code>ValueError</code> - Missed specifying a necessary value</li> <li><code>Exception</code> - Unspecified error by executing the API call</li> </ul> <p>Returns:</p> <ul> <li><code>api_call</code> dict - Returns a datasource</li> </ul> <p></p>"},{"location":"grafana_api/datasource/#get_datasource_by_name","title":"get_datasource_by_name","text":"<pre><code>def get_datasource_by_name(name: str) -&gt; dict\n</code></pre> <p>The method includes a functionality to get the datasource specified by the datasource name</p> <p>Arguments:</p> <ul> <li><code>name</code> str - Specify the name of the datasource</li> </ul> <p>Required Permissions: - <code>Action</code> - datasources:read - <code>Scope</code> - [datasources:, datasources:name:, datasources:name:] <p>Raises:</p> <ul> <li><code>ValueError</code> - Missed specifying a necessary value</li> <li><code>Exception</code> - Unspecified error by executing the API call</li> </ul> <p>Returns:</p> <ul> <li><code>api_call</code> dict - Returns a datasource</li> </ul> <p></p>"},{"location":"grafana_api/datasource/#get_datasource_id_by_name","title":"get_datasource_id_by_name","text":"<pre><code>def get_datasource_id_by_name(name: str) -&gt; int\n</code></pre> <p>The method includes a functionality to get the datasource id specified by the datasource name</p> <p>Arguments:</p> <ul> <li><code>name</code> str - Specify the name of the datasource</li> </ul> <p>Required Permissions: - <code>Action</code> - datasources:read - <code>Scope</code> - [datasources:, datasources:name:, datasources:name:] <p>Raises:</p> <ul> <li><code>ValueError</code> - Missed specifying a necessary value</li> <li><code>Exception</code> - Unspecified error by executing the API call</li> </ul> <p>Returns:</p> <ul> <li><code>api_call</code> int - Returns a datasource id</li> </ul> <p></p>"},{"location":"grafana_api/datasource/#create_datasource","title":"create_datasource","text":"<pre><code>def create_datasource(data_source: dict)\n</code></pre> <p>The method includes a functionality to create a datasource specified by the datasource as dict</p> <p>Arguments:</p> <ul> <li><code>data_source</code> dict - Specify the datasource as dict</li> </ul> <p>Required Permissions: - <code>Action</code> - datasources:create</p> <p>Raises:</p> <ul> <li><code>ValueError</code> - Missed specifying a necessary value</li> <li><code>Exception</code> - Unspecified error by executing the API call</li> </ul> <p>Returns:</p> <p>None</p> <p></p>"},{"location":"grafana_api/datasource/#update_datasource","title":"update_datasource","text":"<pre><code>def update_datasource(datasource_id: int, data_source: dict)\n</code></pre> <p>The method includes a functionality to update a datasource specified by the datasource as dict and the datasource id</p> <p>Arguments:</p> <ul> <li><code>datasource_id</code> int - Specify the id of the datasource</li> <li><code>data_source</code> dict - Specify the datasource as dict</li> </ul> <p>Required Permissions: - <code>Action</code> - datasources:write - <code>Scope</code> - [datasources:, datasources:id:, datasources:id:] <p>Raises:</p> <ul> <li><code>ValueError</code> - Missed specifying a necessary value</li> <li><code>Exception</code> - Unspecified error by executing the API call</li> </ul> <p>Returns:</p> <p>None</p> <p></p>"},{"location":"grafana_api/datasource/#delete_datasource_by_id","title":"delete_datasource_by_id","text":"<pre><code>def delete_datasource_by_id(datasource_id: int)\n</code></pre> <p>The method includes a functionality to delete a datasource specified by the datasource id</p> <p>Arguments:</p> <ul> <li><code>datasource_id</code> int - Specify the id of the datasource</li> </ul> <p>Required Permissions: - <code>Action</code> - datasources:delete - <code>Scope</code> - [datasources:, datasources:id:, datasources:id:] <p>Raises:</p> <ul> <li><code>ValueError</code> - Missed specifying a necessary value</li> <li><code>Exception</code> - Unspecified error by executing the API call</li> </ul> <p>Returns:</p> <p>None</p> <p></p>"},{"location":"grafana_api/datasource/#delete_datasource_by_uid","title":"delete_datasource_by_uid","text":"<pre><code>def delete_datasource_by_uid(uid: str)\n</code></pre> <p>The method includes a functionality to delete a datasource specified by the datasource uid</p> <p>Arguments:</p> <ul> <li><code>uid</code> str - Specify the uid of the datasource</li> </ul> <p>Required Permissions: - <code>Action</code> - datasources:delete - <code>Scope</code> - [datasources:, datasources:uid:, datasources:uid:] <p>Raises:</p> <ul> <li><code>ValueError</code> - Missed specifying a necessary value</li> <li><code>Exception</code> - Unspecified error by executing the API call</li> </ul> <p>Returns:</p> <p>None</p> <p></p>"},{"location":"grafana_api/datasource/#delete_datasource_by_name","title":"delete_datasource_by_name","text":"<pre><code>def delete_datasource_by_name(name: str)\n</code></pre> <p>The method includes a functionality to delete a datasource specified by the datasource name</p> <p>Arguments:</p> <ul> <li><code>name</code> str - Specify the name of the datasource</li> </ul> <p>Required Permissions: - <code>Action</code> - datasources:delete - <code>Scope</code> - [datasources:, datasources:name:, datasources:name:] <p>Raises:</p> <ul> <li><code>ValueError</code> - Missed specifying a necessary value</li> <li><code>Exception</code> - Unspecified error by executing the API call</li> </ul> <p>Returns:</p> <p>None</p> <p></p>"},{"location":"grafana_api/datasource/#query_datasource_by_id","title":"query_datasource_by_id","text":"<pre><code>def query_datasource_by_id(time: str, to: str,\n                           datasource_queries: list) -&gt; dict\n</code></pre> <p>The method includes a functionality to execute a queries inside the datasource itself specified by the datasource id</p> <p>Arguments:</p> <ul> <li><code>from</code> str - Specify the name of the absolute in epoch timestamps in milliseconds or relative using Grafana time units. For example, now-1h</li> <li><code>to</code> str - Specify the name of the absolute in epoch timestamps in milliseconds or relative using Grafana time units. For example, now-1h</li> <li><code>datasource_queries</code> list - Specify a list of execution queries based on the DatasourceQuery class</li> </ul> <p>Raises:</p> <ul> <li><code>ValueError</code> - Missed specifying a necessary value</li> <li><code>Exception</code> - Unspecified error by executing the API call</li> </ul> <p>Returns:</p> <ul> <li><code>api_call</code> dict - Returns the result of the specified query</li> </ul> <p></p>"},{"location":"grafana_api/datasource/#datasourcepermissions-objects","title":"DatasourcePermissions Objects","text":"<pre><code>class DatasourcePermissions()\n</code></pre> <p>The class includes all necessary methods to access the Grafana datasource permissions API endpoints. It's required that the API token got the corresponding datasource access rights. Please check the used methods docstring for the necessary access rights</p> <p>HINT: Note Grafana Enterprise API need required permissions if fine-grained access control is enabled</p> <p>Arguments:</p> <ul> <li><code>grafana_api_model</code> APIModel - Inject a Grafana API model object that includes all necessary values and information</li> </ul> <p>Attributes:</p> <ul> <li><code>grafana_api_model</code> APIModel - This is where we store the grafana_api_model</li> </ul> <p></p>"},{"location":"grafana_api/datasource/#get_datasource_permissions_by_uid","title":"get_datasource_permissions_by_uid","text":"<pre><code>def get_datasource_permissions_by_uid(uid: str) -&gt; list\n</code></pre> <p>The method includes a functionality to get the datasource permissions specified by the datasource uid. The functionality is a Grafana ENTERPRISE feature</p> <p>Arguments:</p> <ul> <li><code>uid</code> str - Specify the uid of the datasource</li> </ul> <p>Required Permissions: - <code>Action</code> - datasources.permissions:read - <code>Scope</code> - [datasources:, datasources:uid:, datasources:uid:] <p>Raises:</p> <ul> <li><code>ValueError</code> - Missed specifying a necessary value</li> <li><code>Exception</code> - Unspecified error by executing the API call</li> </ul> <p>Returns:</p> <ul> <li><code>api_call</code> list - Returns the datasource permissions</li> </ul> <p></p>"},{"location":"grafana_api/datasource/#update_datasource_user_access_by_uid","title":"update_datasource_user_access_by_uid","text":"<pre><code>def update_datasource_user_access_by_uid(\n        uid: str, id: int, datasource_user_permission: DatasourcePermission)\n</code></pre> <p>The method includes a functionality to update the datasource permission specified by the datasource uid and the user id. The functionality is a Grafana ENTERPRISE feature</p> <p>Arguments:</p> <ul> <li><code>uid</code> str - Specify the uid of the datasource</li> <li><code>id</code> int - Specify the id of the user</li> <li><code>datasource_user_permission</code> DatasourcePermission - Specify the datasource user permission</li> </ul> <p>Required Permissions: - <code>Action</code> - datasources.permissions:write - <code>Scope</code> - [datasources:, datasources:uid:, datasources:uid:] <p>Raises:</p> <ul> <li><code>ValueError</code> - Missed specifying a necessary value</li> <li><code>Exception</code> - Unspecified error by executing the API call</li> </ul> <p>Returns:</p> <p>None</p> <p></p>"},{"location":"grafana_api/datasource/#update_datasource_team_access_by_uid","title":"update_datasource_team_access_by_uid","text":"<pre><code>def update_datasource_team_access_by_uid(\n        uid: str, id: int, datasource_team_permission: DatasourcePermission)\n</code></pre> <p>The method includes a functionality to update the datasource permission specified by the datasource uid and the team id. The functionality is a Grafana ENTERPRISE feature</p> <p>Arguments:</p> <ul> <li><code>uid</code> str - Specify the uid of the datasource</li> <li><code>id</code> int - Specify the id of the team</li> <li><code>datasource_team_permission</code> DatasourcePermission - Specify the datasource team permission</li> </ul> <p>Required Permissions: - <code>Action</code> - datasources.permissions:write - <code>Scope</code> - [datasources:, datasources:uid:, datasources:uid:] <p>Raises:</p> <ul> <li><code>ValueError</code> - Missed specifying a necessary value</li> <li><code>Exception</code> - Unspecified error by executing the API call</li> </ul> <p>Returns:</p> <p>None</p> <p></p>"},{"location":"grafana_api/datasource/#update_datasource_basic_role_access_by_uid","title":"update_datasource_basic_role_access_by_uid","text":"<pre><code>def update_datasource_basic_role_access_by_uid(\n        uid: str, build_in_role_name: str,\n        datasource_team_permission: DatasourcePermission)\n</code></pre> <p>The method includes a functionality to update the datasource permission specified by the datasource uid and the build in role name. The functionality is a Grafana ENTERPRISE feature</p> <p>Arguments:</p> <ul> <li><code>uid</code> str - Specify the uid of the datasource</li> <li><code>build_in_role_name</code> str - Specify the build in role name</li> <li><code>datasource_team_permission</code> DatasourcePermission - Specify the datasource team permission</li> </ul> <p>Required Permissions: - <code>Action</code> - datasources.permissions:write - <code>Scope</code> - [datasources:, datasources:uid:, datasources:uid:] <p>Raises:</p> <ul> <li><code>ValueError</code> - Missed specifying a necessary value</li> <li><code>Exception</code> - Unspecified error by executing the API call</li> </ul> <p>Returns:</p> <p>None</p> <p></p>"},{"location":"grafana_api/datasource/#datasourcelegacypermissions-objects","title":"DatasourceLegacyPermissions Objects","text":"<pre><code>class DatasourceLegacyPermissions()\n</code></pre> <p>The class includes all necessary methods to access the Grafana legacy datasource permissions API endpoints. It's required that the API token got the corresponding datasource access rights. Please check the used methods docstring for the necessary access rights</p> <p>HINT: Note Grafana Enterprise API need required permissions if fine-grained access control is enabled</p> <p>Arguments:</p> <ul> <li><code>grafana_api_model</code> APIModel - Inject a Grafana API model object that includes all necessary values and information</li> </ul> <p>Attributes:</p> <ul> <li><code>grafana_api_model</code> APIModel - This is where we store the grafana_api_model</li> </ul> <p></p>"},{"location":"grafana_api/datasource/#enable_datasource_permissions","title":"enable_datasource_permissions","text":"<pre><code>def enable_datasource_permissions(datasource_id: int)\n</code></pre> <p>The method includes a functionality to enable datasource permissions specified by the datasource id. The functionality is a Grafana ENTERPRISE feature</p> <p>Arguments:</p> <ul> <li><code>datasource_id</code> int - Specify the id of the datasource</li> </ul> <p>Required Permissions: - <code>Action</code> - datasources.permissions:write - <code>Scope</code> - [datasources:, datasources:id:, datasources:id:] <p>Raises:</p> <ul> <li><code>ValueError</code> - Missed specifying a necessary value</li> <li><code>Exception</code> - Unspecified error by executing the API call</li> </ul> <p>Returns:</p> <p>None</p> <p></p>"},{"location":"grafana_api/datasource/#disable_datasource_permissions","title":"disable_datasource_permissions","text":"<pre><code>def disable_datasource_permissions(datasource_id: int)\n</code></pre> <p>The method includes a functionality to disable datasource permissions specified by the datasource id. The functionality is a Grafana ENTERPRISE feature</p> <p>Arguments:</p> <ul> <li><code>datasource_id</code> int - Specify the id of the datasource</li> </ul> <p>Required Permissions: - <code>Action</code> - datasources.permissions:write - <code>Scope</code> - [datasources:, datasources:id:, datasources:id:] <p>Raises:</p> <ul> <li><code>ValueError</code> - Missed specifying a necessary value</li> <li><code>Exception</code> - Unspecified error by executing the API call</li> </ul> <p>Returns:</p> <p>None</p> <p></p>"},{"location":"grafana_api/datasource/#get_datasource_permissions","title":"get_datasource_permissions","text":"<pre><code>def get_datasource_permissions(datasource_id: int) -&gt; dict\n</code></pre> <p>The method includes a functionality to get the datasource permissions specified by the datasource id. The functionality is a Grafana ENTERPRISE feature</p> <p>Arguments:</p> <ul> <li><code>datasource_id</code> int - Specify the id of the datasource</li> </ul> <p>Required Permissions: - <code>Action</code> - datasources.permissions:read - <code>Scope</code> - [datasources:, datasources:id:, datasources:id:] <p>Raises:</p> <ul> <li><code>ValueError</code> - Missed specifying a necessary value</li> <li><code>Exception</code> - Unspecified error by executing the API call</li> </ul> <p>Returns:</p> <ul> <li><code>api_call</code> dict - Returns the datasource permissions</li> </ul> <p></p>"},{"location":"grafana_api/datasource/#add_datasource_permissions","title":"add_datasource_permissions","text":"<pre><code>def add_datasource_permissions(datasource_id: int,\n                               datasource_permission: dict)\n</code></pre> <p>The method includes a functionality to add datasource permission specified by the datasource id and the datasource permission dict. The functionality is a Grafana ENTERPRISE feature</p> <p>Arguments:</p> <ul> <li><code>datasource_id</code> int - Specify the id of the datasource</li> <li><code>datasource_permission</code> dict - Specify the permission of the datasource</li> </ul> <p>Required Permissions: - <code>Action</code> - datasources.permissions:write - <code>Scope</code> - [datasources:, datasources:id:, datasources:id:] <p>Raises:</p> <ul> <li><code>ValueError</code> - Missed specifying a necessary value</li> <li><code>Exception</code> - Unspecified error by executing the API call</li> </ul> <p>Returns:</p> <p>None</p> <p></p>"},{"location":"grafana_api/datasource/#delete_datasource_permissions","title":"delete_datasource_permissions","text":"<pre><code>def delete_datasource_permissions(datasource_id: int, permission_id: int)\n</code></pre> <p>The method includes a functionality to delete datasource permission specified by the datasource id and the permission id. The functionality is a Grafana ENTERPRISE feature</p> <p>Arguments:</p> <ul> <li><code>datasource_id</code> int - Specify the id of the datasource</li> <li><code>permission_id</code> id - Specify the permission id</li> </ul> <p>Required Permissions: - <code>Action</code> - datasources.permissions:write - <code>Scope</code> - [datasources:, datasources:id:, datasources:id:] <p>Raises:</p> <ul> <li><code>ValueError</code> - Missed specifying a necessary value</li> <li><code>Exception</code> - Unspecified error by executing the API call</li> </ul> <p>Returns:</p> <p>None</p> <p></p>"},{"location":"grafana_api/datasource/#datasourcequeryresourcecaching-objects","title":"DatasourceQueryResourceCaching Objects","text":"<pre><code>class DatasourceQueryResourceCaching()\n</code></pre> <p>The class includes all necessary methods to access the Grafana datasource query and resource caching API endpoints. It's required that the API token got the corresponding datasource access rights. Please check the used methods docstring for the necessary access rights. The functionality is a Grafana ENTERPRISE feature</p> <p>HINT: Note Grafana Enterprise API need required permissions if fine-grained access control is enabled</p> <p>Arguments:</p> <ul> <li><code>grafana_api_model</code> APIModel - Inject a Grafana API model object that includes all necessary values and information</li> </ul> <p>Attributes:</p> <ul> <li><code>grafana_api_model</code> APIModel - This is where we store the grafana_api_model</li> </ul> <p></p>"},{"location":"grafana_api/datasource/#get_datasource_cache","title":"get_datasource_cache","text":"<pre><code>def get_datasource_cache(uid: str) -&gt; dict\n</code></pre> <p>The method includes a functionality to get the datasource cache config specified by the datasource uid</p> <p>Arguments:</p> <ul> <li><code>uid</code> str - Specify the uid of the datasource</li> </ul> <p>Required Permissions: - <code>Action</code> - datasources.caching:write - <code>Scope</code> - datasources:*</p> <p>Raises:</p> <ul> <li><code>ValueError</code> - Missed specifying a necessary value</li> <li><code>Exception</code> - Unspecified error by executing the API call</li> </ul> <p>Returns:</p> <ul> <li><code>api_call</code> dict - Returns a datasource</li> </ul> <p></p>"},{"location":"grafana_api/datasource/#enable_datasource_cache","title":"enable_datasource_cache","text":"<pre><code>def enable_datasource_cache(uid: str) -&gt; dict\n</code></pre> <p>The method includes a functionality to enable the datasource cache specified by the datasource uid</p> <p>Arguments:</p> <ul> <li><code>uid</code> str - Specify the uid of the datasource</li> </ul> <p>Required Permissions: - <code>Action</code> - datasources.caching:read - <code>Scope</code> - datasources:*</p> <p>Raises:</p> <ul> <li><code>ValueError</code> - Missed specifying a necessary value</li> <li><code>Exception</code> - Unspecified error by executing the API call</li> </ul> <p>Returns:</p> <ul> <li><code>api_call</code> dict - Returns a datasource</li> </ul> <p></p>"},{"location":"grafana_api/datasource/#disable_datasource_cache","title":"disable_datasource_cache","text":"<pre><code>def disable_datasource_cache(uid: str) -&gt; dict\n</code></pre> <p>The method includes a functionality to disable the datasource cache specified by the datasource uid</p> <p>Arguments:</p> <ul> <li><code>uid</code> str - Specify the uid of the datasource</li> </ul> <p>Required Permissions: - <code>Action</code> - datasources.caching:write - <code>Scope</code> - datasources:*</p> <p>Raises:</p> <ul> <li><code>ValueError</code> - Missed specifying a necessary value</li> <li><code>Exception</code> - Unspecified error by executing the API call</li> </ul> <p>Returns:</p> <ul> <li><code>api_call</code> dict - Returns a datasource</li> </ul> <p></p>"},{"location":"grafana_api/datasource/#clean_datasource_cache","title":"clean_datasource_cache","text":"<pre><code>def clean_datasource_cache(uid: str) -&gt; dict\n</code></pre> <p>The method includes a functionality to clean the datasource cache of all data sources with caching enabled. The uid of the datasource will only be used to return the configuration for that data source</p> <p>Arguments:</p> <ul> <li><code>uid</code> str - Specify the uid of the datasource</li> </ul> <p>Required Permissions: - <code>Action</code> - datasources.caching:write - <code>Scope</code> - datasources:*</p> <p>Raises:</p> <ul> <li><code>ValueError</code> - Missed specifying a necessary value</li> <li><code>Exception</code> - Unspecified error by executing the API call</li> </ul> <p>Returns:</p> <ul> <li><code>api_call</code> dict - Returns a datasource</li> </ul> <p></p>"},{"location":"grafana_api/datasource/#update_datasource_cache","title":"update_datasource_cache","text":"<pre><code>def update_datasource_cache(uid: str,\n                            datasource_cache: DatasourceCache) -&gt; dict\n</code></pre> <p>The method includes a functionality to update the datasource cache specified by the datasource uid</p> <p>Arguments:</p> <ul> <li><code>uid</code> str - Specify the uid of the datasource</li> <li><code>datasource_cache</code> DatasourceCache - Specif the datasource cache object</li> </ul> <p>Required Permissions: - <code>Action</code> - datasources.caching:write - <code>Scope</code> - datasources:*</p> <p>Raises:</p> <ul> <li><code>ValueError</code> - Missed specifying a necessary value</li> <li><code>Exception</code> - Unspecified error by executing the API call</li> </ul> <p>Returns:</p> <ul> <li><code>api_call</code> dict - Returns a datasource</li> </ul> <p></p>"},{"location":"grafana_api/datasource/#datasourcelabelbasedaccesscontrol-objects","title":"DatasourceLabelBasedAccessControl Objects","text":"<pre><code>class DatasourceLabelBasedAccessControl()\n</code></pre> <p>The class includes all necessary methods to access the Grafana datasource label based access control for teams API endpoints. It's required that the API token got the corresponding datasource access rights. Please check the used methods docstring for the necessary access rights. The functionality is a Grafana Cloud feature. Only cloud Loki data sources are supported</p> <p>Arguments:</p> <ul> <li><code>grafana_api_model</code> APIModel - Inject a Grafana API model object that includes all necessary values and information</li> </ul> <p>Attributes:</p> <ul> <li><code>grafana_api_model</code> APIModel - This is where we store the grafana_api_model</li> </ul> <p></p>"},{"location":"grafana_api/datasource/#get_lbac_rules_for_datasource","title":"get_lbac_rules_for_datasource","text":"<pre><code>def get_lbac_rules_for_datasource(uid: str) -&gt; list\n</code></pre> <p>The method includes a functionality to get all datasource label based access control rules for team specified by the datasource uid</p> <p>Arguments:</p> <ul> <li><code>uid</code> str - Specify the uid of the datasource</li> </ul> <p>Required Permissions: - <code>Action</code> - datasources:read - <code>Scope</code> - [datasources:, datasources:uid:, datasources:uid:] <p>Raises:</p> <ul> <li><code>ValueError</code> - Missed specifying a necessary value</li> <li><code>Exception</code> - Unspecified error by executing the API call</li> </ul> <p>Returns:</p> <ul> <li><code>api_call</code> list - Returns all LBAC rules</li> </ul> <p></p>"},{"location":"grafana_api/datasource/#update_lbac_rules_for_datasource","title":"update_lbac_rules_for_datasource","text":"<pre><code>def update_lbac_rules_for_datasource(uid: str) -&gt; dict\n</code></pre> <p>The method includes a functionality to enable the datasource cache specified by the datasource uid</p> <p>Arguments:</p> <ul> <li><code>uid</code> str - Specify the uid of the datasource</li> </ul> <p>Required Permissions: - <code>Action</code> - datasources:write, datasources.permissions:write - <code>Scope</code> - [datasources:, datasources:uid:, datasources:uid:] <p>Raises:</p> <ul> <li><code>ValueError</code> - Missed specifying a necessary value</li> <li><code>Exception</code> - Unspecified error by executing the API call</li> </ul> <p>Returns:</p> <ul> <li><code>api_call</code> dict - Returns a datasource</li> </ul>"},{"location":"grafana_api/external-group/","title":"Table of Contents","text":"<ul> <li>external_group</li> <li>ExternalGroup<ul> <li>get_external_groups</li> <li>add_external_group</li> <li>remove_external_group</li> </ul> </li> </ul>"},{"location":"grafana_api/external-group/#external_group","title":"external_group","text":""},{"location":"grafana_api/external-group/#externalgroup-objects","title":"ExternalGroup Objects","text":"<pre><code>class ExternalGroup()\n</code></pre> <p>The class includes all necessary methods to access the Grafana external group API endpoints.</p> <p>Arguments:</p> <ul> <li><code>grafana_api_model</code> APIModel - Inject a Grafana API model object that includes all necessary values and information</li> </ul> <p>Attributes:</p> <ul> <li><code>grafana_api_model</code> APIModel - This is where we store the grafana_api_model</li> </ul> <p></p>"},{"location":"grafana_api/external-group/#get_external_groups","title":"get_external_groups","text":"<pre><code>def get_external_groups(team_id: int) -&gt; list\n</code></pre> <p>The method includes a functionality to get the corresponding external groups specified by the team id</p> <p>Arguments:</p> <ul> <li><code>team_id</code> int - Specify the team id</li> </ul> <p>Required Permissions: - <code>Action</code> - teams.permissions:read - <code>Scope</code> - teams:*</p> <p>Raises:</p> <ul> <li><code>ValueError</code> - Missed specifying a necessary value</li> <li><code>Exception</code> - Unspecified error by executing the API call</li> </ul> <p>Returns:</p> <ul> <li><code>api_call</code> list - Returns the external groups</li> </ul> <p></p>"},{"location":"grafana_api/external-group/#add_external_group","title":"add_external_group","text":"<pre><code>def add_external_group(team_id: int, group_id: str)\n</code></pre> <p>The method includes a functionality to add the corresponding external groups specified by the team id and group id</p> <p>Arguments:</p> <ul> <li><code>team_id</code> int - Specify the team id</li> <li><code>group_id</code> str - Specify the group id (e.g. cn=editors,ou=groups,dc=grafana,dc=org)</li> </ul> <p>Required Permissions: - <code>Action</code> - teams.permissions:write - <code>Scope</code> - teams:*</p> <p>Raises:</p> <ul> <li><code>ValueError</code> - Missed specifying a necessary value</li> <li><code>Exception</code> - Unspecified error by executing the API call</li> </ul> <p>Returns:</p> <ul> <li><code>api_call</code> list - Returns the external groups</li> </ul> <p></p>"},{"location":"grafana_api/external-group/#remove_external_group","title":"remove_external_group","text":"<pre><code>def remove_external_group(team_id: int, group_id: str)\n</code></pre> <p>The method includes a functionality to remove the corresponding external groups specified by the team id and group id</p> <p>Arguments:</p> <ul> <li><code>team_id</code> int - Specify the team id</li> <li><code>group_id</code> str - Specify the group id (e.g. cn=editors,ou=groups,dc=grafana,dc=org)</li> </ul> <p>Required Permissions: - <code>Action</code> - teams.permissions:write - <code>Scope</code> - teams:*</p> <p>Raises:</p> <ul> <li><code>ValueError</code> - Missed specifying a necessary value</li> <li><code>Exception</code> - Unspecified error by executing the API call</li> </ul> <p>Returns:</p> <ul> <li><code>api_call</code> list - Returns the external groups</li> </ul>"},{"location":"grafana_api/folder/","title":"Table of Contents","text":"<ul> <li>folder</li> <li>Folder<ul> <li>get_folders</li> <li>get_folder_by_uid</li> <li>get_folder_by_id</li> <li>create_folder</li> <li>update_folder</li> <li>move_folder</li> <li>delete_folder</li> <li>get_folder_permissions</li> <li>update_folder_permissions</li> <li>get_folder_id_by_dashboard_path</li> <li>get_all_folder_ids_and_names</li> </ul> </li> </ul>"},{"location":"grafana_api/folder/#folder","title":"folder","text":""},{"location":"grafana_api/folder/#folder-objects","title":"Folder Objects","text":"<pre><code>class Folder()\n</code></pre> <p>The class includes all necessary methods to access the Grafana folder API endpoints</p> <p>Arguments:</p> <ul> <li><code>grafana_api_model</code> APIModel - Inject a Grafana API model object that includes all necessary values and information</li> </ul> <p>Attributes:</p> <ul> <li><code>grafana_api_model</code> APIModel - This is where we store the grafana_api_model</li> </ul> <p></p>"},{"location":"grafana_api/folder/#get_folders","title":"get_folders","text":"<pre><code>def get_folders() -&gt; list\n</code></pre> <p>The method includes a functionality to extract all folders inside the organization</p> <p>Required Permissions: Action: folders:read Scope: folders:*</p> <p>Raises:</p> <ul> <li><code>Exception</code> - Unspecified error by executing the API call</li> </ul> <p>Returns:</p> <ul> <li><code>api_call</code> list - Returns all folders</li> </ul> <p></p>"},{"location":"grafana_api/folder/#get_folder_by_uid","title":"get_folder_by_uid","text":"<pre><code>def get_folder_by_uid(uid: str) -&gt; dict\n</code></pre> <p>The method includes a functionality to extract all folder information specified by the uid of the folder</p> <p>Arguments:</p> <ul> <li><code>uid</code> str - Specify the uid of the folder</li> </ul> <p>Required Permissions: - <code>Action</code> - folders:read - <code>Scope</code> - folders:*</p> <p>Raises:</p> <ul> <li><code>ValueError</code> - Missed specifying a necessary value</li> <li><code>Exception</code> - Unspecified error by executing the API call</li> </ul> <p>Returns:</p> <ul> <li><code>api_call</code> dict - Returns a folder</li> </ul> <p></p>"},{"location":"grafana_api/folder/#get_folder_by_id","title":"get_folder_by_id","text":"<pre><code>def get_folder_by_id(id: int) -&gt; dict\n</code></pre> <p>The method includes a functionality to extract all folder information specified by the id of the folder</p> <p>Arguments:</p> <ul> <li><code>id</code> int - Specify the id of the folder</li> </ul> <p>Required Permissions: - <code>Action</code> - folders:read - <code>Scope</code> - folders:*</p> <p>Raises:</p> <ul> <li><code>ValueError</code> - Missed specifying a necessary value</li> <li><code>Exception</code> - Unspecified error by executing the API call</li> </ul> <p>Returns:</p> <ul> <li><code>api_call</code> dict - Returns a folder</li> </ul> <p></p>"},{"location":"grafana_api/folder/#create_folder","title":"create_folder","text":"<pre><code>def create_folder(title: str, uid: str = None, parent_uid: str = None) -&gt; dict\n</code></pre> <p>The method includes a functionality to create a new folder inside the organization specified by the defined title and the optional uid</p> <p>Arguments:</p> <ul> <li><code>title</code> str - Specify the title of the folder</li> <li><code>uid</code> str - Specify the uid of the folder (default None)</li> <li><code>parent_uid</code> str - Specify the parent_uid of the folder (default None)</li> </ul> <p>Required Permissions: - <code>Action</code> - folders:create, folders:write - <code>Scope</code> - folders:*</p> <p>Raises:</p> <ul> <li><code>ValueError</code> - Missed specifying a necessary value</li> <li><code>Exception</code> - Unspecified error by executing the API call</li> </ul> <p>Returns:</p> <ul> <li><code>api_call</code> dict - Returns a newly created folder</li> </ul> <p></p>"},{"location":"grafana_api/folder/#update_folder","title":"update_folder","text":"<pre><code>def update_folder(title: str,\n                  uid: str,\n                  version: int = 0,\n                  overwrite: bool = False) -&gt; dict\n</code></pre> <p>The method includes a functionality to update a folder information inside the organization specified by the uid, the title, the version of the folder or if folder information be overwritten</p> <p>Arguments:</p> <ul> <li><code>title</code> str - Specify the title of the folder</li> <li><code>uid</code> str - Specify the uid of the folder</li> <li><code>version</code> int - Specify the version of the folder (default 0)</li> <li><code>overwrite</code> bool - Should the already existing folder information be overwritten (default False)</li> </ul> <p>Required Permissions: - <code>Action</code> - folders:write - <code>Scope</code> - folders:*</p> <p>Raises:</p> <ul> <li><code>ValueError</code> - Missed specifying a necessary value</li> <li><code>Exception</code> - Unspecified error by executing the API call</li> </ul> <p>Returns:</p> <ul> <li><code>api_call</code> dict - Returns an updated folder</li> </ul> <p></p>"},{"location":"grafana_api/folder/#move_folder","title":"move_folder","text":"<pre><code>def move_folder(uid: str, parent_uid: str = None)\n</code></pre> <p>The method includes a functionality to move a folder inside the organization specified by the defined uid. This feature is only relevant if nested folders are enabled</p> <p>Arguments:</p> <ul> <li><code>uid</code> str - Specify the uid of the folder</li> <li><code>parent_uid</code> str - Specify the parent_uid of the folder. If the value is None, then the folder is moved under the root (default None)</li> </ul> <p>Required Permissions: - <code>Action</code> - folders:create, folders:write - <code>Scope</code> - folders:*, folders:uid: <p>Raises:</p> <ul> <li><code>ValueError</code> - Missed specifying a necessary value</li> <li><code>Exception</code> - Unspecified error by executing the API call</li> </ul> <p>Returns:</p> <ul> <li><code>api_call</code> dict - Returns the moved folder</li> </ul> <p></p>"},{"location":"grafana_api/folder/#delete_folder","title":"delete_folder","text":"<pre><code>def delete_folder(uid: str)\n</code></pre> <p>The method includes a functionality to delete a folder inside the organization specified by the defined uid</p> <p>Arguments:</p> <ul> <li><code>uid</code> str - Specify the uid of the folder</li> </ul> <p>Required Permissions: - <code>Action</code> - folders:delete - <code>Scope</code> - folders:*</p> <p>Raises:</p> <ul> <li><code>ValueError</code> - Missed specifying a necessary value</li> <li><code>Exception</code> - Unspecified error by executing the API call</li> </ul> <p>Returns:</p> <p>None</p> <p></p>"},{"location":"grafana_api/folder/#get_folder_permissions","title":"get_folder_permissions","text":"<pre><code>def get_folder_permissions(uid: str) -&gt; list\n</code></pre> <p>The method includes a functionality to extract the folder permissions inside the organization specified by the defined uid</p> <p>Arguments:</p> <ul> <li><code>uid</code> str - Specify the uid of the folder</li> </ul> <p>Required Permissions: - <code>Action</code> - folders.permissions:read - <code>Scope</code> - folders:*</p> <p>Raises:</p> <ul> <li><code>ValueError</code> - Missed specifying a necessary value</li> <li><code>Exception</code> - Unspecified error by executing the API call</li> </ul> <p>Returns:</p> <ul> <li><code>api_call</code> list - Returns a list of folder permissions</li> </ul> <p></p>"},{"location":"grafana_api/folder/#update_folder_permissions","title":"update_folder_permissions","text":"<pre><code>def update_folder_permissions(uid: str, permission_json: dict)\n</code></pre> <p>The method includes a functionality to update the folder permissions based on the specified uid and the permission json document</p> <p>Arguments:</p> <ul> <li><code>uid</code> str - Specify the uid of the folder</li> <li><code>permission_json</code> dict - Specify the inserted permissions as dict</li> </ul> <p>Required Permissions: - <code>Action</code> - folders.permissions:write - <code>Scope</code> - folders:*</p> <p>Raises:</p> <ul> <li><code>ValueError</code> - Missed specifying a necessary value</li> <li><code>Exception</code> - Unspecified error by executing the API call</li> </ul> <p>Returns:</p> <p>None</p> <p></p>"},{"location":"grafana_api/folder/#get_folder_id_by_dashboard_path","title":"get_folder_id_by_dashboard_path","text":"<pre><code>def get_folder_id_by_dashboard_path(dashboard_path: str) -&gt; int\n</code></pre> <p>The method includes a functionality to extract the folder id specified inside model dashboard path</p> <p>Arguments:</p> <ul> <li><code>dashboard_path</code> str - Specify the dashboard path</li> </ul> <p>Raises:</p> <ul> <li><code>ValueError</code> - Missed specifying a necessary value</li> <li><code>Exception</code> - Unspecified error by executing the API call</li> </ul> <p>Returns:</p> <ul> <li><code>folder_id</code> int - Returns the folder id</li> </ul> <p></p>"},{"location":"grafana_api/folder/#get_all_folder_ids_and_names","title":"get_all_folder_ids_and_names","text":"<pre><code>def get_all_folder_ids_and_names() -&gt; list\n</code></pre> <p>The method extract all folder id and names inside the complete organisation</p> <p>Returns:</p> <ul> <li><code>folders</code> list - Returns a list of dicts with folder ids and the corresponding names</li> </ul>"},{"location":"grafana_api/legacy-alerting/","title":"Table of Contents","text":"<ul> <li>legacy_alerting</li> <li>Alerting<ul> <li>get_alerts</li> <li>get_alerts_by_dashboard_ids</li> <li>get_alert_by_id</li> <li>pause_alert_by_id</li> </ul> </li> </ul>"},{"location":"grafana_api/legacy-alerting/#legacy_alerting","title":"legacy_alerting","text":""},{"location":"grafana_api/legacy-alerting/#alerting-objects","title":"Alerting Objects","text":"<pre><code>class Alerting()\n</code></pre> <p>The class includes all necessary methods to access the Grafana legacy alerting API endpoints</p> <p>Arguments:</p> <ul> <li><code>grafana_api_model</code> APIModel - Inject a Grafana API model object that includes all necessary values and information</li> </ul> <p>Attributes:</p> <ul> <li><code>grafana_api_model</code> APIModel - This is where we store the grafana_api_model</li> </ul> <p></p>"},{"location":"grafana_api/legacy-alerting/#get_alerts","title":"get_alerts","text":"<pre><code>def get_alerts(custom_querystring: str = None) -&gt; list\n</code></pre> <p>The method includes a functionality to get the legacy alerts</p> <p>Arguments:</p> <ul> <li><code>custom_querystring</code> str - Specify the custom querystring (default None)</li> </ul> <p>Raises:</p> <ul> <li><code>ValueError</code> - Missed specifying a necessary value</li> <li><code>Exception</code> - Unspecified error by executing the API call</li> </ul> <p>Returns:</p> <ul> <li><code>api_call</code> list - Returns a list of all alerts</li> </ul> <p></p>"},{"location":"grafana_api/legacy-alerting/#get_alerts_by_dashboard_ids","title":"get_alerts_by_dashboard_ids","text":"<pre><code>def get_alerts_by_dashboard_ids(dashboard_ids: list) -&gt; list\n</code></pre> <p>The method includes a functionality to get legacy alerts specified by the dashboard ids</p> <p>Arguments:</p> <ul> <li><code>dashboard_ids</code> list - Specify the list of dashboard ids</li> </ul> <p>Raises:</p> <ul> <li><code>ValueError</code> - Missed specifying a necessary value</li> <li><code>Exception</code> - Unspecified error by executing the API call</li> </ul> <p>Returns:</p> <ul> <li><code>api_call</code> list - Returns a list of alerts</li> </ul> <p></p>"},{"location":"grafana_api/legacy-alerting/#get_alert_by_id","title":"get_alert_by_id","text":"<pre><code>def get_alert_by_id(id: int) -&gt; dict\n</code></pre> <p>The method includes a functionality to get the legacy alert specified by the alert id</p> <p>Arguments:</p> <ul> <li><code>id</code> int - Specify the id of the legacy alert</li> </ul> <p>Raises:</p> <ul> <li><code>ValueError</code> - Missed specifying a necessary value</li> <li><code>Exception</code> - Unspecified error by executing the API call</li> </ul> <p>Returns:</p> <ul> <li><code>api_call</code> dict - Returns an alert</li> </ul> <p></p>"},{"location":"grafana_api/legacy-alerting/#pause_alert_by_id","title":"pause_alert_by_id","text":"<pre><code>def pause_alert_by_id(id: int, paused: bool = True)\n</code></pre> <p>The method includes a functionality to pause/ unpause a legacy alert specified by the alert id</p> <p>Arguments:</p> <ul> <li><code>id</code> int - Specify the id of the legacy alert</li> <li><code>paused</code> bool - Specify the pause/ unpause parameter (default True)</li> </ul> <p>Raises:</p> <ul> <li><code>ValueError</code> - Missed specifying a necessary value</li> <li><code>Exception</code> - Unspecified error by executing the API call</li> </ul> <p>Returns:</p> <p>None</p>"},{"location":"grafana_api/legacy-playlist/","title":"Table of Contents","text":"<ul> <li>legacy_playlist</li> <li>LegacyPlaylist<ul> <li>get_playlist</li> <li>get_playlist_items</li> <li>get_playlist_dashboards</li> <li>update_playlist</li> <li>delete_playlist</li> </ul> </li> </ul>"},{"location":"grafana_api/legacy-playlist/#legacy_playlist","title":"legacy_playlist","text":""},{"location":"grafana_api/legacy-playlist/#legacyplaylist-objects","title":"LegacyPlaylist Objects","text":"<pre><code>class LegacyPlaylist()\n</code></pre> <p>The class includes all necessary methods to access the Grafana legacy playlist API endpoints.  Be aware that the functionality is a Grafana &lt;= v9 feature</p> <p>Arguments:</p> <ul> <li><code>grafana_api_model</code> APIModel - Inject a Grafana API model object that includes all necessary values and information</li> </ul> <p>Attributes:</p> <ul> <li><code>grafana_api_model</code> APIModel - This is where we store the grafana_api_model</li> </ul> <p></p>"},{"location":"grafana_api/legacy-playlist/#get_playlist","title":"get_playlist","text":"<pre><code>def get_playlist(playlist_id: int) -&gt; dict\n</code></pre> <p>The method includes a functionality to get the playlist specified by the playlist_id</p> <p>Arguments:</p> <ul> <li><code>playlist_id</code> int - Specify the playlist_id</li> </ul> <p>Raises:</p> <ul> <li><code>ValueError</code> - Missed specifying a necessary value</li> <li><code>Exception</code> - Unspecified error by executing the API call</li> </ul> <p>Returns:</p> <ul> <li><code>api_call</code> dict - Returns the corresponding playlist</li> </ul> <p></p>"},{"location":"grafana_api/legacy-playlist/#get_playlist_items","title":"get_playlist_items","text":"<pre><code>def get_playlist_items(playlist_id: int) -&gt; list\n</code></pre> <p>The method includes a functionality to get the playlist items specified by the playlist_id</p> <p>Arguments:</p> <ul> <li><code>playlist_id</code> int - Specify the playlist_id</li> </ul> <p>Raises:</p> <ul> <li><code>ValueError</code> - Missed specifying a necessary value</li> <li><code>Exception</code> - Unspecified error by executing the API call</li> </ul> <p>Returns:</p> <ul> <li><code>api_call</code> dict - Returns the corresponding playlist items</li> </ul> <p></p>"},{"location":"grafana_api/legacy-playlist/#get_playlist_dashboards","title":"get_playlist_dashboards","text":"<pre><code>def get_playlist_dashboards(playlist_id: int) -&gt; list\n</code></pre> <p>The method includes a functionality to get the playlist dashboards specified by the playlist_id</p> <p>Arguments:</p> <ul> <li><code>playlist_id</code> int - Specify the playlist_id</li> </ul> <p>Raises:</p> <ul> <li><code>ValueError</code> - Missed specifying a necessary value</li> <li><code>Exception</code> - Unspecified error by executing the API call</li> </ul> <p>Returns:</p> <ul> <li><code>api_call</code> dict - Returns the corresponding playlist dashboards</li> </ul> <p></p>"},{"location":"grafana_api/legacy-playlist/#update_playlist","title":"update_playlist","text":"<pre><code>def update_playlist(playlist_id: int, playlist: PlaylistObject) -&gt; dict\n</code></pre> <p>The method includes a functionality to update a playlist specified by the playlist object and playlist_id</p> <p>Arguments:</p> <ul> <li><code>playlist_id</code> int - Specify the playlist_id</li> <li><code>playlist</code> PlaylistObject - Specify the playlist object</li> </ul> <p>Raises:</p> <ul> <li><code>ValueError</code> - Missed specifying a necessary value</li> <li><code>Exception</code> - Unspecified error by executing the API call</li> </ul> <p>Returns:</p> <ul> <li><code>api_call</code> dict - Returns the corresponding playlist</li> </ul> <p></p>"},{"location":"grafana_api/legacy-playlist/#delete_playlist","title":"delete_playlist","text":"<pre><code>def delete_playlist(playlist_id: int)\n</code></pre> <p>The method includes a functionality to delete a playlist specified by the playlist_id</p> <p>Arguments:</p> <ul> <li><code>playlist_id</code> int - Specify the playlist_id</li> </ul> <p>Raises:</p> <ul> <li><code>ValueError</code> - Missed specifying a necessary value</li> <li><code>Exception</code> - Unspecified error by executing the API call</li> </ul> <p>Returns:</p> <p>None</p>"},{"location":"grafana_api/library/","title":"Table of Contents","text":"<ul> <li>library</li> <li>Library<ul> <li>get_all_library_elements</li> <li>get_library_element_by_uid</li> <li>get_library_element_by_name</li> <li>get_library_element_connections</li> <li>create_library_element</li> <li>update_library_element</li> <li>delete_library_element</li> </ul> </li> </ul>"},{"location":"grafana_api/library/#library","title":"library","text":""},{"location":"grafana_api/library/#library-objects","title":"Library Objects","text":"<pre><code>class Library()\n</code></pre> <p>The class includes all necessary methods to access the Grafana library API endpoints</p> <p>Arguments:</p> <ul> <li><code>grafana_api_model</code> APIModel - Inject a Grafana API model object that includes all necessary values and information</li> </ul> <p>Attributes:</p> <ul> <li><code>grafana_api_model</code> APIModel - This is where we store the grafana_api_model</li> </ul> <p></p>"},{"location":"grafana_api/library/#get_all_library_elements","title":"get_all_library_elements","text":"<pre><code>def get_all_library_elements(\n        results_per_page: int = 100,\n        pages: int = 1,\n        search_string: str = None,\n        kind: int = 1,\n        sort_direction: SortDirection = SortDirection.DESC,\n        types_filter: str = None,\n        exclude_uid: str = None,\n        folder_filter_ids: str = None) -&gt; dict\n</code></pre> <p>The method includes a functionality to get a list of all library elements the authenticated user has permission to view. Use the perPage query parameter to control the maximum number of library elements returned, The default limit is 100. You can also use the page query parameter to fetch library elements from any page other than the first one</p> <p>Arguments:</p> <ul> <li><code>results_per_page</code> int - Specify the results_per_page as integer (default 100)</li> <li><code>pages</code> int - Specify the pages as integer (default 1)</li> <li><code>search_string</code> str - Specify the search string (default None)</li> <li><code>kind</code> int - Specify the kind of element to search for. Use 1 for library panels or 2 for library variables (default 1)</li> <li><code>sort_direction</code> SortDirection - Specify the sort order of elements. Use alpha-asc for ascending and alpha-desc for descending sort order (default alpha-desc)</li> <li><code>types_filter</code> str - Specify a comma separated list of types to filter the elements by (default None)</li> <li><code>exclude_uid</code> str - Specify the element uid to exclude from search results (default None)</li> <li><code>folder_filter_ids</code> str - Specify a comma separated list of folder ID(s) to filter the elements by (default None)</li> </ul> <p>Raises:</p> <ul> <li><code>Exception</code> - Unspecified error by executing the API call</li> </ul> <p>Returns:</p> <ul> <li><code>api_call</code> dict - Returns the library elements</li> </ul> <p></p>"},{"location":"grafana_api/library/#get_library_element_by_uid","title":"get_library_element_by_uid","text":"<pre><code>def get_library_element_by_uid(uid: str) -&gt; dict\n</code></pre> <p>The method includes a functionality to get a library element with the given uid</p> <p>Arguments:</p> <ul> <li><code>uid</code> str - Specify the uid of the library element</li> </ul> <p>Raises:</p> <ul> <li><code>ValueError</code> - Missed specifying a necessary value</li> <li><code>Exception</code> - Unspecified error by executing the API call</li> </ul> <p>Returns:</p> <ul> <li><code>api_call</code> dict - Returns the corresponding library element</li> </ul> <p></p>"},{"location":"grafana_api/library/#get_library_element_by_name","title":"get_library_element_by_name","text":"<pre><code>def get_library_element_by_name(name: str) -&gt; dict\n</code></pre> <p>The method includes a functionality to get a library element with the given name</p> <p>Arguments:</p> <ul> <li><code>name</code> str - Specify the name of the library element</li> </ul> <p>Raises:</p> <ul> <li><code>ValueError</code> - Missed specifying a necessary value</li> <li><code>Exception</code> - Unspecified error by executing the API call</li> </ul> <p>Returns:</p> <ul> <li><code>api_call</code> dict - Returns the corresponding library element</li> </ul> <p></p>"},{"location":"grafana_api/library/#get_library_element_connections","title":"get_library_element_connections","text":"<pre><code>def get_library_element_connections(uid: str) -&gt; dict\n</code></pre> <p>The method includes a functionality to get a list of connections for a library element based on the specified uid</p> <p>Arguments:</p> <ul> <li><code>uid</code> str - Specify the uid of the library element</li> </ul> <p>Raises:</p> <ul> <li><code>ValueError</code> - Missed specifying a necessary value</li> <li><code>Exception</code> - Unspecified error by executing the API call</li> </ul> <p>Returns:</p> <ul> <li><code>api_call</code> dict - Returns the corresponding list of connections</li> </ul> <p></p>"},{"location":"grafana_api/library/#create_library_element","title":"create_library_element","text":"<pre><code>def create_library_element(folder_id: int,\n                           model: dict,\n                           kind: int = 1,\n                           folder_uid: str = None,\n                           name: str = None,\n                           uid: str = None) -&gt; dict\n</code></pre> <p>The method includes a functionality to create a library element based on the specified folder id and model</p> <p>Arguments:</p> <ul> <li><code>folder_id</code> int - Specify the folder where the library element is stored. It is deprecated since Grafana v9</li> <li><code>model</code> dict - Specify the JSON model for the library element</li> <li><code>kind</code> int - Specify the kind of element to search for. Use 1 for library panels or 2 for library variables (default 1)</li> <li><code>folder_uid</code> str - Specify the uid of the folder where the library element is stored. Specify an empty string when it is general folder (default None)</li> <li><code>name</code> str - Specify the name of the library element (default None)</li> <li><code>uid</code> str - Specify the uid of the library element (default None)</li> </ul> <p>Raises:</p> <ul> <li><code>ValueError</code> - Missed specifying a necessary value</li> <li><code>Exception</code> - Unspecified error by executing the API call</li> </ul> <p>Returns:</p> <ul> <li><code>api_call</code> dict - Returns the newly created library element</li> </ul> <p></p>"},{"location":"grafana_api/library/#update_library_element","title":"update_library_element","text":"<pre><code>def update_library_element(uid: str,\n                           folder_id: int,\n                           folder_uid: str,\n                           name: str,\n                           model: dict,\n                           version: int,\n                           kind: int = 1) -&gt; dict\n</code></pre> <p>The method includes a functionality to update a library element</p> <p>Arguments:</p> <ul> <li><code>uid</code> str - Specify the uid of the library element</li> <li><code>folder_id</code> int - Specify the folder where the library element is stored. It is deprecated since Grafana v9</li> <li><code>folder_uid</code> str - Specify the uid of the folder where the library element is stored. Specify an empty string when it is general folder</li> <li><code>name</code> str - Specify the name of the library element</li> <li><code>model</code> dict - Specify the JSON model for the library element</li> <li><code>version</code> int - Specify the version for the library element</li> <li><code>kind</code> int - Specify the kind of element to search for. Use 1 for library panels or 2 for library variables (default 1)</li> </ul> <p>Raises:</p> <ul> <li><code>ValueError</code> - Missed specifying a necessary value</li> <li><code>Exception</code> - Unspecified error by executing the API call</li> </ul> <p>Returns:</p> <ul> <li><code>api_call</code> dict - Returns the updated library element</li> </ul> <p></p>"},{"location":"grafana_api/library/#delete_library_element","title":"delete_library_element","text":"<pre><code>def delete_library_element(uid: str)\n</code></pre> <p>The method includes a functionality to delete a library element specified by the uid</p> <p>Arguments:</p> <ul> <li><code>uid</code> str - Specify the uid of the library element</li> </ul> <p>Raises:</p> <ul> <li><code>ValueError</code> - Missed specifying a necessary value</li> <li><code>Exception</code> - Unspecified error by executing the API call</li> </ul> <p>Returns:</p> <p>None</p>"},{"location":"grafana_api/licensing/","title":"Table of Contents","text":"<ul> <li>licensing</li> <li>Licensing<ul> <li>check_license_availability</li> <li>manually_force_license_refresh</li> <li>remove_license_from_database</li> </ul> </li> </ul>"},{"location":"grafana_api/licensing/#licensing","title":"licensing","text":""},{"location":"grafana_api/licensing/#licensing-objects","title":"Licensing Objects","text":"<pre><code>class Licensing()\n</code></pre> <p>The class includes all necessary methods to access the Grafana licensing API endpoints. Be aware that the functionality is a Grafana ENTERPRISE v7.4+ feature</p> <p>HINT: Note Grafana Enterprise API need required permissions if fine-grained access control is enabled</p> <p>Arguments:</p> <ul> <li><code>grafana_api_model</code> APIModel - Inject a Grafana API model object that includes all necessary values and information</li> </ul> <p>Attributes:</p> <ul> <li><code>grafana_api_model</code> APIModel - This is where we store the grafana_api_model</li> </ul> <p></p>"},{"location":"grafana_api/licensing/#check_license_availability","title":"check_license_availability","text":"<pre><code>def check_license_availability()\n</code></pre> <p>The method includes a functionality to checks if a valid license is available</p> <p>Required Permissions: Action: licensing:read Scope: N/A</p> <p>Raises:</p> <ul> <li><code>Exception</code> - Unspecified error by executing the API call</li> </ul> <p>Returns:</p> <ul> <li><code>api_call</code> bool - Returns the result if the license is available or not</li> </ul> <p></p>"},{"location":"grafana_api/licensing/#manually_force_license_refresh","title":"manually_force_license_refresh","text":"<pre><code>def manually_force_license_refresh()\n</code></pre> <p>The method includes a functionality to manually ask license issuer for a new token</p> <p>Required Permissions: Action: licensing:update Scope: N/A</p> <p>Raises:</p> <ul> <li><code>Exception</code> - Unspecified error by executing the API call</li> </ul> <p>Returns:</p> <ul> <li><code>api_call</code> dict - Returns the result of license refresh call</li> </ul> <p></p>"},{"location":"grafana_api/licensing/#remove_license_from_database","title":"remove_license_from_database","text":"<pre><code>def remove_license_from_database()\n</code></pre> <p>The method includes a functionality to removes the license stored in the Grafana database</p> <p>Required Permissions: Action: licensing:delete Scope: N/A</p> <p>Raises:</p> <ul> <li><code>Exception</code> - Unspecified error by executing the API call</li> </ul> <p>Returns:</p> <ul> <li><code>api_call</code> dict - Returns the result of license refresh call</li> </ul>"},{"location":"grafana_api/model/","title":"Table of Contents","text":"<ul> <li>model</li> <li>APIEndpoints</li> <li>RequestsMethods</li> <li>APIModel</li> <li>DatasourceQuery</li> <li>DatasourceRuleQuery</li> <li>DatasourcePermission</li> <li>Alert</li> <li>AlertRuleQueryModelCondition</li> <li>AlertRuleQueryModel</li> <li>AlertQuery</li> <li>AlertRule</li> <li>EmbeddedContactPoint</li> <li>MatchType</li> <li>Matcher</li> <li>Route</li> <li>TimeRange</li> <li>TimeInterval</li> <li>MuteTimeInterval</li> <li>Silence</li> <li>AlertmanagerConfig</li> <li>AlertmanagerReceivers</li> <li>RulerRule</li> <li>UserObject</li> <li>PlaylistObject</li> <li>PlaylistItemObject</li> <li>TeamObject</li> <li>QueryDatasourceObject</li> <li>QueryObject</li> <li>CorrelationObject</li> <li>FindAnnotationObject</li> <li>AnnotationObject</li> <li>AnnotationGraphiteObject</li> <li>GlobalUser</li> <li>RolePermission</li> <li>CustomRole</li> <li>DatasourceCache</li> <li>PublicDashboard</li> <li>SSOSetting</li> <li>DashboardSchema</li> <li>Report</li> <li>ReportBrandingSettings</li> </ul>"},{"location":"grafana_api/model/#model","title":"model","text":""},{"location":"grafana_api/model/#apiendpoints-objects","title":"APIEndpoints Objects","text":"<pre><code>class APIEndpoints(Enum)\n</code></pre> <p>The class includes all necessary API endpoint strings to connect the Grafana API</p> <p></p>"},{"location":"grafana_api/model/#requestsmethods-objects","title":"RequestsMethods Objects","text":"<pre><code>class RequestsMethods(Enum)\n</code></pre> <p>The class includes all necessary method values to establish an HTTP/ HTTPS connection to the Grafana API endpoints</p> <p></p>"},{"location":"grafana_api/model/#apimodel-objects","title":"APIModel Objects","text":"<pre><code>@dataclass\nclass APIModel()\n</code></pre> <p>The class includes all necessary variables to establish a connection to the Grafana API endpoints</p> <p>Arguments:</p> <ul> <li><code>host</code> str - Specify the host of the Grafana system</li> <li><code>token</code> str - Specify the access token of the Grafana system</li> <li><code>username</code> str - Specify the username of the Grafana system</li> <li><code>password</code> str - Specify the password of the Grafana system</li> <li><code>timeout</code> float - Specify the timeout of the Grafana system</li> <li><code>headers</code> dict - Specify the headers of the Grafana system</li> <li><code>http2_support</code> bool - Specify if you want to use HTTP/2</li> <li><code>ssl_context</code> ssl.SSLContext - Specify the custom ssl context of the Grafana system</li> <li><code>num_pools</code> int - Specify the number of the connection pool</li> <li><code>retries</code> any - Specify the number of the retries. Please use False as parameter to disable the retries</li> <li><code>follow_redirects</code> bool - Specify if redirections should be followed (default True)</li> </ul> <p></p>"},{"location":"grafana_api/model/#datasourcequery-objects","title":"DatasourceQuery Objects","text":"<pre><code>@dataclass\nclass DatasourceQuery()\n</code></pre> <p>The class includes all necessary variables to specify a query for the datasource search endpoint</p> <p>Arguments:</p> <ul> <li><code>datasource_id</code> int - Specify the id of the data source</li> <li><code>raw_sql</code> str - Specify the raw SQL string to search inside the Grafana system</li> <li><code>ref_id</code> str - Specify a reference id of the search command (default A)</li> <li><code>interval_ms</code> int - Specify the time interval in milliseconds of output format (default 1000)</li> <li><code>max_data_points</code> int - Specify maximum amount of data points that dashboard panel can render (default 100)</li> <li><code>output_format</code> str - Specify the output format of the query (default time_series)</li> </ul> <p></p>"},{"location":"grafana_api/model/#datasourcerulequery-objects","title":"DatasourceRuleQuery Objects","text":"<pre><code>@dataclass\nclass DatasourceRuleQuery()\n</code></pre> <p>The class includes all necessary variables to specify a query for the datasource rule search endpoint</p> <p>Arguments:</p> <ul> <li><code>datasource_uid</code> str - Specify the uid of the data source</li> <li><code>model</code> dict - Specify the model of the search command</li> <li><code>query_type</code> str - Specify the query time of the search command</li> <li><code>ref_id</code> str - Specify a reference id of the search command</li> <li><code>relative_time_range</code> dict - Specify the related time range of the search command</li> </ul> <p></p>"},{"location":"grafana_api/model/#datasourcepermission-objects","title":"DatasourcePermission Objects","text":"<pre><code>@dataclass\nclass DatasourcePermission()\n</code></pre> <p>The class includes the necessary variables to generate a datasource permission object that is necessary to communicate with the Grafana datasource permissions endpoint</p> <p>Arguments:</p> <ul> <li><code>permission</code> Union[str, None] - Specify the datasource permission. Can be query, edit, admin or None. To remove a permission, set the permission value to None</li> </ul> <p>Raises:</p> <ul> <li><code>ValueError</code> - Missed specifying a necessary value</li> </ul> <p>Returns:</p> <ul> <li><code>permission</code> str - Returns the datasource permission</li> </ul> <p></p>"},{"location":"grafana_api/model/#alert-objects","title":"Alert Objects","text":"<pre><code>@dataclass\nclass Alert()\n</code></pre> <p>The class includes all necessary variables to generate an alert object that is necessary to communicate with the Grafana alert endpoint</p> <p>Arguments:</p> <ul> <li><code>starts_at</code> str - Specify the start date of the alert</li> <li><code>ends_at</code> str - Specify end date of the alert</li> <li><code>annotations</code> dict - Specify the annotations of the alert</li> <li><code>generator_url</code> str - Specify the url of the generator endpoint</li> <li><code>labels</code> dict - Specify labels of the alert</li> </ul> <p></p>"},{"location":"grafana_api/model/#alertrulequerymodelcondition-objects","title":"AlertRuleQueryModelCondition Objects","text":"<pre><code>@dataclass\nclass AlertRuleQueryModelCondition()\n</code></pre> <p>The class includes all necessary variables to generate an alert rule query model condition object that is necessary to communicate with the Grafana alert provisioning endpoint</p> <p>Arguments:</p> <ul> <li><code>evaluator_params</code> list - Specify the evaluator parameters</li> <li><code>evaluator_type</code> str - Specify the evaluator type</li> <li><code>operator_type</code> str - Specify the operator type</li> <li><code>query_params</code> list - Specify the query parameters</li> <li><code>reducer_params</code> list - Specify the reducer parameters</li> <li><code>reducer_type</code> str - Specify the reducer type</li> <li><code>type</code> str - Specify the type</li> </ul> <p></p>"},{"location":"grafana_api/model/#alertrulequerymodel-objects","title":"AlertRuleQueryModel Objects","text":"<pre><code>@dataclass\nclass AlertRuleQueryModel()\n</code></pre> <p>The class includes all necessary variables to generate an alert rule query model object that is necessary to communicate with the Grafana alert provisioning endpoint</p> <p>Arguments:</p> <ul> <li><code>conditions</code> list - Specify the conditions list based on the AlertRuleQueryModelCondition objects</li> <li><code>datasource</code> dict - Specify the datasource dictionary</li> <li><code>expression</code> str - Specify the expression string</li> <li><code>hide</code> bool - Specify the if the query should be hided</li> <li><code>interval_ms</code> int - Specify the interval in ms</li> <li><code>max_data_points</code> int - Specify the max data points</li> <li><code>ref_id</code> str - Specify the unique identifier of the alert rule query model</li> <li><code>type</code> str - Specify the corresponding type</li> </ul> <p></p>"},{"location":"grafana_api/model/#alertquery-objects","title":"AlertQuery Objects","text":"<pre><code>@dataclass\nclass AlertQuery()\n</code></pre> <p>The class includes all necessary variables to generate an alert query object that is necessary to communicate with the Grafana alert provisioning endpoint</p> <p>Arguments:</p> <ul> <li><code>datasource_uid</code> str - Specify the datasource uid</li> <li><code>model</code> AlertRuleQueryModel - Specify the model as AlertRuleQueryModel</li> <li><code>query_type</code> str - Specify the query type</li> <li><code>ref_id</code> str - Specify the unique identifier of the alert query</li> <li><code>relative_time_range_from</code> int - Specify the relative from time range</li> <li><code>relative_time_range_to</code> int - Specify the relative to time range</li> </ul> <p></p>"},{"location":"grafana_api/model/#alertrule-objects","title":"AlertRule Objects","text":"<pre><code>@dataclass\nclass AlertRule()\n</code></pre> <p>The class includes all necessary variables to generate an alert rule object that is necessary to communicate with the Grafana alert provisioning endpoint</p> <p>Arguments:</p> <ul> <li><code>condition</code> str - Specify the condition</li> <li><code>data</code> list - Specify the data as AlertQuery list</li> <li><code>exec_err_state</code> str - Specify the execution error state</li> <li><code>folder_uid</code> str - Specify the folder uid</li> <li><code>no_data_state</code> str - Specify the no data state</li> <li><code>org_id</code> int - Specify the org id</li> <li><code>rule_group</code> str - Specify the rule group of the alert rule</li> <li><code>title</code> str - Specify the title of the alert rule</li> <li><code>uid</code> str - Specify the uid of the alert rule</li> <li><code>for_time</code> int - Specify the for duration as integer</li> <li><code>annotations</code> dict - Specify the annotations dictionary (default None)</li> <li><code>updated</code> str - Specify the updated date time as string (default None)</li> <li><code>provenance</code> str - Specify the provenance (default None)</li> <li><code>id</code> int - Specify the alert rule id (default 0)</li> <li><code>labels</code> dict - Specify the labels as dictionary (default None)</li> </ul> <p></p>"},{"location":"grafana_api/model/#embeddedcontactpoint-objects","title":"EmbeddedContactPoint Objects","text":"<pre><code>@dataclass\nclass EmbeddedContactPoint()\n</code></pre> <p>The class includes all necessary variables to generate an embedded contact point object that is necessary to communicate with the Grafana alert provisioning endpoint</p> <p>Arguments:</p> <ul> <li><code>name</code> str - Specify the name of the embedded contact point</li> <li><code>type</code> str - Specify the type of the embedded contact point</li> <li><code>settings</code> dict - Specify the settings of the embedded contact point</li> <li><code>disable_resolve_message</code> bool - Specify if the resolve message should be disabled (default None)</li> <li><code>provenance</code> str - Specify the provenance (default None)</li> <li><code>uid</code> str - Specify the uid of the embedded contact point (default None)</li> </ul> <p></p>"},{"location":"grafana_api/model/#matchtype-objects","title":"MatchType Objects","text":"<pre><code>class MatchType(Enum)\n</code></pre> <p>The class includes all necessary values to set the corresponding match type</p> <p></p>"},{"location":"grafana_api/model/#matcher-objects","title":"Matcher Objects","text":"<pre><code>@dataclass\nclass Matcher()\n</code></pre> <p>The class includes all necessary variables to generate an alert rule route matcher object that is necessary to communicate with the Grafana alert provisioning endpoint</p> <p>Arguments:</p> <ul> <li><code>name</code> str - Specify the name of the matcher</li> <li><code>type</code> MatchType - Specify the type of the matcher</li> <li><code>value</code> str - Specify the value of the matcher</li> </ul> <p></p>"},{"location":"grafana_api/model/#route-objects","title":"Route Objects","text":"<pre><code>@dataclass\nclass Route()\n</code></pre> <p>The class includes all necessary variables to generate an alert rule route that is necessary to communicate with the Grafana alert provisioning endpoint</p> <p>Arguments:</p> <ul> <li><code>continue_parameter</code> bool - Specify the continue parameter</li> <li><code>group_by_str</code> List[str] - Specify the list of group by strings</li> <li><code>receiver</code> str - Specify the receiver</li> <li><code>provenance</code> str - Specify the provenance</li> <li><code>object_matchers</code> List[Matcher] - Specify the list of object matchers (default None)</li> <li><code>group_interval</code> str - Specify the group time interval (default None)</li> <li><code>group_wait</code> str - Specify the group wait time (default None)</li> <li><code>repeat_interval</code> str - Specify the repeat interval (default None)</li> <li><code>routes</code> List[Route] - Specify the list of routes (default None)</li> <li><code>mute_time_intervals</code> List[str] - Specify the mute time interval as list (default None)</li> </ul> <p></p>"},{"location":"grafana_api/model/#timerange-objects","title":"TimeRange Objects","text":"<pre><code>@dataclass\nclass TimeRange()\n</code></pre> <p>The class includes all necessary variables to generate a time range object that is necessary to communicate with the Grafana alert provisioning endpoint</p> <p>Arguments:</p> <ul> <li><code>start_time</code> str - Specify the start time e.g. 14:00</li> <li><code>start_time</code> str - Specify the end time e.g. 15:00</li> </ul> <p></p>"},{"location":"grafana_api/model/#timeinterval-objects","title":"TimeInterval Objects","text":"<pre><code>@dataclass\nclass TimeInterval()\n</code></pre> <p>The class includes all necessary variables to generate a time interval object that is necessary to communicate with the Grafana alert provisioning endpoint</p> <p>Arguments:</p> <ul> <li><code>days_of_month</code> List[str] - Specify the days of month list (default None)</li> <li><code>months</code> List[str] - Specify the months list (default None)</li> <li><code>times</code> TimeRange - Specify the times list (default None)</li> <li><code>weekdays</code> List[str] - Specify the weekdays list (default None)</li> <li><code>years</code> List[str] - Specify the year range list (default None)</li> </ul> <p></p>"},{"location":"grafana_api/model/#mutetimeinterval-objects","title":"MuteTimeInterval Objects","text":"<pre><code>@dataclass\nclass MuteTimeInterval()\n</code></pre> <p>The class includes all necessary variables to generate a mute time interval object that is necessary to communicate with the Grafana alert provisioning endpoint</p> <p>Arguments:</p> <ul> <li><code>name</code> str - Specify the name of the mute time interval.</li> <li><code>time_intervals</code> List[TimeInterval] - Specify the list of time interval objects</li> </ul> <p></p>"},{"location":"grafana_api/model/#silence-objects","title":"Silence Objects","text":"<pre><code>@dataclass\nclass Silence()\n</code></pre> <p>The class includes all necessary variables to generate a silence object that is necessary to communicate with the Grafana silence endpoint</p> <p>Arguments:</p> <ul> <li><code>starts_at</code> str - Specify the start date of the silence</li> <li><code>created_by</code> str - Specify the name of the silence creator</li> <li><code>ends_at</code> str - Specify end date of the silence</li> <li><code>comment</code> str - Specify a custom comment for the silence</li> <li><code>id</code> str - Specify an id for the silence</li> <li><code>matchers</code> dict - Specify matchers for the silence</li> </ul> <p></p>"},{"location":"grafana_api/model/#alertmanagerconfig-objects","title":"AlertmanagerConfig Objects","text":"<pre><code>@dataclass\nclass AlertmanagerConfig()\n</code></pre> <p>The class includes all necessary variables to generate an Alertmanager config object that is necessary to communicate and set up the Grafana Alertmanager endpoint</p> <p>Arguments:</p> <ul> <li><code>global_config</code> Union[dict, None] - Specify the global config of the Alertmanager</li> <li><code>inhibit_rules</code> Union[list, None] - Specify the inhibit rules of the Alertmanager</li> <li><code>mute_time_intervals</code> Union[list, None] - Specify the mute time intervals of the Alertmanager</li> <li><code>receivers</code> list - Specify the receiver's of the Alertmanager</li> <li><code>route</code> dict - Specify the route of the Alertmanager</li> <li><code>templates</code> Union[list, None] - Specify an Alertmanager template</li> </ul> <p></p>"},{"location":"grafana_api/model/#alertmanagerreceivers-objects","title":"AlertmanagerReceivers Objects","text":"<pre><code>@dataclass\nclass AlertmanagerReceivers()\n</code></pre> <p>The class includes all necessary variables to generate an Alertmanager receiver's object that is necessary to communicate and set up the Grafana Alertmanager receivers endpoint</p> <p>Arguments:</p> <ul> <li><code>name</code> str - Specify the name of the receiver</li> <li><code>email_configs</code> Union[list, None] - Specify the email configuration of the receiver's</li> <li><code>grafana_managed_receiver_configs</code> list - Specify the Grafana managed receiver configuration of the receiver's</li> <li><code>opsgenie_configs</code> Union[list, None] - Specify the ops genie configuration of the receiver's</li> <li><code>pagerduty_configs</code> Union[list, None] - Specify the pager duty configuration of the receiver's</li> <li><code>pushover_configs</code> Union[list, None] - Specify the push over configuration of the receiver's</li> <li><code>slack_configs</code> Union[list, None] - Specify the Slack configuration of the receiver's</li> <li><code>sns_configs</code> Union[list, None] - Specify the SNS configuration of the receiver's</li> <li><code>victorops_configs</code> Union[list, None] - Specify the victor ops configuration of the receiver's</li> <li><code>webhook_configs</code> Union[list, None] - Specify the webhook configuration of the receiver's</li> <li><code>wechat_configs</code> Union[list, None] - Specify the wechaty configuration of the receiver's</li> </ul> <p></p>"},{"location":"grafana_api/model/#rulerrule-objects","title":"RulerRule Objects","text":"<pre><code>@dataclass\nclass RulerRule()\n</code></pre> <p>The class includes all necessary variables to generate a Ruler rule object that is necessary to communicate and set up a Grafana Ruler rule</p> <p>Arguments:</p> <ul> <li><code>alert</code> str - Specify the name of the rule</li> <li><code>annotations</code> dict - Specify the annotations of the rule</li> <li><code>expr</code> str - Specify the expression of the rule</li> <li><code>grafana_alert</code> dict - Specify the Grafana alert of the rule</li> <li><code>labels</code> dict - Specify labels of the rule</li> <li><code>record</code> str - Specify recode value of the rule</li> <li><code>for_id</code> int - Specify the id of the rule if you update an existing rule (default 0)</li> </ul> <p></p>"},{"location":"grafana_api/model/#userobject-objects","title":"UserObject Objects","text":"<pre><code>@dataclass\nclass UserObject()\n</code></pre> <p>The class includes all necessary variables to generate a User object that is necessary to update a Grafana User</p> <p>Arguments:</p> <ul> <li><code>email</code> str - Specify the name of the rule</li> <li><code>name</code> str - Specify the annotations of the rule</li> <li><code>login</code> str - Specify the expression of the rule</li> <li><code>theme</code> str - Specify the Grafana alert of the rule</li> </ul> <p></p>"},{"location":"grafana_api/model/#playlistobject-objects","title":"PlaylistObject Objects","text":"<pre><code>@dataclass\nclass PlaylistObject()\n</code></pre> <p>The class includes all necessary variables to generate a playlist object</p> <p>Arguments:</p> <ul> <li><code>name</code> str - Specify the name of the playlist</li> <li><code>interval</code> str - Specify the interval of the playlist</li> <li><code>items</code> list - Specify a list of PlaylistItemObjects</li> </ul> <p></p>"},{"location":"grafana_api/model/#playlistitemobject-objects","title":"PlaylistItemObject Objects","text":"<pre><code>@dataclass\nclass PlaylistItemObject()\n</code></pre> <p>The class includes all necessary variables to generate a playlist item object that is necessary to update a playlist</p> <p>Arguments:</p> <ul> <li><code>type</code> str - Specify the type of the playlist item</li> <li><code>value</code> str - Specify the value of the playlist item</li> <li><code>order</code> int - Specify the order of the playlist item</li> <li><code>title</code> str - Specify the title of the playlist item</li> </ul> <p></p>"},{"location":"grafana_api/model/#teamobject-objects","title":"TeamObject Objects","text":"<pre><code>@dataclass\nclass TeamObject()\n</code></pre> <p>The class includes all necessary variables to generate a team object that is necessary to create a team</p> <p>Arguments:</p> <ul> <li><code>name</code> str - Specify the name of the team</li> <li><code>email</code> str - Specify the email of the team</li> <li><code>org_id</code> int - Specify the org_id of the team</li> </ul> <p></p>"},{"location":"grafana_api/model/#querydatasourceobject-objects","title":"QueryDatasourceObject Objects","text":"<pre><code>@dataclass\nclass QueryDatasourceObject()\n</code></pre> <p>The class includes all necessary variables to generate a query datasource object that is necessary to create a query history object</p> <p>Arguments:</p> <ul> <li><code>type</code> str - Specify the type of the datasource query</li> <li><code>uid</code> str - Specify the uid of the datasource query</li> </ul> <p></p>"},{"location":"grafana_api/model/#queryobject-objects","title":"QueryObject Objects","text":"<pre><code>@dataclass\nclass QueryObject()\n</code></pre> <p>The class includes all necessary variables to generate a query object that is necessary to create a query history</p> <p>Arguments:</p> <ul> <li><code>ref_id</code> str - Specify the ref_id of the query history</li> <li><code>key</code> str - Specify the key of the query history</li> <li><code>scenario_id</code> str - Specify the scenario_id of the query history</li> <li><code>datasource</code> QueryDatasourceObject - Specify the datasource of the type QueryDatasourceObject</li> </ul> <p></p>"},{"location":"grafana_api/model/#correlationobject-objects","title":"CorrelationObject Objects","text":"<pre><code>@dataclass\nclass CorrelationObject()\n</code></pre> <p>The class includes all necessary variables to generate a find annotation object</p> <p>Arguments:</p> <ul> <li><code>source_datasource_uid</code> str - Specify the source datasource uid (default None)</li> <li><code>target_datasource_uid</code> str - Specify the target datasource uid (default None)</li> <li><code>label</code> str - Specify the label (default 100)</li> <li><code>description</code> str - Specify the description (default None)</li> <li><code>config_type</code> str - Specify the config type (default None)</li> <li><code>config_field</code> str - Specify the config field (default None)</li> <li><code>config_target</code> str - Specify the config target (default None)</li> </ul> <p></p>"},{"location":"grafana_api/model/#findannotationobject-objects","title":"FindAnnotationObject Objects","text":"<pre><code>@dataclass\nclass FindAnnotationObject()\n</code></pre> <p>The class includes all necessary variables to generate a find annotation object</p> <p>Arguments:</p> <ul> <li><code>from_value</code> int - Specify the optional from value (default None)</li> <li><code>to_value</code> int - Specify the optional to value (default None)</li> <li><code>limit</code> int - Specify the optional limit (default 100)</li> <li><code>alert_id</code> int - Specify the optional alert id (default None)</li> <li><code>dashboard_id</code> int - Specify the optional dashboard id (default None)</li> <li><code>panel_id</code> int - Specify the optional panel_id (default None)</li> <li><code>user_id</code> int - Specify the optional user id (default None)</li> <li><code>type</code> str - Specify the optional type e.g. alert or annotation (default None)</li> <li><code>tags</code> list - Specify the optional tags (default None)</li> </ul> <p></p>"},{"location":"grafana_api/model/#annotationobject-objects","title":"AnnotationObject Objects","text":"<pre><code>@dataclass\nclass AnnotationObject()\n</code></pre> <p>The class includes all necessary variables to generate an annotation object</p> <p>Arguments:</p> <ul> <li><code>time</code> int - Specify the time as number in milliseconds</li> <li><code>time_end</code> int - Specify the end time as number in milliseconds</li> <li><code>tags</code> list - Specify the organization annotation tags from a data source that are not connected specifically to a dashboard or panel</li> <li><code>text</code> str - Specify the annotation description message</li> <li><code>dashboard_uid</code> str - Specify the optional dashboard_uid (default None)</li> <li><code>panel_id</code> int - Specify the optional panel_id (default None)</li> </ul> <p></p>"},{"location":"grafana_api/model/#annotationgraphiteobject-objects","title":"AnnotationGraphiteObject Objects","text":"<pre><code>@dataclass\nclass AnnotationGraphiteObject()\n</code></pre> <p>The class includes all necessary variables to generate a Graphite annotation object</p> <p>Arguments:</p> <ul> <li><code>what</code> str - Specify the event of the annotation</li> <li><code>tags</code> list - Specify the organization annotation tags from a data source that are not connected specifically to a dashboard or panel</li> <li><code>when</code> int - Specify the optional time as number in milliseconds</li> <li><code>data</code> str - Specify the optional annotation description message</li> </ul> <p></p>"},{"location":"grafana_api/model/#globaluser-objects","title":"GlobalUser Objects","text":"<pre><code>@dataclass\nclass GlobalUser()\n</code></pre> <p>The class includes all necessary variables to generate a global user object</p> <p>Arguments:</p> <ul> <li><code>name</code> str - Specify the name of the user</li> <li><code>email</code> str - Specify the email of the user</li> <li><code>login</code> str - Specify the login type of the user</li> <li><code>password</code> str - Specify the password of the user</li> <li><code>org_id</code> int - Specify the optional org id of the user (default None)</li> </ul> <p></p>"},{"location":"grafana_api/model/#rolepermission-objects","title":"RolePermission Objects","text":"<pre><code>@dataclass\nclass RolePermission()\n</code></pre> <p>The class includes all necessary variables to generate a role permission object</p> <p>Arguments:</p> <ul> <li><code>action</code> str - Specify the custom role action definition</li> <li><code>scope</code> str - Specify the scope definition. If not present, no scope will be mapped to the permission (default None)</li> </ul> <p></p>"},{"location":"grafana_api/model/#customrole-objects","title":"CustomRole Objects","text":"<pre><code>@dataclass\nclass CustomRole()\n</code></pre> <p>The class includes all necessary variables to generate a custom role object</p> <p>Arguments:</p> <ul> <li><code>name</code> str - Specify the name of the role</li> <li><code>uid</code> str - Specify the optional uid of the role (default None)</li> <li><code>global_role</code> bool - Specify the if the role is global or not. If set to False, the default org id of the authenticated user will be used from the request (default False)</li> <li><code>version</code> int - Specify the optional version of the role (default None)</li> <li><code>description</code> str - Specify the optional description of the role (default None)</li> <li><code>display_name</code> str - Specify the optional display_name of the role (default None)</li> <li><code>group</code> str - Specify the optional org group of the role (default None)</li> <li><code>hidden</code> bool - Specify whether the role is hidden or not.  If set to True, then the role does not show in the role picker. It will not be listed by API endpoints unless explicitly specified (default False)</li> <li><code>permissions</code> list - Specify the optional permissions of the role as a list of the RolePermission objects (default None)</li> </ul> <p></p>"},{"location":"grafana_api/model/#datasourcecache-objects","title":"DatasourceCache Objects","text":"<pre><code>@dataclass\nclass DatasourceCache()\n</code></pre> <p>The class includes all necessary variables to generate a datasource cache object</p> <p>Arguments:</p> <ul> <li><code>datasource_id</code> int - Specify the datasource id</li> <li><code>datasource_uid</code> str - Specify the datasource uid</li> <li><code>enabled</code> bool - Specify if caching should be enabled for the datasource</li> <li><code>use_default_ttl</code> bool - Specify if the configured default TTL (Time-To-Live) should be used for both query and resource caching, instead of the user-specified values</li> <li><code>ttl_queries_ms</code> int - Specify the TTL to use for query caching, in milliseconds</li> <li><code>ttl_resources_ms</code> int - Specify the TTL to use for resource caching, in milliseconds</li> </ul> <p></p>"},{"location":"grafana_api/model/#publicdashboard-objects","title":"PublicDashboard Objects","text":"<pre><code>@dataclass\nclass PublicDashboard()\n</code></pre> <p>The class includes all necessary variables to generate a public dashboard object</p> <p>Arguments:</p> <ul> <li><code>uid</code> str - Specify the optional unique identifier when creating a public dashboard. If it\u2019s none, it will generate a new uid (default None)</li> <li><code>access_token</code> str - Specify the optional unique access token. If it\u2019s none, it will generate a new access token (default None)</li> <li><code>time_selection_enabled</code> bool - Specify the optional enablement of the time picker inside the public dashboard (default False)</li> <li><code>is_enabled</code> bool - Specify the optional enablement of the public dashboard (default False)</li> <li><code>annotations_enabled</code> bool - Specify the optional enablement of the annotations inside the public dashboard (default False)</li> <li><code>share</code> str - Specify the optional share mode of the public dashboard (default public)</li> </ul> <p></p>"},{"location":"grafana_api/model/#ssosetting-objects","title":"SSOSetting Objects","text":"<pre><code>@dataclass\nclass SSOSetting()\n</code></pre> <p>The class includes all necessary variables to generate an SSO setting object</p> <p>Arguments:</p> <ul> <li><code>api_url</code> str - Specify the SSO api url</li> <li><code>client_id</code> str - Specify the SSO client id</li> <li><code>client_secret</code> str - Specify the SSO client secret</li> <li><code>enabled</code> bool - Specify if the SSO provider is enabled or not</li> <li><code>scopes</code> str - Specify the SSO scopes</li> </ul> <p></p>"},{"location":"grafana_api/model/#dashboardschema-objects","title":"DashboardSchema Objects","text":"<pre><code>@dataclass\nclass DashboardSchema()\n</code></pre> <p>The class includes all necessary variables to generate a dashboard schema object that is used for the reporting functionality</p> <p>Arguments:</p> <ul> <li><code>dashboard_uid</code> str - Specify the dashboard uid</li> <li><code>time_range_from</code> str - Specify the dashboard time range from</li> <li><code>time_range_to</code> str - Specify the dashboard time range to</li> <li><code>report_variables</code> dict - Specify the key-value pairs containing the template variables for this report, in dict format. If the value is None, the template variables from the reports dashboard will be used (default None)</li> </ul> <p></p>"},{"location":"grafana_api/model/#report-objects","title":"Report Objects","text":"<pre><code>@dataclass\nclass Report()\n</code></pre> <p>The class includes all necessary variables to generate a report object</p> <p>Arguments:</p> <ul> <li><code>name</code> str - Specify the name of the report that is used as an email subject</li> <li><code>recipients</code> str - Specify the comma-separated list of emails to which to send the report to</li> <li><code>reply_to</code> str - Specify the comma-separated list of emails used in a reply-to field of the report email</li> <li><code>message</code> str - Specify the text message used for the body of the report email</li> <li><code>start_date</code> str - Specify the distribution starts from this date</li> <li><code>end_date</code> str - Specify the distribution end from this date</li> <li><code>time_zone</code> str - Specify the time zone used to schedule report execution</li> <li><code>orientation</code> str - Specify if the orientation should be portrait or landscape</li> <li><code>layout</code> str - Specify if the layout should be grid or simple</li> <li><code>enable_dashboard_url</code> str - Specify if the dashboard url should be added to the bottom of the report email</li> <li><code>dashboards</code> List[DashboardSchema] - Specify the dashboards for which the reports should be generated</li> <li><code>frequency</code> str - Specify how often the report should be sent. Can be once, hourly, daily, weekly, monthly, last or custom. The value last schedules the report for the last day of the month. The value custom schedules the report to be sent on a custom interval. It requires interval_frequency and interval_amount to be specified e.g. every 2 weeks, where 2 is an interval_amount and weeks is an interval_frequency (default last)</li> <li><code>interval_frequency</code> str - Specify the type of the custom interval hours, days, weeks, months (default None)</li> <li><code>interval_amount</code> int - Specify the interval amount of the custom type (default 0)</li> <li><code>workdays_only</code> bool - Specify if the report only on Monday-Friday should be sent. Applicable to hourly and daily types of schedule (default None)</li> <li><code>formats</code> List[str] - Specify what kind of attachment to generate for the report. Available report formats are csv, pdf and image. The type csv attaches a CSV file for each table panel and the type image embeds an image of a dashboard into the emails body (default List[\"pdf\"])</li> </ul> <p></p>"},{"location":"grafana_api/model/#reportbrandingsettings-objects","title":"ReportBrandingSettings Objects","text":"<pre><code>@dataclass\nclass ReportBrandingSettings()\n</code></pre> <p>The class includes all necessary variables to generate a report branding settings object</p> <p>Arguments:</p> <ul> <li><code>report_logo_url</code> str - Specify the url of an image used as a logo on every page of the report</li> <li><code>email_logo_url</code> str - Specify the url of an image used as a logo in the email</li> <li><code>email_footer_mode</code> str - Specify the email footer mode. Can be sent-by or none. The value sent-by adds a 'Sent by email footer text' footer link to the email. Requires specifying values in the email_footer_text and email_footer_link fields. The value none suppresses adding a 'Sent by' footer link to the email</li> <li><code>email_footer_text</code> str - Specify the text of a URL added to the email 'Sent by' footer (default None)</li> <li><code>email_footer_link</code> str - Specify the url address value added to the email 'Sent by' footer (default None)</li> </ul>"},{"location":"grafana_api/organisation/","title":"Table of Contents","text":"<ul> <li>organisation</li> <li>Organisation<ul> <li>get_current_organization</li> <li>get_all_users_by_the_current_organization</li> <li>get_all_users_by_the_current_organization_lookup</li> <li>update_organization_user_role_by_user_id</li> <li>delete_organization_user_by_user_id</li> <li>update_current_organization</li> <li>add_new_user_to_current_organization</li> </ul> </li> <li>OrganisationAdmin<ul> <li>get_organization_by_id</li> <li>get_organization_by_name</li> <li>get_organizations</li> <li>create_organization</li> <li>update_organization</li> <li>delete_organization</li> <li>get_organization_users</li> <li>add_organization_user</li> <li>update_organization_user</li> <li>delete_organization_user</li> </ul> </li> </ul>"},{"location":"grafana_api/organisation/#organisation","title":"organisation","text":""},{"location":"grafana_api/organisation/#organisation-objects","title":"Organisation Objects","text":"<pre><code>class Organisation()\n</code></pre> <p>The class includes all necessary methods to access the Grafana organisation API endpoint</p> <p>Arguments:</p> <ul> <li><code>grafana_api_model</code> APIModel - Inject a Grafana API model object that includes all necessary values and information</li> </ul> <p>Attributes:</p> <ul> <li><code>grafana_api_model</code> APIModel - This is where we store the grafana_api_model</li> </ul> <p></p>"},{"location":"grafana_api/organisation/#get_current_organization","title":"get_current_organization","text":"<pre><code>def get_current_organization() -&gt; dict\n</code></pre> <p>The method includes a functionality to get the current organization</p> <p>Required Permissions: Action: orgs:read Scope: N/A</p> <p>Raises:</p> <ul> <li><code>Exception</code> - Unspecified error by executing the API call</li> </ul> <p>Returns:</p> <ul> <li><code>api_call</code> dict - Returns the current organization</li> </ul> <p></p>"},{"location":"grafana_api/organisation/#get_all_users_by_the_current_organization","title":"get_all_users_by_the_current_organization","text":"<pre><code>def get_all_users_by_the_current_organization() -&gt; list\n</code></pre> <p>The method includes a functionality to get all users from the current organization</p> <p>Required Permissions: Action: org.users:read Scope: users:*</p> <p>Raises:</p> <ul> <li><code>Exception</code> - Unspecified error by executing the API call</li> </ul> <p>Returns:</p> <ul> <li><code>api_call</code> list - Returns the users of the current organization</li> </ul> <p></p>"},{"location":"grafana_api/organisation/#get_all_users_by_the_current_organization_lookup","title":"get_all_users_by_the_current_organization_lookup","text":"<pre><code>def get_all_users_by_the_current_organization_lookup() -&gt; list\n</code></pre> <p>The method includes a functionality to get the lookup information of all users from the current organization</p> <p>Required Permissions: Action: org.users:read Scope: users:*</p> <p>Raises:</p> <ul> <li><code>Exception</code> - Unspecified error by executing the API call</li> </ul> <p>Returns:</p> <ul> <li><code>api_call</code> list - Returns the users of the current organization</li> </ul> <p></p>"},{"location":"grafana_api/organisation/#update_organization_user_role_by_user_id","title":"update_organization_user_role_by_user_id","text":"<pre><code>def update_organization_user_role_by_user_id(user_id: int, role: str)\n</code></pre> <p>The method includes a functionality to update the current organization user by the user id</p> <p>Arguments:</p> <ul> <li><code>user_id</code> int - Specify the id of the user</li> <li><code>role</code> str - Specify the role of the user</li> </ul> <p>Required Permissions: - <code>Action</code> - org.users.role:update - <code>Scope</code> - users:*</p> <p>Raises:</p> <ul> <li><code>ValueError</code> - Missed specifying a necessary value</li> <li><code>Exception</code> - Unspecified error by executing the API call</li> </ul> <p>Returns:</p> <p>None</p> <p></p>"},{"location":"grafana_api/organisation/#delete_organization_user_by_user_id","title":"delete_organization_user_by_user_id","text":"<pre><code>def delete_organization_user_by_user_id(user_id: int)\n</code></pre> <p>The method includes a functionality to delete the current organization user by the user id</p> <p>Arguments:</p> <ul> <li><code>user_id</code> int - Specify the id of the user</li> </ul> <p>Required Permissions: - <code>Action</code> - org.users:remove - <code>Scope</code> - users:*</p> <p>Raises:</p> <ul> <li><code>ValueError</code> - Missed specifying a necessary value</li> <li><code>Exception</code> - Unspecified error by executing the API call</li> </ul> <p>Returns:</p> <p>None</p> <p></p>"},{"location":"grafana_api/organisation/#update_current_organization","title":"update_current_organization","text":"<pre><code>def update_current_organization(name: str)\n</code></pre> <p>The method includes a functionality to update the current organization</p> <p>Arguments:</p> <ul> <li><code>name</code> str - Specify the new name of the current organization</li> </ul> <p>Required Permissions: - <code>Action</code> - orgs:write - <code>Scope</code> - N/A</p> <p>Raises - <code>ValueError</code> - Missed specifying a necessary value - <code>Exception</code> - Unspecified error by executing the API call</p> <p>Returns:</p> <p>None</p> <p></p>"},{"location":"grafana_api/organisation/#add_new_user_to_current_organization","title":"add_new_user_to_current_organization","text":"<pre><code>def add_new_user_to_current_organization(login_or_email: str,\n                                         role: str) -&gt; int\n</code></pre> <p>The method includes a functionality to add a new user to the current organization</p> <p>Arguments:</p> <ul> <li><code>login_or_email</code> str - Specify the added user</li> <li><code>role</code> str - Specify the added role for the user</li> </ul> <p>Required Permissions: - <code>Action</code> - org.users:add - <code>Scope</code> - users:*</p> <p>Raises:</p> <ul> <li><code>ValueError</code> - Missed specifying a necessary value</li> <li><code>Exception</code> - Unspecified error by executing the API call</li> </ul> <p>Returns:</p> <ul> <li><code>user_id</code> int - Returns the id of the created user</li> </ul> <p></p>"},{"location":"grafana_api/organisation/#organisationadmin-objects","title":"OrganisationAdmin Objects","text":"<pre><code>class OrganisationAdmin()\n</code></pre> <p>The class includes all necessary methods to access the Grafana organisation Admin API endpoint. Be aware that all functionalities inside the class only working with basic authentication (username and password)</p> <p>Arguments:</p> <ul> <li><code>grafana_api_model</code> APIModel - Inject a Grafana API model object that includes all necessary values and information</li> </ul> <p>Attributes:</p> <ul> <li><code>grafana_api_model</code> APIModel - This is where we store the grafana_api_model</li> </ul> <p></p>"},{"location":"grafana_api/organisation/#get_organization_by_id","title":"get_organization_by_id","text":"<pre><code>def get_organization_by_id(org_id: int) -&gt; dict\n</code></pre> <p>The method includes a functionality to get an organization by the id</p> <p>Arguments:</p> <ul> <li><code>org_id</code> int - Specify the organization id</li> </ul> <p>Required Permissions: - <code>Action</code> - orgs:read - <code>Scope</code> - N/A</p> <p>Raises:</p> <ul> <li><code>ValueError</code> - Missed specifying a necessary value</li> <li><code>Exception</code> - Unspecified error by executing the API call</li> </ul> <p>Returns:</p> <ul> <li><code>api_call</code> dict - Returns the organization as dict</li> </ul> <p></p>"},{"location":"grafana_api/organisation/#get_organization_by_name","title":"get_organization_by_name","text":"<pre><code>def get_organization_by_name(name: str) -&gt; dict\n</code></pre> <p>The method includes a functionality to get an organization by the name</p> <p>Arguments:</p> <ul> <li><code>name</code> str - Specify the organization name</li> </ul> <p>Required Permissions: - <code>Action</code> - orgs:read - <code>Scope</code> - N/A - <code>Note</code> - Needs to be assigned globally.</p> <p>Raises:</p> <ul> <li><code>ValueError</code> - Missed specifying a necessary value</li> <li><code>Exception</code> - Unspecified error by executing the API call</li> </ul> <p>Returns:</p> <ul> <li><code>api_call</code> dict - Returns the organization as dict</li> </ul> <p></p>"},{"location":"grafana_api/organisation/#get_organizations","title":"get_organizations","text":"<pre><code>def get_organizations() -&gt; list\n</code></pre> <p>The method includes a functionality to get all organizations</p> <p>Required Permissions: Action: orgs:read Scope: N/A Note: Needs to be assigned globally.</p> <p>Raises:</p> <ul> <li><code>Exception</code> - Unspecified error by executing the API call</li> </ul> <p>Returns:</p> <ul> <li><code>api_call</code> list - Returns all organizations as list</li> </ul> <p></p>"},{"location":"grafana_api/organisation/#create_organization","title":"create_organization","text":"<pre><code>def create_organization(name: str) -&gt; int\n</code></pre> <p>The method includes a functionality to create an organization</p> <p>Arguments:</p> <ul> <li><code>name</code> str - Specify the organization name</li> </ul> <p>Required Permissions: - <code>Action</code> - orgs:create - <code>Scope</code> - N/A - <code>Note</code> - Needs to be assigned globally.</p> <p>Raises:</p> <ul> <li><code>ValueError</code> - Missed specifying a necessary value</li> <li><code>Exception</code> - Unspecified error by executing the API call</li> </ul> <p>Returns:</p> <ul> <li><code>org_id</code> int - Returns the id of the created organization</li> </ul> <p></p>"},{"location":"grafana_api/organisation/#update_organization","title":"update_organization","text":"<pre><code>def update_organization(org_id: int, name: str)\n</code></pre> <p>The method includes a functionality to update an organization</p> <p>Arguments:</p> <ul> <li><code>org_id</code> int - Specify the organization id</li> <li><code>name</code> str - Specify the organization name</li> </ul> <p>Required Permissions: - <code>Action</code> - orgs:write - <code>Scope</code> - N/A</p> <p>Raises:</p> <ul> <li><code>ValueError</code> - Missed specifying a necessary value</li> <li><code>Exception</code> - Unspecified error by executing the API call</li> </ul> <p>Returns:</p> <p>None</p> <p></p>"},{"location":"grafana_api/organisation/#delete_organization","title":"delete_organization","text":"<pre><code>def delete_organization(org_id: int)\n</code></pre> <p>The method includes a functionality to delete an organization</p> <p>Arguments:</p> <ul> <li><code>org_id</code> int - Specify the organization id</li> </ul> <p>Required Permissions: - <code>Action</code> - orgs:delete - <code>Scope</code> - N/A</p> <p>Raises:</p> <ul> <li><code>ValueError</code> - Missed specifying a necessary value</li> <li><code>Exception</code> - Unspecified error by executing the API call</li> </ul> <p>Returns:</p> <p>None</p> <p></p>"},{"location":"grafana_api/organisation/#get_organization_users","title":"get_organization_users","text":"<pre><code>def get_organization_users(org_id: int) -&gt; list\n</code></pre> <p>The method includes a functionality to get all organization users specified by the organization id</p> <p>Arguments:</p> <ul> <li><code>org_id</code> int - Specify the organization id</li> </ul> <p>Required Permissions: - <code>Action</code> - org.users:read - <code>Scope</code> - users:*</p> <p>Raises:</p> <ul> <li><code>ValueError</code> - Missed specifying a necessary value</li> <li><code>Exception</code> - Unspecified error by executing the API call</li> </ul> <p>Returns:</p> <ul> <li><code>api_call</code> list - Returns all organization users as list</li> </ul> <p></p>"},{"location":"grafana_api/organisation/#add_organization_user","title":"add_organization_user","text":"<pre><code>def add_organization_user(org_id: int, login_or_email: str, role: str) -&gt; int\n</code></pre> <p>The method includes a functionality to add a user to an organization</p> <p>Arguments:</p> <ul> <li><code>org_id</code> int - Specify the organization id</li> <li><code>login_or_email</code> str - Specify the added user</li> <li><code>role</code> str - Specify the added role for the user</li> </ul> <p>Required Permissions: - <code>Action</code> - org.users:add - <code>Scope</code> - users:*</p> <p>Raises:</p> <ul> <li><code>ValueError</code> - Missed specifying a necessary value</li> <li><code>Exception</code> - Unspecified error by executing the API call</li> </ul> <p>Returns:</p> <ul> <li><code>user_id</code> int - Returns the added user id</li> </ul> <p></p>"},{"location":"grafana_api/organisation/#update_organization_user","title":"update_organization_user","text":"<pre><code>def update_organization_user(org_id: int, user_id: int, role: str)\n</code></pre> <p>The method includes a functionality to update organization user specified by the organization id, the user_id and the role</p> <p>Arguments:</p> <ul> <li><code>org_id</code> int - Specify the organization id</li> <li><code>user_id</code> int - Specify the user id</li> <li><code>role</code> str - Specify the added role for the user</li> </ul> <p>Required Permissions: - <code>Action</code> - org.users.role:update - <code>Scope</code> - users:*</p> <p>Raises:</p> <ul> <li><code>ValueError</code> - Missed specifying a necessary value</li> <li><code>Exception</code> - Unspecified error by executing the API call</li> </ul> <p>Returns:</p> <p>None</p> <p></p>"},{"location":"grafana_api/organisation/#delete_organization_user","title":"delete_organization_user","text":"<pre><code>def delete_organization_user(org_id: int, user_id: int)\n</code></pre> <p>The method includes a functionality to remove an organization users specified by the organization id and the user id</p> <p>Arguments:</p> <ul> <li><code>org_id</code> int - Specify the organization id</li> <li><code>user_id</code> int - Specify the user id</li> </ul> <p>Required Permissions: - <code>Action</code> - org.users:remove - <code>Scope</code> - users:*</p> <p>Raises:</p> <ul> <li><code>ValueError</code> - Missed specifying a necessary value</li> <li><code>Exception</code> - Unspecified error by executing the API call</li> </ul> <p>Returns:</p> <p>None</p>"},{"location":"grafana_api/other-http/","title":"Table of Contents","text":"<ul> <li>other_http</li> <li>OtherHTTP<ul> <li>get_frontend_settings</li> <li>renew_login_session_based_on_remember_cookie</li> <li>get_health_status</li> <li>get_metrics</li> <li>get_plugin_metrics</li> </ul> </li> </ul>"},{"location":"grafana_api/other-http/#other_http","title":"other_http","text":""},{"location":"grafana_api/other-http/#otherhttp-objects","title":"OtherHTTP Objects","text":"<pre><code>class OtherHTTP()\n</code></pre> <p>The class includes all necessary methods to access other Grafana API endpoints</p> <p>Arguments:</p> <ul> <li><code>grafana_api_model</code> APIModel - Inject a Grafana API model object that includes all necessary values and information</li> </ul> <p>Attributes:</p> <ul> <li><code>grafana_api_model</code> APIModel - This is where we store the grafana_api_model</li> </ul> <p></p>"},{"location":"grafana_api/other-http/#get_frontend_settings","title":"get_frontend_settings","text":"<pre><code>def get_frontend_settings() -&gt; dict\n</code></pre> <p>The method includes a functionality to get the frontend settings</p> <p>Raises:</p> <ul> <li><code>Exception</code> - Unspecified error by executing the API call</li> </ul> <p>Returns:</p> <ul> <li><code>api_call</code> dict - Returns the corresponding frontend settings</li> </ul> <p></p>"},{"location":"grafana_api/other-http/#renew_login_session_based_on_remember_cookie","title":"renew_login_session_based_on_remember_cookie","text":"<pre><code>def renew_login_session_based_on_remember_cookie()\n</code></pre> <p>The method includes a functionality to renew the login session based on the remember cookie</p> <p>Raises:</p> <ul> <li><code>Exception</code> - Unspecified error by executing the API call</li> </ul> <p>Returns:</p> <p>None</p> <p></p>"},{"location":"grafana_api/other-http/#get_health_status","title":"get_health_status","text":"<pre><code>def get_health_status() -&gt; dict\n</code></pre> <p>The method includes a functionality to get the health information</p> <p>Raises:</p> <ul> <li><code>Exception</code> - Unspecified error by executing the API call</li> </ul> <p>Returns:</p> <ul> <li><code>api_call</code> dict - Returns the health information</li> </ul> <p></p>"},{"location":"grafana_api/other-http/#get_metrics","title":"get_metrics","text":"<pre><code>def get_metrics(basic_auth_username: str = None,\n                basic_auth_password: str = None) -&gt; str\n</code></pre> <p>The method includes a functionality to get the Grafana metrics information</p> <p>Arguments:</p> <ul> <li><code>basic_auth_username</code> str - Specify the optional basic auth username</li> <li><code>basic_auth_password</code> str - Specify the optional basic auth password</li> </ul> <p>Raises:</p> <ul> <li><code>Exception</code> - Unspecified error by executing the API call</li> </ul> <p>Returns:</p> <ul> <li><code>api_call</code> str - Returns the metrics information</li> </ul> <p></p>"},{"location":"grafana_api/other-http/#get_plugin_metrics","title":"get_plugin_metrics","text":"<pre><code>def get_plugin_metrics(plugin_id: str,\n                       basic_auth_username: str = None,\n                       basic_auth_password: str = None) -&gt; str\n</code></pre> <p>The method includes a functionality to get the Grafana plugin metrics information</p> <p>Arguments:</p> <ul> <li><code>plugin_id</code> str - Specify the plugin id</li> <li><code>basic_auth_username</code> str - Specify the optional basic auth username</li> <li><code>basic_auth_password</code> str - Specify the optional basic auth password</li> </ul> <p>Raises:</p> <ul> <li><code>ValueError</code> - Missed specifying a necessary value</li> <li><code>Exception</code> - Unspecified error by executing the API call</li> </ul> <p>Returns:</p> <ul> <li><code>api_call</code> str - Returns the metrics information</li> </ul>"},{"location":"grafana_api/playlist/","title":"Table of Contents","text":"<ul> <li>playlist</li> <li>Playlist<ul> <li>search_playlist</li> <li>get_playlist</li> <li>get_playlist_items</li> <li>get_playlist_dashboards</li> <li>create_playlist</li> <li>update_playlist</li> <li>delete_playlist</li> </ul> </li> </ul>"},{"location":"grafana_api/playlist/#playlist","title":"playlist","text":""},{"location":"grafana_api/playlist/#playlist-objects","title":"Playlist Objects","text":"<pre><code>class Playlist()\n</code></pre> <p>The class includes all necessary methods to access the Grafana playlist API endpoints</p> <p>Arguments:</p> <ul> <li><code>grafana_api_model</code> APIModel - Inject a Grafana API model object that includes all necessary values and information</li> </ul> <p>Attributes:</p> <ul> <li><code>grafana_api_model</code> APIModel - This is where we store the grafana_api_model</li> </ul> <p></p>"},{"location":"grafana_api/playlist/#search_playlist","title":"search_playlist","text":"<pre><code>def search_playlist(query: str = None, limit: int = None) -&gt; list\n</code></pre> <p>The method includes a functionality to get the organization playlist's specified by the optional pagination functionality</p> <p>Arguments:</p> <ul> <li><code>query</code> str - Specify the query to limit response to playlist having a name like this value(default None)</li> <li><code>limit</code> int - Specify the limit as integer of the response (default None)</li> </ul> <p>Raises:</p> <ul> <li><code>Exception</code> - Unspecified error by executing the API call</li> </ul> <p>Returns:</p> <ul> <li><code>api_call</code> list - Returns the organization playlist's</li> </ul> <p></p>"},{"location":"grafana_api/playlist/#get_playlist","title":"get_playlist","text":"<pre><code>def get_playlist(playlist_uid: str) -&gt; dict\n</code></pre> <p>The method includes a functionality to get the playlist specified by the playlist_uid</p> <p>Arguments:</p> <ul> <li><code>playlist_uid</code> str - Specify the playlist_uid</li> </ul> <p>Raises:</p> <ul> <li><code>ValueError</code> - Missed specifying a necessary value</li> <li><code>Exception</code> - Unspecified error by executing the API call</li> </ul> <p>Returns:</p> <ul> <li><code>api_call</code> dict - Returns the corresponding playlist</li> </ul> <p></p>"},{"location":"grafana_api/playlist/#get_playlist_items","title":"get_playlist_items","text":"<pre><code>def get_playlist_items(playlist_uid: str) -&gt; list\n</code></pre> <p>The method includes a functionality to get the playlist items specified by the playlist_uid</p> <p>Arguments:</p> <ul> <li><code>playlist_uid</code> str - Specify the playlist_uid</li> </ul> <p>Raises:</p> <ul> <li><code>ValueError</code> - Missed specifying a necessary value</li> <li><code>Exception</code> - Unspecified error by executing the API call</li> </ul> <p>Returns:</p> <ul> <li><code>api_call</code> dict - Returns the corresponding playlist items</li> </ul> <p></p>"},{"location":"grafana_api/playlist/#get_playlist_dashboards","title":"get_playlist_dashboards","text":"<pre><code>def get_playlist_dashboards(playlist_uid: str) -&gt; list\n</code></pre> <p>The method includes a functionality to get the playlist dashboards specified by the playlist_uid</p> <p>Arguments:</p> <ul> <li><code>playlist_uid</code> str - Specify the playlist_uid</li> </ul> <p>Raises:</p> <ul> <li><code>ValueError</code> - Missed specifying a necessary value</li> <li><code>Exception</code> - Unspecified error by executing the API call</li> </ul> <p>Returns:</p> <ul> <li><code>api_call</code> dict - Returns the corresponding playlist dashboards</li> </ul> <p></p>"},{"location":"grafana_api/playlist/#create_playlist","title":"create_playlist","text":"<pre><code>def create_playlist(playlist: PlaylistObject) -&gt; dict\n</code></pre> <p>The method includes a functionality to create a playlist specified by the playlist object</p> <p>Arguments:</p> <ul> <li><code>playlist</code> PlaylistObject - Specify the playlist object</li> </ul> <p>Raises:</p> <ul> <li><code>ValueError</code> - Missed specifying a necessary value</li> <li><code>Exception</code> - Unspecified error by executing the API call</li> </ul> <p>Returns:</p> <ul> <li><code>api_call</code> dict - Returns the corresponding playlist</li> </ul> <p></p>"},{"location":"grafana_api/playlist/#update_playlist","title":"update_playlist","text":"<pre><code>def update_playlist(playlist_uid: str, playlist: PlaylistObject) -&gt; dict\n</code></pre> <p>The method includes a functionality to update a playlist specified by the playlist object and playlist_uid</p> <p>Arguments:</p> <ul> <li><code>playlist_uid</code> str - Specify the playlist_uid</li> <li><code>playlist</code> PlaylistObject - Specify the playlist object</li> </ul> <p>Raises:</p> <ul> <li><code>ValueError</code> - Missed specifying a necessary value</li> <li><code>Exception</code> - Unspecified error by executing the API call</li> </ul> <p>Returns:</p> <ul> <li><code>api_call</code> dict - Returns the corresponding playlist</li> </ul> <p></p>"},{"location":"grafana_api/playlist/#delete_playlist","title":"delete_playlist","text":"<pre><code>def delete_playlist(playlist_uid: str)\n</code></pre> <p>The method includes a functionality to delete a playlist specified by the playlist_uid</p> <p>Arguments:</p> <ul> <li><code>playlist_uid</code> str - Specify the playlist_uid</li> </ul> <p>Raises:</p> <ul> <li><code>ValueError</code> - Missed specifying a necessary value</li> <li><code>Exception</code> - Unspecified error by executing the API call</li> </ul> <p>Returns:</p> <p>None</p>"},{"location":"grafana_api/preferences/","title":"Table of Contents","text":"<ul> <li>preferences</li> <li>Preferences<ul> <li>get_current_user_preferences</li> <li>update_current_user_preferences</li> <li>get_current_org_preferences</li> <li>update_current_org_preferences</li> </ul> </li> </ul>"},{"location":"grafana_api/preferences/#preferences","title":"preferences","text":""},{"location":"grafana_api/preferences/#preferences-objects","title":"Preferences Objects","text":"<pre><code>class Preferences()\n</code></pre> <p>The class includes all necessary methods to access the Grafana preferences API endpoints.</p> <p>Arguments:</p> <ul> <li><code>grafana_api_model</code> APIModel - Inject a Grafana API model object that includes all necessary values and information</li> </ul> <p>Attributes:</p> <ul> <li><code>grafana_api_model</code> APIModel - This is where we store the grafana_api_model</li> </ul> <p></p>"},{"location":"grafana_api/preferences/#get_current_user_preferences","title":"get_current_user_preferences","text":"<pre><code>def get_current_user_preferences() -&gt; dict\n</code></pre> <p>The method includes a functionality to get the current user preferences</p> <p>Raises:</p> <ul> <li><code>Exception</code> - Unspecified error by executing the API call</li> </ul> <p>Returns:</p> <ul> <li><code>api_call</code> dict - Returns the current user preferences</li> </ul> <p></p>"},{"location":"grafana_api/preferences/#update_current_user_preferences","title":"update_current_user_preferences","text":"<pre><code>def update_current_user_preferences(theme: str = None,\n                                    timezone: str = None,\n                                    home_dashboard_id: int = 0,\n                                    home_dashboard_uid: str = None)\n</code></pre> <p>The method includes a functionality to update the current user preferences</p> <p>Arguments:</p> <ul> <li><code>theme</code> str - Specify the theme e.g. light, dark, or an empty string for the default theme (default None)</li> <li><code>home_dashboard_id</code> int - Specify the dashboard id of the home folder (default 0)</li> <li><code>home_dashboard_uid</code> str - Specify the home team dashboard by uid (default None)</li> <li><code>timezone</code> str - Specify the timezone e.g. utc, browser, or an empty string for the default (default None)</li> </ul> <p>Raises:</p> <ul> <li><code>ValueError</code> - Missed specifying a necessary value</li> <li><code>Exception</code> - Unspecified error by executing the API call</li> </ul> <p>Returns:</p> <p>None</p> <p></p>"},{"location":"grafana_api/preferences/#get_current_org_preferences","title":"get_current_org_preferences","text":"<pre><code>def get_current_org_preferences() -&gt; dict\n</code></pre> <p>The method includes a functionality to get the current org preferences</p> <p>Raises:</p> <ul> <li><code>Exception</code> - Unspecified error by executing the API call</li> </ul> <p>Returns:</p> <ul> <li><code>api_call</code> dict - Returns the current user preferences</li> </ul> <p></p>"},{"location":"grafana_api/preferences/#update_current_org_preferences","title":"update_current_org_preferences","text":"<pre><code>def update_current_org_preferences(theme: str = None,\n                                   home_dashboard_id: int = 0,\n                                   home_dashboard_uid: str = None,\n                                   timezone: str = None)\n</code></pre> <p>The method includes a functionality to update the current org preferences</p> <p>Arguments:</p> <ul> <li><code>theme</code> str - Specify the theme e.g. light, dark, or an empty string for the default theme (default None)</li> <li><code>home_dashboard_id</code> int - Specify the dashboard id of the home folder (default 0)</li> <li><code>home_dashboard_uid</code> str - Specify the home team dashboard by uid (default None)</li> <li><code>timezone</code> str - Specify the timezone e.g. utc, browser, or an empty string for the default (default None)</li> </ul> <p>Raises:</p> <ul> <li><code>ValueError</code> - Missed specifying a necessary value</li> <li><code>Exception</code> - Unspecified error by executing the API call</li> </ul> <p>Returns:</p> <p>None</p>"},{"location":"grafana_api/query-history/","title":"Table of Contents","text":"<ul> <li>query_history</li> <li>QueryHistory<ul> <li>add_query_to_history</li> <li>search_query_history</li> <li>delete_query_history</li> <li>update_query_history</li> <li>star_query_history</li> <li>unstar_query_history</li> </ul> </li> </ul>"},{"location":"grafana_api/query-history/#query_history","title":"query_history","text":""},{"location":"grafana_api/query-history/#queryhistory-objects","title":"QueryHistory Objects","text":"<pre><code>class QueryHistory()\n</code></pre> <p>The class includes all necessary methods to access the Grafana query history API endpoints. Be aware that it requires that the user is logged in and that query history feature is enabled in the config file</p> <p>Arguments:</p> <ul> <li><code>grafana_api_model</code> APIModel - Inject a Grafana API model object that includes all necessary values and information</li> </ul> <p>Attributes:</p> <ul> <li><code>grafana_api_model</code> APIModel - This is where we store the grafana_api_model</li> </ul> <p></p>"},{"location":"grafana_api/query-history/#add_query_to_history","title":"add_query_to_history","text":"<pre><code>def add_query_to_history(datasource_uid: str, queries: list) -&gt; dict\n</code></pre> <p>The method includes a functionality to add queries to query history</p> <p>Arguments:</p> <ul> <li><code>datasource_uid</code> str - Specify the datasource uid</li> <li><code>queries</code> list - Specify the queries as list from type QueryObject</li> </ul> <p>Raises:</p> <ul> <li><code>ValueError</code> - Missed specifying a necessary value</li> <li><code>Exception</code> - Unspecified error by executing the API call</li> </ul> <p>Returns:</p> <ul> <li><code>api_call</code> dict - Returns the added result of the query history</li> </ul> <p></p>"},{"location":"grafana_api/query-history/#search_query_history","title":"search_query_history","text":"<pre><code>def search_query_history(datasource_uids: list,\n                         search_string: str,\n                         sort: str = \"time-desc\",\n                         only_starred: bool = False,\n                         pages: int = 1,\n                         results_per_page: int = 100) -&gt; dict\n</code></pre> <p>The method includes a functionality to search a query inside the query history</p> <p>Arguments:</p> <ul> <li><code>datasource_uids</code> list - Specify the datasource uid</li> <li><code>search_string</code> str - Specify the search string to filter the result</li> <li><code>sort</code> str - Specify the sorting order e.g. time-asc or time-desc (default time-desc)</li> <li><code>only_starred</code> bool - Specify if queries that are starred should be used for the search (default false)</li> <li><code>pages</code> int - Specify the pages as integer (default 1)</li> <li><code>results_per_page</code> int - Specify the results_per_page as integer (default 100)</li> </ul> <p>Raises:</p> <ul> <li><code>ValueError</code> - Missed specifying a necessary value</li> <li><code>Exception</code> - Unspecified error by executing the API call</li> </ul> <p>Returns:</p> <ul> <li><code>api_call</code> dict - Returns the corresponding result of the query history</li> </ul> <p></p>"},{"location":"grafana_api/query-history/#delete_query_history","title":"delete_query_history","text":"<pre><code>def delete_query_history(uid: str)\n</code></pre> <p>The method includes a functionality to delete a query inside the query history</p> <p>Arguments:</p> <ul> <li><code>uid</code> str - Specify the uid of the query</li> </ul> <p>Raises:</p> <ul> <li><code>ValueError</code> - Missed specifying a necessary value</li> <li><code>Exception</code> - Unspecified error by executing the API call</li> </ul> <p>Returns:</p> <p>None</p> <p></p>"},{"location":"grafana_api/query-history/#update_query_history","title":"update_query_history","text":"<pre><code>def update_query_history(uid: str, comment: str) -&gt; dict\n</code></pre> <p>The method includes a functionality to update a query inside the query history</p> <p>Arguments:</p> <ul> <li><code>uid</code> str - Specify the uid of the query</li> <li><code>comment</code> str - Specify the comment of the query</li> </ul> <p>Raises:</p> <ul> <li><code>ValueError</code> - Missed specifying a necessary value</li> <li><code>Exception</code> - Unspecified error by executing the API call</li> </ul> <p>Returns:</p> <ul> <li><code>api_call</code> dict - Returns the modified result of the query history</li> </ul> <p></p>"},{"location":"grafana_api/query-history/#star_query_history","title":"star_query_history","text":"<pre><code>def star_query_history(uid: str) -&gt; dict\n</code></pre> <p>The method includes a functionality to star a query inside the query history</p> <p>Arguments:</p> <ul> <li><code>uid</code> str - Specify the uid of the query</li> </ul> <p>Raises:</p> <ul> <li><code>ValueError</code> - Missed specifying a necessary value</li> <li><code>Exception</code> - Unspecified error by executing the API call</li> </ul> <p>Returns:</p> <ul> <li><code>api_call</code> dict - Returns the corresponding stared query history</li> </ul> <p></p>"},{"location":"grafana_api/query-history/#unstar_query_history","title":"unstar_query_history","text":"<pre><code>def unstar_query_history(uid: str) -&gt; dict\n</code></pre> <p>The method includes a functionality to unstar a query inside the query history</p> <p>Arguments:</p> <ul> <li><code>uid</code> str - Specify the uid of the query</li> </ul> <p>Raises:</p> <ul> <li><code>ValueError</code> - Missed specifying a necessary value</li> <li><code>Exception</code> - Unspecified error by executing the API call</li> </ul> <p>Returns:</p> <ul> <li><code>api_call</code> dict - Returns the corresponding unstared query history</li> </ul>"},{"location":"grafana_api/rbac/","title":"Table of Contents","text":"<ul> <li>rbac</li> <li>RBAC<ul> <li>get_status</li> <li>get_all_roles</li> <li>get_role</li> <li>create_role</li> <li>update_role</li> <li>delete_role</li> <li>get_user_assigned_roles</li> <li>get_user_assigned_permissions</li> <li>add_user_role_assignment</li> <li>remove_user_role_assignment</li> <li>update_user_role_assignments</li> <li>get_service_account_assigned_roles</li> <li>get_service_account_assigned_permissions</li> <li>add_service_account_role_assignment</li> <li>remove_service_account_role_assignment</li> <li>update_service_account_role_assignments</li> <li>get_team_assigned_roles</li> <li>add_team_role_assignment</li> <li>remove_team_role_assignment</li> <li>update_team_role_assignments</li> <li>reset_basic_roles_to_their_default</li> </ul> </li> </ul>"},{"location":"grafana_api/rbac/#rbac","title":"rbac","text":""},{"location":"grafana_api/rbac/#rbac-objects","title":"RBAC Objects","text":"<pre><code>class RBAC()\n</code></pre> <p>The class includes all necessary methods to access the Grafana RBAC API endpoints. Be aware that the functionality is a Grafana ENTERPRISE feature</p> <p>Arguments:</p> <ul> <li><code>grafana_api_model</code> APIModel - Inject a Grafana API model object that includes all necessary values and information</li> </ul> <p>Attributes:</p> <ul> <li><code>grafana_api_model</code> APIModel - This is where we store the grafana_api_model</li> </ul> <p></p>"},{"location":"grafana_api/rbac/#get_status","title":"get_status","text":"<pre><code>def get_status() -&gt; bool\n</code></pre> <p>The method includes a functionality to get the status if role-based access control is enabled or not</p> <p>Required Permissions: Action: status:accesscontrol Scope: services:accesscontrol</p> <p>Raises:</p> <ul> <li><code>Exception</code> - Unspecified error by executing the API call</li> </ul> <p>Returns:</p> <ul> <li><code>api_call</code> bool - Return a flag indicating if the role-based access control is enabled or not</li> </ul> <p></p>"},{"location":"grafana_api/rbac/#get_all_roles","title":"get_all_roles","text":"<pre><code>def get_all_roles(include_hidden_roles: bool = False) -&gt; list\n</code></pre> <p>The method includes a functionality gets all existing roles. The response contains all global and organization local roles, for the organization which user is signed in</p> <p>Arguments:</p> <ul> <li><code>include_hidden_roles</code> bool - Specify if the output contains the hidden roles or not (default False)</li> </ul> <p>Required Permissions: - <code>Action</code> - roles:read - <code>Scope</code> - roles:*</p> <p>Raises:</p> <ul> <li><code>Exception</code> - Unspecified error by executing the API call</li> </ul> <p>Returns:</p> <ul> <li><code>api_call</code> list - Return all global and organization local roles</li> </ul> <p></p>"},{"location":"grafana_api/rbac/#get_role","title":"get_role","text":"<pre><code>def get_role(uid: str) -&gt; dict\n</code></pre> <p>The method includes a functionality get a role specified by the uid</p> <p>Arguments:</p> <ul> <li><code>uid</code> str - Specify the uid of the role</li> </ul> <p>Required Permissions: - <code>Action</code> - roles:read - <code>Scope</code> - roles:*</p> <p>Raises:</p> <ul> <li><code>ValueError</code> - Missed specifying a necessary value</li> <li><code>Exception</code> - Unspecified error by executing the API call</li> </ul> <p>Returns:</p> <ul> <li><code>api_call</code> dict - Return the corresponding role</li> </ul> <p></p>"},{"location":"grafana_api/rbac/#create_role","title":"create_role","text":"<pre><code>def create_role(role_definition: CustomRole) -&gt; dict\n</code></pre> <p>The method includes a functionality create a new custom role and maps given permissions to that role. Note that roles with the same prefix as Fixed roles can\u2019t be created</p> <p>Args:     role_definition (CustomRole): Specify the corresponding role definition</p> <p>Required Permissions:     Action: roles:write     Scope: permissions:type:delegate</p> <p>Raises:     ValueError: Missed specifying a necessary value     Exception: Unspecified error by executing the API call</p> <p>Returns:     api_call (dict): Return the newly created role</p> <p></p>"},{"location":"grafana_api/rbac/#update_role","title":"update_role","text":"<pre><code>def update_role(uid: str, role_definition: CustomRole) -&gt; dict\n</code></pre> <p>The method includes a functionality to update the role with the given uid, and its permissions. The operation is idempotent and all permissions of the role will be replaced based on the request content. You need to increment the version of the role with each update, otherwise the request will fail</p> <p>Args:     uid (str): Specify the corresponding uid of the custom role     role_definition (CustomRole): Specify the corresponding role definition</p> <p>Required Permissions:     Action: roles:write     Scope: permissions:type:delegate</p> <p>Raises:     ValueError: Missed specifying a necessary value     Exception: Unspecified error by executing the API call</p> <p>Returns:     api_call (dict): Return the updated role</p> <p></p>"},{"location":"grafana_api/rbac/#delete_role","title":"delete_role","text":"<pre><code>def delete_role(uid: str, force: bool = False, global_role: bool = False)\n</code></pre> <p>The method includes a functionality to delete a role with the given uid</p> <p>Args:     uid (str): Specify the corresponding uid of the custom role     force (bool): Specify the corresponding if the role will be deleted with all it\u2019s assignments or not (default False)     global_role (bool): Specify the corresponding if the role is global or not. If set to false, the default org id of the authenticated user will be used from the request (default False)</p> <p>Required Permissions:     Action: roles:delete     Scope: permissions:type:delegate</p> <p>Raises:     ValueError: Missed specifying a necessary value     Exception: Unspecified error by executing the API call</p> <p>Returns:     None</p> <p></p>"},{"location":"grafana_api/rbac/#get_user_assigned_roles","title":"get_user_assigned_roles","text":"<pre><code>def get_user_assigned_roles(user_id: int,\n                            include_hidden_roles: bool = False) -&gt; list\n</code></pre> <p>The method includes a functionality to get the roles that have been directly assigned to a given user specified by the user id. The list does not include basic roles (Viewer, Editor, Admin or Grafana Admin), and it does not include roles that have been inherited from a team</p> <p>Arguments:</p> <ul> <li><code>user_id</code> int - Specify the corresponding user_id of the user</li> <li><code>include_hidden_roles</code> bool - Specify if the output contains the hidden roles or not (default False)</li> </ul> <p>Required Permissions: - <code>Action</code> - users.roles:read - <code>Scope</code> - users:id: <p>Raises:</p> <ul> <li><code>ValueError</code> - Missed specifying a necessary value</li> <li><code>Exception</code> - Unspecified error by executing the API call</li> </ul> <p>Returns:</p> <ul> <li><code>api_call</code> list - Return the corresponding user roles</li> </ul> <p></p>"},{"location":"grafana_api/rbac/#get_user_assigned_permissions","title":"get_user_assigned_permissions","text":"<pre><code>def get_user_assigned_permissions(user_id: int) -&gt; list\n</code></pre> <p>The method includes a functionality to get the permissions that have been directly assigned to a given user specified by the user id</p> <p>Arguments:</p> <ul> <li><code>user_id</code> int - Specify the corresponding user_id of the user</li> </ul> <p>Required Permissions: - <code>Action</code> - users.permissions:read - <code>Scope</code> - users:id: <p>Raises:</p> <ul> <li><code>ValueError</code> - Missed specifying a necessary value</li> <li><code>Exception</code> - Unspecified error by executing the API call</li> </ul> <p>Returns:</p> <ul> <li><code>api_call</code> list - Return the corresponding user permissions</li> </ul> <p></p>"},{"location":"grafana_api/rbac/#add_user_role_assignment","title":"add_user_role_assignment","text":"<pre><code>def add_user_role_assignment(user_id: int,\n                             role_uid: str,\n                             global_assignment: bool = False)\n</code></pre> <p>The method includes a functionality to assign a role to a specific user</p> <p>Args:     user_id (int): Specify the corresponding user_id of the user     role_uid (str): Specify the corresponding uid of the role     global_assignment (bool): Specify the corresponding if the assignment is global or not. If set to false, the default org id of the authenticated user will be used from the request (default False)</p> <p>Required Permissions:     Action: users.roles:add     Scope: permissions:type:delegate</p> <p>Raises:     ValueError: Missed specifying a necessary value     Exception: Unspecified error by executing the API call</p> <p>Returns:     None</p> <p></p>"},{"location":"grafana_api/rbac/#remove_user_role_assignment","title":"remove_user_role_assignment","text":"<pre><code>def remove_user_role_assignment(user_id: int, role_uid: str)\n</code></pre> <p>The method includes a functionality to revoke a role to a specific user</p> <p>Args:     user_id (int): Specify the corresponding user_id of the user     role_uid (str): Specify the corresponding uid of the role</p> <p>Required Permissions:     Action: users.roles:remove     Scope: permissions:type:delegate</p> <p>Raises:     ValueError: Missed specifying a necessary value     Exception: Unspecified error by executing the API call</p> <p>Returns:     None</p> <p></p>"},{"location":"grafana_api/rbac/#update_user_role_assignments","title":"update_user_role_assignments","text":"<pre><code>def update_user_role_assignments(user_id: int,\n                                 role_uids: list,\n                                 include_hidden_roles: bool = False,\n                                 global_assignment: bool = False)\n</code></pre> <p>The method includes a functionality to update the user role assignments to match the provided set of uid's. This will remove any assigned roles that aren\u2019t in the request and add roles that are in the set but are not already assigned to the user</p> <p>Args:     user_id (int): Specify the corresponding user_id of the user     role_uids (list): Specify the corresponding uids of the role     include_hidden_roles (bool): Specify if the output contains the hidden roles or not (default False)     global_assignment (bool): Specify the corresponding if the assignment is global or not. If set to false, the default org id of the authenticated user will be used from the request (default False)</p> <p>Required Permissions:     Action: users.roles:add, users.roles:remove     Scope: permissions:type:delegate</p> <p>Raises:     ValueError: Missed specifying a necessary value     Exception: Unspecified error by executing the API call</p> <p>Returns:     None</p> <p></p>"},{"location":"grafana_api/rbac/#get_service_account_assigned_roles","title":"get_service_account_assigned_roles","text":"<pre><code>def get_service_account_assigned_roles(service_account_id: int,\n                                       include_hidden_roles: bool = False\n                                       ) -&gt; list\n</code></pre> <p>The method includes a functionality to get the roles that have been directly assigned to a given service account. The list does not include basic roles (Viewer, Editor, Admin or Grafana Admin)</p> <p>Arguments:</p> <ul> <li><code>service_account_id</code> int - Specify the corresponding service_account_id of the service account</li> <li><code>include_hidden_roles</code> bool - Specify if the output contains the hidden roles or not (default False)</li> </ul> <p>Required Permissions: - <code>Action</code> - users.roles:read - <code>Scope</code> - users:id: <p>Raises:</p> <ul> <li><code>ValueError</code> - Missed specifying a necessary value</li> <li><code>Exception</code> - Unspecified error by executing the API call</li> </ul> <p>Returns:</p> <ul> <li><code>api_call</code> list - Return the corresponding service account roles</li> </ul> <p></p>"},{"location":"grafana_api/rbac/#get_service_account_assigned_permissions","title":"get_service_account_assigned_permissions","text":"<pre><code>def get_service_account_assigned_permissions(service_account_id: int) -&gt; list\n</code></pre> <p>The method includes a functionality to get the permissions that a given service account has</p> <p>Arguments:</p> <ul> <li><code>service_account_id</code> int - Specify the corresponding service_account_id of the service account</li> </ul> <p>Required Permissions: - <code>Action</code> - users.permissions:read - <code>Scope</code> - users:id: <p>Raises:</p> <ul> <li><code>ValueError</code> - Missed specifying a necessary value</li> <li><code>Exception</code> - Unspecified error by executing the API call</li> </ul> <p>Returns:</p> <ul> <li><code>api_call</code> list - Return the corresponding service account permissions</li> </ul> <p></p>"},{"location":"grafana_api/rbac/#add_service_account_role_assignment","title":"add_service_account_role_assignment","text":"<pre><code>def add_service_account_role_assignment(service_account_id: int,\n                                        role_uid: str,\n                                        global_assignment: bool = False)\n</code></pre> <p>The method includes a functionality to assign a role to a specific service account</p> <p>Args:     service_account_id (int): Specify the corresponding service_account_id of the service account     role_uid (str): Specify the corresponding uid of the role     global_assignment (bool): Specify the corresponding if the assignment is global or not. If set to false, the default org id of the authenticated user will be used from the request (default False)</p> <p>Required Permissions:     Action: users.roles:add     Scope: permissions:type:delegate</p> <p>Raises:     ValueError: Missed specifying a necessary value     Exception: Unspecified error by executing the API call</p> <p>Returns:     None</p> <p></p>"},{"location":"grafana_api/rbac/#remove_service_account_role_assignment","title":"remove_service_account_role_assignment","text":"<pre><code>def remove_service_account_role_assignment(service_account_id: int,\n                                           role_uid: str)\n</code></pre> <p>The method includes a functionality to revoke a role to a specific service account</p> <p>Args:     service_account_id (int): Specify the corresponding service_account_id of the service account     role_uid (str): Specify the corresponding uid of the role</p> <p>Required Permissions:     Action: users.roles:remove     Scope: permissions:type:delegate</p> <p>Raises:     ValueError: Missed specifying a necessary value     Exception: Unspecified error by executing the API call</p> <p>Returns:     None</p> <p></p>"},{"location":"grafana_api/rbac/#update_service_account_role_assignments","title":"update_service_account_role_assignments","text":"<pre><code>def update_service_account_role_assignments(service_account_id: int,\n                                            role_uids: list,\n                                            include_hidden_roles: bool = False,\n                                            global_assignment: bool = False)\n</code></pre> <p>The method includes a functionality to update the service account role assignments to match the provided set of uid's. This will remove any assigned roles that aren\u2019t in the request and add roles that are in the set but are not already assigned to the user</p> <p>Args:     service_account_id (int): Specify the corresponding service_account_id of the service account     role_uids (list): Specify the corresponding uids of the role     include_hidden_roles (bool): Specify if the output contains the hidden roles or not (default False)     global_assignment (bool): Specify the corresponding if the assignment is global or not. If set to false, the default org id of the authenticated user will be used from the request (default False)</p> <p>Required Permissions:     Action: users.roles:add, users.roles:remove     Scope: permissions:type:delegate</p> <p>Raises:     ValueError: Missed specifying a necessary value     Exception: Unspecified error by executing the API call</p> <p>Returns:     None</p> <p></p>"},{"location":"grafana_api/rbac/#get_team_assigned_roles","title":"get_team_assigned_roles","text":"<pre><code>def get_team_assigned_roles(team_id: int,\n                            include_hidden_roles: bool = False) -&gt; list\n</code></pre> <p>The method includes a functionality to get that have been directly assigned to a given team.</p> <p>Arguments:</p> <ul> <li><code>team_id</code> int - Specify the corresponding team_id of the team</li> <li><code>include_hidden_roles</code> bool - Specify if the output contains the hidden roles or not (default False)</li> </ul> <p>Required Permissions: - <code>Action</code> - teams.roles:read - <code>Scope</code> - teams:id: <p>Raises:</p> <ul> <li><code>ValueError</code> - Missed specifying a necessary value</li> <li><code>Exception</code> - Unspecified error by executing the API call</li> </ul> <p>Returns:</p> <ul> <li><code>api_call</code> list - Return the corresponding team roles</li> </ul> <p></p>"},{"location":"grafana_api/rbac/#add_team_role_assignment","title":"add_team_role_assignment","text":"<pre><code>def add_team_role_assignment(team_id: int, role_uid: str)\n</code></pre> <p>The method includes a functionality to assign a role to a specific team</p> <p>Args:     team_id (int): Specify the corresponding team_id of the team     role_uid (str): Specify the corresponding uid of the role</p> <p>Required Permissions:     Action: teams.roles:add     Scope: permissions:type:delegate</p> <p>Raises:     ValueError: Missed specifying a necessary value     Exception: Unspecified error by executing the API call</p> <p>Returns:     None</p> <p></p>"},{"location":"grafana_api/rbac/#remove_team_role_assignment","title":"remove_team_role_assignment","text":"<pre><code>def remove_team_role_assignment(team_id: int, role_uid: str)\n</code></pre> <p>The method includes a functionality to revoke a role to a specific team</p> <p>Args:     team_id (int): Specify the corresponding team_id of the team     role_uid (str): Specify the corresponding uid of the role</p> <p>Required Permissions:     Action: teams.roles:remove     Scope: permissions:type:delegate</p> <p>Raises:     ValueError: Missed specifying a necessary value     Exception: Unspecified error by executing the API call</p> <p>Returns:     None</p> <p></p>"},{"location":"grafana_api/rbac/#update_team_role_assignments","title":"update_team_role_assignments","text":"<pre><code>def update_team_role_assignments(team_id: int,\n                                 role_uids: list,\n                                 include_hidden_roles: bool = False)\n</code></pre> <p>The method includes a functionality to update the service account role assignments to match the provided set of uid's. This will remove any assigned roles that aren\u2019t in the request and add roles that are in the set but are not already assigned to the user</p> <p>Args:     team_id (int): Specify the corresponding team_id of the team     role_uids (list): Specify the corresponding uids of the role     include_hidden_roles (bool): Specify if the output contains the hidden roles or not (default False)</p> <p>Required Permissions:     Action: teams.roles:add, teams.roles:remove     Scope: permissions:type:delegate</p> <p>Raises:     ValueError: Missed specifying a necessary value     Exception: Unspecified error by executing the API call</p> <p>Returns:     None</p> <p></p>"},{"location":"grafana_api/rbac/#reset_basic_roles_to_their_default","title":"reset_basic_roles_to_their_default","text":"<pre><code>def reset_basic_roles_to_their_default()\n</code></pre> <p>The method includes a functionality to reset basic roles permissions to their default</p> <p>Required Permissions:     Action: roles:write     Scope: permissions:type:escalate</p> <p>Raises:     Exception: Unspecified error by executing the API call</p> <p>Returns:     None</p>"},{"location":"grafana_api/reporting/","title":"Table of Contents","text":"<ul> <li>reporting</li> <li>Reporting<ul> <li>get_reports</li> <li>get_report_by_id</li> <li>create_report</li> <li>update_report</li> <li>delete_report</li> <li>send_report</li> <li>get_report_branding_settings</li> <li>save_report_branding_settings</li> <li>send_report_test_email</li> </ul> </li> </ul>"},{"location":"grafana_api/reporting/#reporting","title":"reporting","text":""},{"location":"grafana_api/reporting/#reporting-objects","title":"Reporting Objects","text":"<pre><code>class Reporting()\n</code></pre> <p>The class includes all necessary methods to access the Grafana reporting API endpoints. Be aware that the functionality is a Grafana ENTERPRISE v7.0+ feature</p> <p>HINT: Note Grafana Enterprise API need required permissions if fine-grained access control is enabled</p> <p>Arguments:</p> <ul> <li><code>grafana_api_model</code> APIModel - Inject a Grafana API model object that includes all necessary values and information</li> </ul> <p>Attributes:</p> <ul> <li><code>grafana_api_model</code> APIModel - This is where we store the grafana_api_model</li> </ul> <p></p>"},{"location":"grafana_api/reporting/#get_reports","title":"get_reports","text":"<pre><code>def get_reports() -&gt; list\n</code></pre> <p>The method includes a functionality to get all reports</p> <p>Required Permissions: Action: reports:read Scope: [reports:, reports:id:]</p> <p>Raises:</p> <ul> <li><code>Exception</code> - Unspecified error by executing the API call</li> </ul> <p>Returns:</p> <ul> <li><code>api_call</code> list - Returns all reports</li> </ul> <p></p>"},{"location":"grafana_api/reporting/#get_report_by_id","title":"get_report_by_id","text":"<pre><code>def get_report_by_id(id: int) -&gt; dict\n</code></pre> <p>The method includes a functionality to get a report specified by the report id</p> <p>Arguments:</p> <ul> <li><code>id</code> int - Specify the report id</li> </ul> <p>Required Permissions: - <code>Action</code> - reports:read - <code>Scope</code> - [reports:, reports:id:, reports:id:] <p>Raises:</p> <ul> <li><code>ValueError</code> - Missed specifying a necessary value</li> <li><code>Exception</code> - Unspecified error by executing the API call</li> </ul> <p>Returns:</p> <ul> <li><code>api_call</code> dict - Returns the report</li> </ul> <p></p>"},{"location":"grafana_api/reporting/#create_report","title":"create_report","text":"<pre><code>def create_report(report: Report) -&gt; int\n</code></pre> <p>The method includes a functionality to create a report</p> <p>Arguments:</p> <ul> <li><code>report</code> Report - Specify the report object</li> </ul> <p>Required Permissions: - <code>Action</code> - reports:create - <code>Scope</code> - N/A</p> <p>Raises:</p> <ul> <li><code>ValueError</code> - Missed specifying a necessary value</li> <li><code>Exception</code> - Unspecified error by executing the API call</li> </ul> <p>Returns:</p> <ul> <li><code>api_call</code> int - Returns the report id</li> </ul> <p></p>"},{"location":"grafana_api/reporting/#update_report","title":"update_report","text":"<pre><code>def update_report(id: int, report: Report)\n</code></pre> <p>The method includes a functionality to update a report</p> <p>Arguments:</p> <ul> <li><code>id</code> int - Specify the report id</li> <li><code>report</code> Report - Specify the report object</li> </ul> <p>Required Permissions: - <code>Action</code> - reports:write - <code>Scope</code> - [reports:, reports:id:, reports:id:] <p>Raises:</p> <ul> <li><code>ValueError</code> - Missed specifying a necessary value</li> <li><code>Exception</code> - Unspecified error by executing the API call</li> </ul> <p>Returns:</p> <p>None</p> <p></p>"},{"location":"grafana_api/reporting/#delete_report","title":"delete_report","text":"<pre><code>def delete_report(id: int)\n</code></pre> <p>The method includes a functionality to delete a report specified by the report id</p> <p>Arguments:</p> <ul> <li><code>id</code> int - Specify the report id</li> </ul> <p>Required Permissions: - <code>Action</code> - reports:delete - <code>Scope</code> - [reports:, reports:id:, reports:id:] <p>Raises:</p> <ul> <li><code>ValueError</code> - Missed specifying a necessary value</li> <li><code>Exception</code> - Unspecified error by executing the API call</li> </ul> <p>Returns:</p> <p>None</p> <p></p>"},{"location":"grafana_api/reporting/#send_report","title":"send_report","text":"<pre><code>def send_report(id: int,\n                emails: str = None,\n                use_emails_from_report: bool = None)\n</code></pre> <p>The method includes a functionality to send a report to a specified email addresses</p> <p>Arguments:</p> <ul> <li><code>id</code> int - Specify the id of forwarded report. It is the same as in the URL when editing a report, not to be confused with the id of the dashboard.</li> <li><code>emails</code> str - Specify the comma-separated list of emails to which to send the report to. Overrides the emails from the report. Required if useEmailsFromReport is not present (default None)</li> <li><code>use_emails_from_report</code> bool - Specify if the emails inside the report should be used. Required if emails is not present (default None)</li> </ul> <p>Required Permissions: - <code>Action</code> - reports:send - <code>Scope</code> - N/A</p> <p>Raises:</p> <ul> <li><code>ValueError</code> - Missed specifying a necessary value</li> <li><code>Exception</code> - Unspecified error by executing the API call</li> </ul> <p>Returns:</p> <p>None</p> <p></p>"},{"location":"grafana_api/reporting/#get_report_branding_settings","title":"get_report_branding_settings","text":"<pre><code>def get_report_branding_settings() -&gt; dict\n</code></pre> <p>The method includes a functionality to get the report branding settings</p> <p>Required Permissions: Action: reports.settings:read Scope: N/A</p> <p>Raises:</p> <ul> <li><code>Exception</code> - Unspecified error by executing the API call</li> </ul> <p>Returns:</p> <ul> <li><code>api_call</code> dict - Returns the report branding settings</li> </ul> <p></p>"},{"location":"grafana_api/reporting/#save_report_branding_settings","title":"save_report_branding_settings","text":"<pre><code>def save_report_branding_settings(branding_settings: ReportBrandingSettings)\n</code></pre> <p>The method includes a functionality to save the report branding settings</p> <p>Arguments:</p> <ul> <li><code>branding_settings</code> ReportBrandingSettings - Specify the report branding settings object.</li> </ul> <p>Required Permissions: - <code>Action</code> - reports.settings:write - <code>Scope</code> - N/A</p> <p>Raises:</p> <ul> <li><code>ValueError</code> - Missed specifying a necessary value</li> <li><code>Exception</code> - Unspecified error by executing the API call</li> </ul> <p>Returns:</p> <p>None</p> <p></p>"},{"location":"grafana_api/reporting/#send_report_test_email","title":"send_report_test_email","text":"<pre><code>def send_report_test_email(report: Report)\n</code></pre> <p>The method includes a functionality to send a test report email</p> <p>Arguments:</p> <ul> <li><code>report</code> Report - Specify the report object</li> </ul> <p>Required Permissions: - <code>Action</code> - reports: send - <code>Scope</code> - N/A</p> <p>Raises:</p> <ul> <li><code>ValueError</code> - Missed specifying a necessary value</li> <li><code>Exception</code> - Unspecified error by executing the API call</li> </ul> <p>Returns:</p> <p>None</p>"},{"location":"grafana_api/search/","title":"Table of Contents","text":"<ul> <li>search</li> <li>Search<ul> <li>search</li> </ul> </li> </ul>"},{"location":"grafana_api/search/#search","title":"search","text":""},{"location":"grafana_api/search/#search-objects","title":"Search Objects","text":"<pre><code>class Search()\n</code></pre> <p>The class includes all necessary methods to access the Grafana search API endpoints</p> <p>Arguments:</p> <ul> <li><code>grafana_api_model</code> APIModel - Inject a Grafana API model object that includes all necessary values and information</li> </ul> <p>Attributes:</p> <ul> <li><code>grafana_api_model</code> APIModel - This is where we store the grafana_api_model</li> </ul> <p></p>"},{"location":"grafana_api/search/#search_1","title":"search","text":"<pre><code>def search(search_query: str) -&gt; list\n</code></pre> <p>The method includes a functionality to execute a custom query</p> <p>Arguments:</p> <ul> <li><code>search_query</code> str - Specify the inserted query as string</li> </ul> <p>Raises:</p> <ul> <li><code>ValueError</code> - Missed specifying a necessary value</li> <li><code>Exception</code> - Unspecified error by executing the API call</li> </ul> <p>Returns:</p> <ul> <li><code>api_call</code> list - Returns the list of query the results</li> </ul>"},{"location":"grafana_api/service-account/","title":"Table of Contents","text":"<ul> <li>service_account</li> <li>ServiceAccount<ul> <li>search_service_account</li> <li>get_service_account_by_id</li> <li>create_service_account</li> <li>update_service_account</li> <li>delete_service_account</li> <li>get_service_account_tokens_by_id</li> <li>create_service_account_token_by_id</li> <li>delete_service_account_token_by_id</li> <li>migrate_api_keys_to_service_accounts</li> <li>migrate_api_key_to_service_account</li> <li>get_service_account_migration_status</li> <li>hide_the_api_keys_tab</li> <li>revert_service_account_token_to_api_key</li> </ul> </li> </ul>"},{"location":"grafana_api/service-account/#service_account","title":"service_account","text":""},{"location":"grafana_api/service-account/#serviceaccount-objects","title":"ServiceAccount Objects","text":"<pre><code>class ServiceAccount()\n</code></pre> <p>The class includes all necessary methods to access the Grafana service account API endpoints. Be aware that the functionality inside the class only works with basic authentication (username and password) and that the authenticated user is a Grafana Admin</p> <p>Arguments:</p> <ul> <li><code>grafana_api_model</code> APIModel - Inject a Grafana API model object that includes all necessary values and information</li> </ul> <p>Attributes:</p> <ul> <li><code>grafana_api_model</code> APIModel - This is where we store the grafana_api_model</li> </ul> <p></p>"},{"location":"grafana_api/service-account/#search_service_account","title":"search_service_account","text":"<pre><code>def search_service_account(results_per_page: int = 1000,\n                           pages: int = 1,\n                           query: str = None) -&gt; dict\n</code></pre> <p>The method includes a functionality to get the service accounts specified by the optional pagination functionality</p> <p>Required Permissions: Action: serviceaccounts:read Scope: global:serviceaccounts:*</p> <p>Arguments:</p> <ul> <li><code>results_per_page</code> int - Specify the results_per_page as integer (default 1000)</li> <li><code>pages</code> int - Specify the pages as integer (default 1)</li> <li><code>query</code> str - Specify the query (default None)</li> </ul> <p>Raises:</p> <ul> <li><code>Exception</code> - Unspecified error by executing the API call</li> </ul> <p>Returns:</p> <ul> <li><code>api_call</code> dict - Returns the service accounts</li> </ul> <p></p>"},{"location":"grafana_api/service-account/#get_service_account_by_id","title":"get_service_account_by_id","text":"<pre><code>def get_service_account_by_id(id: int) -&gt; dict\n</code></pre> <p>The method includes a functionality to get a service account specified by the id</p> <p>Required Permissions: Action: serviceaccounts:read Scope: serviceaccounts:*</p> <p>Arguments:</p> <ul> <li><code>id</code> int - Specify the id of the service account</li> </ul> <p>Raises:</p> <ul> <li><code>ValueError</code> - Missed specifying a necessary value</li> <li><code>Exception</code> - Unspecified error by executing the API call</li> </ul> <p>Returns:</p> <ul> <li><code>api_call</code> dict - Returns the service account</li> </ul> <p></p>"},{"location":"grafana_api/service-account/#create_service_account","title":"create_service_account","text":"<pre><code>def create_service_account(name: str, role: str) -&gt; dict\n</code></pre> <p>The method includes a functionality to create a service account</p> <p>Required Permissions: Action: serviceaccounts:write Scope: serviceaccounts:*</p> <p>Arguments:</p> <ul> <li><code>name</code> str - Specify the name of the service account</li> <li><code>role</code> str - Specify the role of the service account</li> </ul> <p>Raises:</p> <ul> <li><code>ValueError</code> - Missed specifying a necessary value</li> <li><code>Exception</code> - Unspecified error by executing the API call</li> </ul> <p>Returns:</p> <ul> <li><code>api_call</code> dict - Returns the created service account</li> </ul> <p></p>"},{"location":"grafana_api/service-account/#update_service_account","title":"update_service_account","text":"<pre><code>def update_service_account(id: int, name: str, role: str) -&gt; dict\n</code></pre> <p>The method includes a functionality to update a service account specified by the id, name and role</p> <p>Required Permissions: Action: serviceaccounts:write Scope: serviceaccounts:*</p> <p>Arguments:</p> <ul> <li><code>id</code> int - Specify the id of the service account</li> <li><code>name</code> str - Specify the name of the service account</li> <li><code>role</code> str - Specify the role of the service account</li> </ul> <p>Raises:</p> <ul> <li><code>ValueError</code> - Missed specifying a necessary value</li> <li><code>Exception</code> - Unspecified error by executing the API call</li> </ul> <p>Returns:</p> <ul> <li><code>api_call</code> dict - Returns the service account</li> </ul> <p></p>"},{"location":"grafana_api/service-account/#delete_service_account","title":"delete_service_account","text":"<pre><code>def delete_service_account(id: int)\n</code></pre> <p>The method includes a functionality to delete a service account specified by the id</p> <p>Required Permissions: Action: serviceaccounts:delete Scope: serviceaccounts:id:*</p> <p>Arguments:</p> <ul> <li><code>id</code> int - Specify the id of the service account</li> </ul> <p>Raises:</p> <ul> <li><code>ValueError</code> - Missed specifying a necessary value</li> <li><code>Exception</code> - Unspecified error by executing the API call</li> </ul> <p>Returns:</p> <p>None</p> <p></p>"},{"location":"grafana_api/service-account/#get_service_account_tokens_by_id","title":"get_service_account_tokens_by_id","text":"<pre><code>def get_service_account_tokens_by_id(id: int) -&gt; list\n</code></pre> <p>The method includes a functionality to get a service account tokens specified by the id</p> <p>Required Permissions: Action: serviceaccounts:read Scope: serviceaccounts:*</p> <p>Arguments:</p> <ul> <li><code>id</code> int - Specify the id of the service account</li> </ul> <p>Raises:</p> <ul> <li><code>ValueError</code> - Missed specifying a necessary value</li> <li><code>Exception</code> - Unspecified error by executing the API call</li> </ul> <p>Returns:</p> <ul> <li><code>api_call</code> list - Returns the service account tokens</li> </ul> <p></p>"},{"location":"grafana_api/service-account/#create_service_account_token_by_id","title":"create_service_account_token_by_id","text":"<pre><code>def create_service_account_token_by_id(id: int, name: str, role: str) -&gt; dict\n</code></pre> <p>The method includes a functionality to create a service account token specified by the id</p> <p>Required Permissions: Action: serviceaccounts:write Scope: serviceaccounts:*</p> <p>Arguments:</p> <ul> <li><code>id</code> int - Specify the id of the service account</li> <li><code>name</code> str - Specify the name of the service account</li> <li><code>role</code> str - Specify the role of the service account</li> </ul> <p>Raises:</p> <ul> <li><code>ValueError</code> - Missed specifying a necessary value</li> <li><code>Exception</code> - Unspecified error by executing the API call</li> </ul> <p>Returns:</p> <ul> <li><code>api_call</code> dict - Returns the service account token</li> </ul> <p></p>"},{"location":"grafana_api/service-account/#delete_service_account_token_by_id","title":"delete_service_account_token_by_id","text":"<pre><code>def delete_service_account_token_by_id(id: int, token_id: int)\n</code></pre> <p>The method includes a functionality to delete a service account token specified by the id</p> <p>Required Permissions: Action: serviceaccounts:write Scope: serviceaccounts:*</p> <p>Arguments:</p> <ul> <li><code>id</code> int - Specify the id of the service account   token_id (int):</li> </ul> <p>Raises:</p> <ul> <li><code>ValueError</code> - Missed specifying a necessary value</li> <li><code>Exception</code> - Unspecified error by executing the API call</li> </ul> <p>Returns:</p> <p>None</p> <p></p>"},{"location":"grafana_api/service-account/#migrate_api_keys_to_service_accounts","title":"migrate_api_keys_to_service_accounts","text":"<pre><code>def migrate_api_keys_to_service_accounts()\n</code></pre> <p>The method includes a functionality to migrate all api keys to service accounts</p> <p>Required Permissions: Action: serviceaccounts:write Scope: serviceaccounts:*</p> <p>Raises:</p> <ul> <li><code>Exception</code> - Unspecified error by executing the API call</li> </ul> <p>Returns:</p> <p>None</p> <p></p>"},{"location":"grafana_api/service-account/#migrate_api_key_to_service_account","title":"migrate_api_key_to_service_account","text":"<pre><code>def migrate_api_key_to_service_account(key_id: int)\n</code></pre> <p>The method includes a functionality to migrate an api key to a service account specified by the key id</p> <p>Required Permissions: Action: serviceaccounts:write Scope: serviceaccounts:*</p> <p>Arguments:</p> <ul> <li><code>key_id</code> int - Specify the api key id of the api key</li> </ul> <p>Raises:</p> <ul> <li><code>ValueError</code> - Missed specifying a necessary value</li> <li><code>Exception</code> - Unspecified error by executing the API call</li> </ul> <p>Returns:</p> <p>None</p> <p></p>"},{"location":"grafana_api/service-account/#get_service_account_migration_status","title":"get_service_account_migration_status","text":"<pre><code>def get_service_account_migration_status() -&gt; bool\n</code></pre> <p>The method includes a functionality to get the corresponding api key migration status</p> <p>Required Permissions: Action: serviceaccounts:read Scope: serviceaccounts:*</p> <p>Raises:</p> <ul> <li><code>Exception</code> - Unspecified error by executing the API call</li> </ul> <p>Returns:</p> <ul> <li><code>api_call</code> list - Returns the api key migration status</li> </ul> <p></p>"},{"location":"grafana_api/service-account/#hide_the_api_keys_tab","title":"hide_the_api_keys_tab","text":"<pre><code>def hide_the_api_keys_tab()\n</code></pre> <p>The method includes a functionality to hide the api keys tab inside the UI</p> <p>Required Permissions: Action: serviceaccounts:write Scope: serviceaccounts:*</p> <p>Raises:</p> <ul> <li><code>Exception</code> - Unspecified error by executing the API call</li> </ul> <p>Returns:</p> <p>None</p> <p></p>"},{"location":"grafana_api/service-account/#revert_service_account_token_to_api_key","title":"revert_service_account_token_to_api_key","text":"<pre><code>def revert_service_account_token_to_api_key(id: int, key_id: int)\n</code></pre> <p>The method includes a functionality to revert a service account and transform it to the legacy api token specified by the service account id and the key id</p> <p>Required Permissions: Action: serviceaccounts:delete Scope: serviceaccounts:id:*</p> <p>Arguments:</p> <ul> <li><code>id</code> int - Specify the id of the service account</li> <li><code>key_id</code> int - Specify the api key id of the api key</li> </ul> <p>Raises:</p> <ul> <li><code>ValueError</code> - Missed specifying a necessary value</li> <li><code>Exception</code> - Unspecified error by executing the API call</li> </ul> <p>Returns:</p> <p>None</p>"},{"location":"grafana_api/short-url/","title":"Table of Contents","text":"<ul> <li>short_url</li> <li>ShortUrl<ul> <li>create_short_url</li> </ul> </li> </ul>"},{"location":"grafana_api/short-url/#short_url","title":"short_url","text":""},{"location":"grafana_api/short-url/#shorturl-objects","title":"ShortUrl Objects","text":"<pre><code>class ShortUrl()\n</code></pre> <p>The class includes all necessary methods to access the Grafana short url API endpoint</p> <p>Arguments:</p> <ul> <li><code>grafana_api_model</code> APIModel - Inject a Grafana API model object that includes all necessary values and information</li> </ul> <p>Attributes:</p> <ul> <li><code>grafana_api_model</code> APIModel - This is where we store the grafana_api_model</li> </ul> <p></p>"},{"location":"grafana_api/short-url/#create_short_url","title":"create_short_url","text":"<pre><code>def create_short_url(path: str)\n</code></pre> <p>The method includes a functionality to create a short link for a specific dashboard</p> <p>Arguments:</p> <ul> <li><code>path</code> str - Specify the corresponding dashboard path</li> </ul> <p>Raises:</p> <ul> <li><code>ValueError</code> - Missed specifying a necessary value</li> <li><code>Exception</code> - Unspecified error by executing the API call</li> </ul> <p>Returns:</p> <ul> <li><code>api_call</code> dict - Returns the uid and the url of the newly generated link</li> </ul>"},{"location":"grafana_api/snapshot/","title":"Table of Contents","text":"<ul> <li>snapshot</li> <li>Snapshot<ul> <li>create_new_snapshot</li> <li>get_snapshots</li> <li>get_snapshot_by_key</li> <li>delete_snapshot_by_key</li> <li>delete_snapshot_by_delete_key</li> </ul> </li> </ul>"},{"location":"grafana_api/snapshot/#snapshot","title":"snapshot","text":""},{"location":"grafana_api/snapshot/#snapshot-objects","title":"Snapshot Objects","text":"<pre><code>class Snapshot()\n</code></pre> <p>The class includes all necessary methods to access the Grafana snapshot API endpoints</p> <p>Arguments:</p> <ul> <li><code>grafana_api_model</code> APIModel - Inject a Grafana API model object that includes all necessary values and information</li> </ul> <p>Attributes:</p> <ul> <li><code>grafana_api_model</code> APIModel - This is where we store the grafana_api_model</li> </ul> <p></p>"},{"location":"grafana_api/snapshot/#create_new_snapshot","title":"create_new_snapshot","text":"<pre><code>def create_new_snapshot(dashboard_json: dict,\n                        name: str = None,\n                        expires: int = None,\n                        external: bool = False,\n                        key: str = None,\n                        delete_key: str = None) -&gt; dict\n</code></pre> <p>The method includes a functionality to create the specified dashboard snapshot</p> <p>Arguments:</p> <ul> <li><code>dashboard_json</code> dict - Specify the dashboard_json of the dashboard</li> <li><code>name</code> str - Specify the optional name of the dashboard snapshot</li> <li><code>expires</code> int - Specify the optional expiry time as seconds of the dashboard snapshot. 3600 is 1 hour, 86400 is 1 day (default never expired)</li> <li><code>external</code> bool - Specify the optional external server rather than locally (default False)</li> <li><code>key</code> str - Specify the optional unique key. Required if external is true.</li> <li><code>delete_key</code> str - Specify the optional unique key used to delete the snapshot. It is different from the key so that only the creator can delete the snapshot. Required if external is true.</li> </ul> <p>Raises:</p> <ul> <li><code>ValueError</code> - Missed specifying a necessary value</li> <li><code>Exception</code> - Unspecified error by executing the API call</li> </ul> <p>Returns:</p> <ul> <li><code>api_call</code> dict - Returns the snapshot information of the dashboard</li> </ul> <p></p>"},{"location":"grafana_api/snapshot/#get_snapshots","title":"get_snapshots","text":"<pre><code>def get_snapshots() -&gt; list\n</code></pre> <p>The method includes a functionality to list all dashboard snapshots</p> <p>Raises:</p> <ul> <li><code>Exception</code> - Unspecified error by executing the API call</li> </ul> <p>Returns:</p> <ul> <li><code>api_call</code> list - Returns all dashboard snapshots</li> </ul> <p></p>"},{"location":"grafana_api/snapshot/#get_snapshot_by_key","title":"get_snapshot_by_key","text":"<pre><code>def get_snapshot_by_key(key: str) -&gt; dict\n</code></pre> <p>The method includes a functionality to get a specific dashboard snapshot by the key</p> <p>Arguments:</p> <ul> <li><code>key</code> str - Specify the key of the dashboard snapshot</li> </ul> <p>Raises:</p> <ul> <li><code>ValueError</code> - Missed specifying a necessary value</li> <li><code>Exception</code> - Unspecified error by executing the API call</li> </ul> <p>Returns:</p> <ul> <li><code>api_call</code> dict - Returns a specific dashboard snapshot</li> </ul> <p></p>"},{"location":"grafana_api/snapshot/#delete_snapshot_by_key","title":"delete_snapshot_by_key","text":"<pre><code>def delete_snapshot_by_key(key: str)\n</code></pre> <p>The method includes a functionality to delete a specific dashboard snapshot by the key</p> <p>Arguments:</p> <ul> <li><code>key</code> str - Specify the key of the dashboard snapshot</li> </ul> <p>Raises:</p> <ul> <li><code>ValueError</code> - Missed specifying a necessary value</li> <li><code>Exception</code> - Unspecified error by executing the API call</li> </ul> <p>Returns:</p> <p>None</p> <p></p>"},{"location":"grafana_api/snapshot/#delete_snapshot_by_delete_key","title":"delete_snapshot_by_delete_key","text":"<pre><code>def delete_snapshot_by_delete_key(delete_key: str)\n</code></pre> <p>The method includes a functionality to delete a specific dashboard snapshot by the delete_key</p> <p>Arguments:</p> <ul> <li><code>delete_key</code> str - Specify the delete_key of the dashboard snapshot</li> </ul> <p>Raises:</p> <ul> <li><code>ValueError</code> - Missed specifying a necessary value</li> <li><code>Exception</code> - Unspecified error by executing the API call</li> </ul> <p>Returns:</p> <p>None</p>"},{"location":"grafana_api/sso-settings/","title":"Table of Contents","text":"<ul> <li>sso_settings</li> <li>SSOSettings<ul> <li>get_sso_settings</li> <li>get_sso_settings_by_provider</li> <li>update_sso_settings</li> <li>delete_sso_settings</li> </ul> </li> </ul>"},{"location":"grafana_api/sso-settings/#sso_settings","title":"sso_settings","text":""},{"location":"grafana_api/sso-settings/#ssosettings-objects","title":"SSOSettings Objects","text":"<pre><code>class SSOSettings()\n</code></pre> <p>The class includes all necessary methods to access the Grafana sso settings API endpoints</p> <p>Arguments:</p> <ul> <li><code>grafana_api_model</code> APIModel - Inject a Grafana API model object that includes all necessary values and information</li> </ul> <p>Attributes:</p> <ul> <li><code>grafana_api_model</code> APIModel - This is where we store the grafana_api_model</li> </ul> <p></p>"},{"location":"grafana_api/sso-settings/#get_sso_settings","title":"get_sso_settings","text":"<pre><code>def get_sso_settings() -&gt; list\n</code></pre> <p>The method includes a functionality to get the SSO settings for all providers</p> <p>Required Permissions: Action: settings:read Scope: settings:auth.{provider}:*</p> <p>Raises:</p> <ul> <li><code>Exception</code> - Unspecified error by executing the API call</li> </ul> <p>Returns:</p> <ul> <li><code>api_call</code> list - Returns the all SSO settings</li> </ul> <p></p>"},{"location":"grafana_api/sso-settings/#get_sso_settings_by_provider","title":"get_sso_settings_by_provider","text":"<pre><code>def get_sso_settings_by_provider(provider: str) -&gt; dict\n</code></pre> <p>The method includes a functionality to get the SSO settings for the specified provider</p> <p>Arguments:</p> <ul> <li><code>provider</code> str - Specify the provider</li> </ul> <p>Required Permissions: - <code>Action</code> - settings:read - <code>Scope</code> - settings:auth.{provider}:*</p> <p>Raises:</p> <ul> <li><code>ValueError</code> - Missed specifying a necessary value</li> <li><code>Exception</code> - Unspecified error by executing the API call</li> </ul> <p>Returns:</p> <ul> <li><code>api_call</code> dict - Returns the corresponding provider SSO settings</li> </ul> <p></p>"},{"location":"grafana_api/sso-settings/#update_sso_settings","title":"update_sso_settings","text":"<pre><code>def update_sso_settings(provider: str, sso_setting: SSOSetting)\n</code></pre> <p>The method includes a functionality to update the SSO settings specified by the provider</p> <p>Arguments:</p> <ul> <li><code>provider</code> str - Specify the provider</li> <li><code>sso_setting</code> SSOSetting - Specify the SSO setting</li> </ul> <p>Required Permissions: - <code>Action</code> - settings:write - <code>Scope</code> - settings:auth.{provider}:*</p> <p>Raises:</p> <ul> <li><code>ValueError</code> - Missed specifying a necessary value</li> <li><code>Exception</code> - Unspecified error by executing the API call</li> </ul> <p>Returns:</p> <p>None</p> <p></p>"},{"location":"grafana_api/sso-settings/#delete_sso_settings","title":"delete_sso_settings","text":"<pre><code>def delete_sso_settings(provider: str)\n</code></pre> <p>The method includes a functionality to delete the SSO settings specified by the provider</p> <p>Arguments:</p> <ul> <li><code>provider</code> str - Specify the provider</li> </ul> <p>Required Permissions: - <code>Action</code> - settings:write - <code>Scope</code> - settings:auth.{provider}:*</p> <p>Raises:</p> <ul> <li><code>ValueError</code> - Missed specifying a necessary value</li> <li><code>Exception</code> - Unspecified error by executing the API call</li> </ul> <p>Returns:</p> <p>None</p>"},{"location":"grafana_api/team/","title":"Table of Contents","text":"<ul> <li>team</li> <li>Team<ul> <li>search_team</li> <li>get_team_by_id</li> <li>add_team</li> <li>update_team</li> <li>delete_team_by_id</li> <li>get_team_members</li> <li>add_team_member</li> <li>delete_team_member</li> <li>get_team_preferences</li> <li>update_team_preferences</li> <li>get_external_groups</li> <li>add_external_group</li> <li>remove_external_group</li> </ul> </li> </ul>"},{"location":"grafana_api/team/#team","title":"team","text":""},{"location":"grafana_api/team/#team-objects","title":"Team Objects","text":"<pre><code>class Team()\n</code></pre> <p>The class includes all necessary methods to access the Grafana team API endpoints. Be aware that all functionalities inside the class only working with the corresponding access rights, please check the following page for details: https://grafana.com/docs/grafana/latest/http_api/team/<code>team</code>-api &amp; https://grafana.com/docs/grafana/latest/developers/http_api/team_sync/<code>team</code>-sync-api</p> <p>HINT: Note Grafana Enterprise API need required permissions if fine-grained access control is enabled</p> <p>Arguments:</p> <ul> <li><code>grafana_api_model</code> APIModel - Inject a Grafana API model object that includes all necessary values and information</li> </ul> <p>Attributes:</p> <ul> <li><code>grafana_api_model</code> APIModel - This is where we store the grafana_api_model</li> </ul> <p></p>"},{"location":"grafana_api/team/#search_team","title":"search_team","text":"<pre><code>def search_team(results_per_page: int = 1000,\n                pages: int = 1,\n                query: str = None) -&gt; dict\n</code></pre> <p>The method includes a functionality to get the organization teams specified by the optional pagination functionality</p> <p>Required Permissions: Action: teams:read Scope: teams:*</p> <p>Arguments:</p> <ul> <li><code>results_per_page</code> int - Specify the results_per_page as integer (default 1000)</li> <li><code>pages</code> int - Specify the pages as integer (default 1)</li> <li><code>query</code> str - Specify the query (default None)</li> </ul> <p>Raises:</p> <ul> <li><code>Exception</code> - Unspecified error by executing the API call</li> </ul> <p>Returns:</p> <ul> <li><code>api_call</code> dict - Returns the organization teams</li> </ul> <p></p>"},{"location":"grafana_api/team/#get_team_by_id","title":"get_team_by_id","text":"<pre><code>def get_team_by_id(id: int) -&gt; dict\n</code></pre> <p>The method includes a functionality to get the organization team specified by the id</p> <p>Required Permissions: Action: teams:read Scope: teams:*</p> <p>Arguments:</p> <ul> <li><code>id</code> int - Specify the id of the team</li> </ul> <p>Raises:</p> <ul> <li><code>ValueError</code> - Missed specifying a necessary value</li> <li><code>Exception</code> - Unspecified error by executing the API call</li> </ul> <p>Returns:</p> <ul> <li><code>api_call</code> dict - Returns the organization team</li> </ul> <p></p>"},{"location":"grafana_api/team/#add_team","title":"add_team","text":"<pre><code>def add_team(team: TeamObject) -&gt; int\n</code></pre> <p>The method includes a functionality to add an organization team specified by the TeamObject</p> <p>Required Permissions: Action: teams:create Scope: N/A</p> <p>Arguments:</p> <ul> <li><code>team</code> TeamObject - Specify the team</li> </ul> <p>Raises:</p> <ul> <li><code>ValueError</code> - Missed specifying a necessary value</li> <li><code>Exception</code> - Unspecified error by executing the API call</li> </ul> <p>Returns:</p> <ul> <li><code>team_id</code> int - Returns the team id</li> </ul> <p></p>"},{"location":"grafana_api/team/#update_team","title":"update_team","text":"<pre><code>def update_team(id: int, name: str, email: str)\n</code></pre> <p>The method includes a functionality to update an organization team specified by the team_id, name and email</p> <p>Required Permissions: Action: teams:write Scope: teams:*</p> <p>Arguments:</p> <ul> <li><code>id</code> int - Specify the team id</li> <li><code>name</code> str - Specify the team name</li> <li><code>email</code> str - Specify the team email</li> </ul> <p>Raises:</p> <ul> <li><code>ValueError</code> - Missed specifying a necessary value</li> <li><code>Exception</code> - Unspecified error by executing the API call</li> </ul> <p>Returns:</p> <p>None</p> <p></p>"},{"location":"grafana_api/team/#delete_team_by_id","title":"delete_team_by_id","text":"<pre><code>def delete_team_by_id(id: int)\n</code></pre> <p>The method includes a functionality to delete an organization team specified by the team_id</p> <p>Required Permissions: Action: teams:delete Scope: teams:*</p> <p>Arguments:</p> <ul> <li><code>id</code> int - Specify the team id</li> </ul> <p>Raises:</p> <ul> <li><code>ValueError</code> - Missed specifying a necessary value</li> <li><code>Exception</code> - Unspecified error by executing the API call</li> </ul> <p>Returns:</p> <p>None</p> <p></p>"},{"location":"grafana_api/team/#get_team_members","title":"get_team_members","text":"<pre><code>def get_team_members(id: int) -&gt; list\n</code></pre> <p>The method includes a functionality to get all organization team users specified by the team_id</p> <p>Required Permissions: Action: teams.permissions:read Scope: teams:*</p> <p>Arguments:</p> <ul> <li><code>id</code> int - Specify the team id</li> </ul> <p>Raises:</p> <ul> <li><code>ValueError</code> - Missed specifying a necessary value</li> <li><code>Exception</code> - Unspecified error by executing the API call</li> </ul> <p>Returns:</p> <ul> <li><code>api_call</code> list - Returns the organization team members</li> </ul> <p></p>"},{"location":"grafana_api/team/#add_team_member","title":"add_team_member","text":"<pre><code>def add_team_member(id: int, user_id: int)\n</code></pre> <p>The method includes a functionality to add an organization team user specified by the team_id and the user_id</p> <p>Required Permissions: Action: teams.permissions:write Scope: teams:*</p> <p>Arguments:</p> <ul> <li><code>id</code> int - Specify the team id</li> <li><code>user_id</code> int - Specify the user id</li> </ul> <p>Raises:</p> <ul> <li><code>ValueError</code> - Missed specifying a necessary value</li> <li><code>Exception</code> - Unspecified error by executing the API call</li> </ul> <p>Returns:</p> <p>None</p> <p></p>"},{"location":"grafana_api/team/#delete_team_member","title":"delete_team_member","text":"<pre><code>def delete_team_member(id: int, user_id: int)\n</code></pre> <p>The method includes a functionality to delete an organization team user specified by the team_id and the user_id</p> <p>Required Permissions: Action: teams.permissions:write Scope: teams:*</p> <p>Arguments:</p> <ul> <li><code>id</code> int - Specify the team id</li> <li><code>user_id</code> int - Specify the user id</li> </ul> <p>Raises:</p> <ul> <li><code>ValueError</code> - Missed specifying a necessary value</li> <li><code>Exception</code> - Unspecified error by executing the API call</li> </ul> <p>Returns:</p> <p>None</p> <p></p>"},{"location":"grafana_api/team/#get_team_preferences","title":"get_team_preferences","text":"<pre><code>def get_team_preferences(id: int) -&gt; dict\n</code></pre> <p>The method includes a functionality to get the organization team preferences specified by the team_id</p> <p>Required Permissions: Action: teams:read Scope: teams:*</p> <p>Arguments:</p> <ul> <li><code>id</code> int - Specify the team id</li> </ul> <p>Raises:</p> <ul> <li><code>ValueError</code> - Missed specifying a necessary value</li> <li><code>Exception</code> - Unspecified error by executing the API call</li> </ul> <p>Returns:</p> <ul> <li><code>api_call</code> dict - Returns the organization team preferences</li> </ul> <p></p>"},{"location":"grafana_api/team/#update_team_preferences","title":"update_team_preferences","text":"<pre><code>def update_team_preferences(id: int,\n                            theme: str = None,\n                            timezone: str = None,\n                            home_dashboard_id: int = 0,\n                            home_dashboard_uid: str = None)\n</code></pre> <p>The method includes a functionality to update the organization team preferences specified by the team_id, theme, timezone and home_dashboard_id or home_dashboard_uid</p> <p>Required Permissions: Action: teams:write Scope: teams:*</p> <p>Arguments:</p> <ul> <li><code>id</code> int - Specify the team id</li> <li><code>theme</code> str - Specify the team theme e.g. light or dark (default Grafana None)</li> <li><code>timezone</code> str - Specify the team timezone e.g. utc or browser (default Grafana None)</li> <li><code>home_dashboard_id</code> int - Specify the home team dashboard by id (default 0)</li> <li><code>home_dashboard_uid</code> str - Specify the home team dashboard by uid (default None)</li> </ul> <p>Raises:</p> <ul> <li><code>ValueError</code> - Missed specifying a necessary value</li> <li><code>Exception</code> - Unspecified error by executing the API call</li> </ul> <p>Returns:</p> <p>None</p> <p></p>"},{"location":"grafana_api/team/#get_external_groups","title":"get_external_groups","text":"<pre><code>def get_external_groups(id: int) -&gt; list\n</code></pre> <p>The method includes a functionality to get the team groups specified by the team_id. The functionality is a Grafana ENTERPRISE feature</p> <p>Required Permissions: Action: teams.permissions:read Scope: teams:*</p> <p>Arguments:</p> <ul> <li><code>id</code> int - Specify the team id</li> </ul> <p>Raises:</p> <ul> <li><code>ValueError</code> - Missed specifying a necessary value</li> <li><code>Exception</code> - Unspecified error by executing the API call</li> </ul> <p>Returns:</p> <ul> <li><code>api_call</code> list - Returns the organization team groups</li> </ul> <p></p>"},{"location":"grafana_api/team/#add_external_group","title":"add_external_group","text":"<pre><code>def add_external_group(id: int, team_group: str)\n</code></pre> <p>The method includes a functionality to add a group to the team specified by the team_id and the team_group. The functionality is a Grafana ENTERPRISE feature</p> <p>Required Permissions: Action: teams.permissions:write Scope: teams:*</p> <p>Arguments:</p> <ul> <li><code>id</code> int - Specify the team id</li> <li><code>team_group</code> str - Specify the team group</li> </ul> <p>Raises:</p> <ul> <li><code>ValueError</code> - Missed specifying a necessary value</li> <li><code>Exception</code> - Unspecified error by executing the API call</li> </ul> <p>Returns:</p> <p>None</p> <p></p>"},{"location":"grafana_api/team/#remove_external_group","title":"remove_external_group","text":"<pre><code>def remove_external_group(id: int, team_group: str)\n</code></pre> <p>The method includes a functionality to remove a group from a team specified by the team_id and the team_group. The functionality is a Grafana ENTERPRISE feature</p> <p>Required Permissions: Action: teams.permissions:write Scope: teams:*</p> <p>Arguments:</p> <ul> <li><code>id</code> int - Specify the team id</li> <li><code>team_group</code> str - Specify the team group</li> </ul> <p>Raises:</p> <ul> <li><code>ValueError</code> - Missed specifying a necessary value</li> <li><code>Exception</code> - Unspecified error by executing the API call</li> </ul> <p>Returns:</p> <p>None</p>"},{"location":"grafana_api/user/","title":"Table of Contents","text":"<ul> <li>user</li> <li>User<ul> <li>search_users</li> <li>search_users_with_paging</li> <li>get_user_by_id</li> <li>get_user_by_username_or_email</li> <li>update_user</li> <li>get_user_organizations</li> <li>get_user_teams</li> <li>switch_specific_user_context</li> </ul> </li> <li>CurrentUser<ul> <li>get_user</li> <li>update_password</li> <li>switch_current_user_context</li> <li>get_user_organizations</li> <li>get_user_teams</li> <li>star_a_dashboard</li> <li>unstar_a_dashboard</li> <li>get_auth_tokens</li> <li>revoke_auth_token</li> </ul> </li> </ul>"},{"location":"grafana_api/user/#user","title":"user","text":""},{"location":"grafana_api/user/#user-objects","title":"User Objects","text":"<pre><code>class User()\n</code></pre> <p>The class includes all necessary methods to access the Grafana user API endpoints. Be aware that all functionalities inside the class only working with basic authentication (username and password) and that the authenticated user is a Grafana Admin.</p> <p>HINT: Note Grafana Enterprise API need required permissions if fine-grained access control is enabled</p> <p>Arguments:</p> <ul> <li><code>grafana_api_model</code> APIModel - Inject a Grafana API model object that includes all necessary values and information</li> </ul> <p>Attributes:</p> <ul> <li><code>grafana_api_model</code> APIModel - This is where we store the grafana_api_model</li> </ul> <p></p>"},{"location":"grafana_api/user/#search_users","title":"search_users","text":"<pre><code>def search_users(results_per_page: int = 1000,\n                 page: int = 1,\n                 sort: str = None) -&gt; list\n</code></pre> <p>The method includes a functionality to get all Grafana system users specified by the optional results_per_page, page and sort option</p> <p>Required Permissions: Action: users:read Scope: global.users:*</p> <p>Arguments:</p> <ul> <li><code>results_per_page</code> int - Specify the results_per_page as integer (default 1000)</li> <li><code>page</code> int - Specify the page as integer (default 1)</li> <li><code>sort</code> str - Specify the sort option. Valid values are login-asc, login-desc, email-asc, email-desc, name-asc, name-desc, lastSeenAtAge-asc and lastSeenAtAge-desc. By default, if sort is not specified, the user list will be ordered by login, email in ascending order (default None)</li> </ul> <p>Raises:</p> <ul> <li><code>Exception</code> - Unspecified error by executing the API call</li> </ul> <p>Returns:</p> <ul> <li><code>api_call</code> list - Returns the list of Grafana users</li> </ul> <p></p>"},{"location":"grafana_api/user/#search_users_with_paging","title":"search_users_with_paging","text":"<pre><code>def search_users_with_paging(results_per_page: int = 1000,\n                             page: int = 1,\n                             query: str = None,\n                             sort: str = None) -&gt; dict\n</code></pre> <p>The method includes a functionality to get all Grafana system users specified by the optional results_per_page, page, query, sort and general paging functionality</p> <p>Required Permissions: Action: users:read Scope: global.users:*</p> <p>Arguments:</p> <ul> <li><code>results_per_page</code> int - Specify the results_per_page as integer (default 1000)</li> <li><code>page</code> int - Specify the page as integer (default 1)</li> <li><code>query</code> str - Specify the query (default None)</li> <li><code>sort</code> str - Specify the sort option. Valid values are login-asc, login-desc, email-asc, email-desc, name-asc, name-desc, lastSeenAtAge-asc and lastSeenAtAge-desc. By default, if sort is not specified, the user list will be ordered by login, email in ascending order (default None)</li> </ul> <p>Raises:</p> <ul> <li><code>Exception</code> - Unspecified error by executing the API call</li> </ul> <p>Returns:</p> <ul> <li><code>api_call</code> dict - Returns the Grafana users</li> </ul> <p></p>"},{"location":"grafana_api/user/#get_user_by_id","title":"get_user_by_id","text":"<pre><code>def get_user_by_id(id: int) -&gt; dict\n</code></pre> <p>The method includes a functionality to get a specific user by the id</p> <p>Required Permissions: Action: users:read Scope: users:*</p> <p>Arguments:</p> <ul> <li><code>id</code> int - Specify the id of the user</li> </ul> <p>Raises:</p> <ul> <li><code>ValueError</code> - Missed specifying a necessary value</li> <li><code>Exception</code> - Unspecified error by executing the API call</li> </ul> <p>Returns:</p> <ul> <li><code>api_call</code> dict - Returns the user information</li> </ul> <p></p>"},{"location":"grafana_api/user/#get_user_by_username_or_email","title":"get_user_by_username_or_email","text":"<pre><code>def get_user_by_username_or_email(username_or_email: str) -&gt; dict\n</code></pre> <p>The method includes a functionality to get a specific user by the username_or_email</p> <p>Required Permissions: Action: users:read Scope: global.users:*</p> <p>Arguments:</p> <ul> <li><code>username_or_email</code> str - Specify the username_or_email of the user</li> </ul> <p>Raises:</p> <ul> <li><code>ValueError</code> - Missed specifying a necessary value</li> <li><code>Exception</code> - Unspecified error by executing the API call</li> </ul> <p>Returns:</p> <ul> <li><code>api_call</code> dict - Returns the user information</li> </ul> <p></p>"},{"location":"grafana_api/user/#update_user","title":"update_user","text":"<pre><code>def update_user(id: int, user: UserObject)\n</code></pre> <p>The method includes a functionality to update the specified user</p> <p>Required Permissions: Action: users:write Scope: users:*</p> <p>Arguments:</p> <ul> <li><code>id</code> int - Specify the id of the user</li> <li><code>user</code> UserObject - Specify the used UserObject</li> </ul> <p>Raises:</p> <ul> <li><code>ValueError</code> - Missed specifying a necessary value</li> <li><code>Exception</code> - Unspecified error by executing the API call</li> </ul> <p>Returns:</p> <p>None</p> <p></p>"},{"location":"grafana_api/user/#get_user_organizations","title":"get_user_organizations","text":"<pre><code>def get_user_organizations(id: int) -&gt; list\n</code></pre> <p>The method includes a functionality to get the specified user organizations</p> <p>Required Permissions: Action: users:read Scope: users:*</p> <p>Arguments:</p> <ul> <li><code>id</code> int - Specify the id of the user</li> </ul> <p>Raises:</p> <ul> <li><code>ValueError</code> - Missed specifying a necessary value</li> <li><code>Exception</code> - Unspecified error by executing the API call</li> </ul> <p>Returns:</p> <ul> <li><code>api_call</code> list - Returns a list of the user bound organizations</li> </ul> <p></p>"},{"location":"grafana_api/user/#get_user_teams","title":"get_user_teams","text":"<pre><code>def get_user_teams(id: int) -&gt; list\n</code></pre> <p>The method includes a functionality to get the specified user teams</p> <p>Required Permissions: Action: users.teams:read Scope: users:*</p> <p>Arguments:</p> <ul> <li><code>id</code> int - Specify the id of the user</li> </ul> <p>Raises:</p> <ul> <li><code>ValueError</code> - Missed specifying a necessary value</li> <li><code>Exception</code> - Unspecified error by executing the API call</li> </ul> <p>Returns:</p> <ul> <li><code>api_call</code> list - Returns a list of the user bound teams</li> </ul> <p></p>"},{"location":"grafana_api/user/#switch_specific_user_context","title":"switch_specific_user_context","text":"<pre><code>def switch_specific_user_context(user_id: int, org_id: int)\n</code></pre> <p>The method includes a functionality to switch the user context to the given organization</p> <p>Arguments:</p> <ul> <li><code>user_id</code> int - Specify the user_id</li> <li><code>org_id</code> int - Specify the org_id</li> </ul> <p>Raises:</p> <ul> <li><code>ValueError</code> - Missed specifying a necessary value</li> <li><code>Exception</code> - Unspecified error by executing the API call</li> </ul> <p>Returns:</p> <p>None</p> <p></p>"},{"location":"grafana_api/user/#currentuser-objects","title":"CurrentUser Objects","text":"<pre><code>class CurrentUser()\n</code></pre> <p>The class includes all necessary methods to access the Grafana current user API endpoints. Be aware that all functionalities inside the class maybe only working with basic authentication (username and password)</p> <p>Arguments:</p> <ul> <li><code>grafana_api_model</code> APIModel - Inject a Grafana API model object that includes all necessary values and information</li> </ul> <p>Attributes:</p> <ul> <li><code>grafana_api_model</code> APIModel - This is where we store the grafana_api_model</li> </ul> <p></p>"},{"location":"grafana_api/user/#get_user","title":"get_user","text":"<pre><code>def get_user() -&gt; dict\n</code></pre> <p>The method includes a functionality to get the current user</p> <p>Raises:</p> <ul> <li><code>Exception</code> - Unspecified error by executing the API call</li> </ul> <p>Returns:</p> <ul> <li><code>api_call</code> dict - Returns the user information</li> </ul> <p></p>"},{"location":"grafana_api/user/#update_password","title":"update_password","text":"<pre><code>def update_password(old_password: str, new_password: str,\n                    confirm_new_password: str)\n</code></pre> <p>The method includes a functionality to update the current user password</p> <p>Arguments:</p> <ul> <li><code>old_password</code> str - Specify the old_password</li> <li><code>new_password</code> str - Specify the new_password</li> <li><code>confirm_new_password</code> str - Specify the confirm_new_password</li> </ul> <p>Raises:</p> <ul> <li><code>ValueError</code> - Missed specifying a necessary value</li> <li><code>Exception</code> - Unspecified error by executing the API call</li> </ul> <p>Returns:</p> <p>None</p> <p></p>"},{"location":"grafana_api/user/#switch_current_user_context","title":"switch_current_user_context","text":"<pre><code>def switch_current_user_context(org_id: int)\n</code></pre> <p>The method includes a functionality to switch the current user context to the given organization</p> <p>Arguments:</p> <ul> <li><code>org_id</code> int - Specify the organization id</li> </ul> <p>Raises:</p> <ul> <li><code>ValueError</code> - Missed specifying a necessary value</li> <li><code>Exception</code> - Unspecified error by executing the API call</li> </ul> <p>Returns:</p> <p>None</p> <p></p>"},{"location":"grafana_api/user/#get_user_organizations_1","title":"get_user_organizations","text":"<pre><code>def get_user_organizations() -&gt; list\n</code></pre> <p>The method includes a functionality to get the current user organizations</p> <p>Raises:</p> <ul> <li><code>Exception</code> - Unspecified error by executing the API call</li> </ul> <p>Returns:</p> <ul> <li><code>api_call</code> list - Returns a list of organizations</li> </ul> <p></p>"},{"location":"grafana_api/user/#get_user_teams_1","title":"get_user_teams","text":"<pre><code>def get_user_teams() -&gt; list\n</code></pre> <p>The method includes a functionality to get the current user teams</p> <p>Raises:</p> <ul> <li><code>Exception</code> - Unspecified error by executing the API call</li> </ul> <p>Returns:</p> <ul> <li><code>api_call</code> list - Returns a list of teams</li> </ul> <p></p>"},{"location":"grafana_api/user/#star_a_dashboard","title":"star_a_dashboard","text":"<pre><code>def star_a_dashboard(dashboard_id: int)\n</code></pre> <p>The method includes a functionality to star a dashboard for the current user</p> <p>Arguments:</p> <ul> <li><code>dashboard_id</code> int - Specify the dashboard id</li> </ul> <p>Raises:</p> <ul> <li><code>ValueError</code> - Missed specifying a necessary value</li> <li><code>Exception</code> - Unspecified error by executing the API call</li> </ul> <p>Returns:</p> <p>None</p> <p></p>"},{"location":"grafana_api/user/#unstar_a_dashboard","title":"unstar_a_dashboard","text":"<pre><code>def unstar_a_dashboard(dashboard_id: int)\n</code></pre> <p>The method includes a functionality to unstar a dashboard for the current user</p> <p>Arguments:</p> <ul> <li><code>dashboard_id</code> int - Specify the dashboard id</li> </ul> <p>Raises:</p> <ul> <li><code>ValueError</code> - Missed specifying a necessary value</li> <li><code>Exception</code> - Unspecified error by executing the API call</li> </ul> <p>Returns:</p> <p>None</p> <p></p>"},{"location":"grafana_api/user/#get_auth_tokens","title":"get_auth_tokens","text":"<pre><code>def get_auth_tokens() -&gt; list\n</code></pre> <p>The method includes a functionality to get the auth tokens for the current user</p> <p>Raises:</p> <ul> <li><code>Exception</code> - Unspecified error by executing the API call</li> </ul> <p>Returns:</p> <ul> <li><code>api_call</code> list - Returns a list of auth tokens of the current user</li> </ul> <p></p>"},{"location":"grafana_api/user/#revoke_auth_token","title":"revoke_auth_token","text":"<pre><code>def revoke_auth_token(auth_token_id: int)\n</code></pre> <p>The method includes a functionality to revoke a specified auth token of the current user</p> <p>Arguments:</p> <ul> <li><code>auth_token_id</code> int - Specify the auth_token_id</li> </ul> <p>Raises:</p> <ul> <li><code>ValueError</code> - Missed specifying a necessary value</li> <li><code>Exception</code> - Unspecified error by executing the API call</li> </ul> <p>Returns:</p> <p>None</p>"}]}