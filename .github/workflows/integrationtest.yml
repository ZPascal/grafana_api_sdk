name: Integrationtest

on:
  schedule:
    - cron: '0 22 * * 1'
  push:
    branches: [ main ]
  workflow_dispatch:
  workflow_call:

jobs:

  grafana-api-sdk-test:
    runs-on: ubuntu-latest
    permissions: read-all
    strategy:
      matrix:
        python-version: [ '3.10' ]

    steps:
      - uses: actions/checkout@v5

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          architecture: x64
          cache: 'pip'

      - name: Install the requirements
        run: pip install -r requirements.txt

      - name: Execute the integrationtests (http1.1)
        run: python3 -m unittest discover tests/integrationtest
        env:
          GRAFANA_HOST: ${{ secrets.GRAFANA_HOST }}
          GRAFANA_TOKEN: ${{ secrets.GRAFANA_TOKEN }}
          GRAFANA_DASHBOARD_PATH: ${{ secrets.GRAFANA_DASHBOARD_PATH }}
          GRAFANA_DASHBOARD_NAME: ${{ secrets.GRAFANA_DASHBOARD_NAME }}
          GRAFANA_USERNAME: ${{ secrets.GRAFANA_USERNAME }}
          GRAFANA_PASSWORD: ${{ secrets.GRAFANA_PASSWORD }}
          HTTP2: "False"

      - name: Wait 20 seconds
        run: sleep 20

      - name: Execute the integrationtests (http2)
        run: python3 -m unittest discover tests/integrationtest
        env:
          GRAFANA_HOST: ${{ secrets.GRAFANA_HOST }}
          GRAFANA_TOKEN: ${{ secrets.GRAFANA_TOKEN }}
          GRAFANA_DASHBOARD_PATH: ${{ secrets.GRAFANA_DASHBOARD_PATH }}
          GRAFANA_DASHBOARD_NAME: ${{ secrets.GRAFANA_DASHBOARD_NAME }}
          GRAFANA_USERNAME: ${{ secrets.GRAFANA_USERNAME }}
          GRAFANA_PASSWORD: ${{ secrets.GRAFANA_PASSWORD }}
          HTTP2: "True"
